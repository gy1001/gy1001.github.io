import{_ as e,M as o,p as c,q as i,R as n,t as s,N as t,a1 as p}from"./framework-e8cb8151.js";const l="/assets/image-20230811140651796-bab02645.png",u="/assets/image-20230811140701036-f4366a47.png",k="/assets/image-20230811140721122-5aa6cdcd.png",r="/assets/image-20230811140738108-185f9e4e.png",d="/assets/image-20230811140749961-efbd8610.png",v={},m=n("h1",{id:"_18-发布-订阅模式-去-adadis-买鞋",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_18-发布-订阅模式-去-adadis-买鞋","aria-hidden":"true"},"#"),s(" 18-"),n("strong",null,"发布-订阅模式：去 adadis 买鞋")],-1),b=n("p",null,[n("img",{src:l,alt:"image-20230811140651796"})],-1),y=n("blockquote",null,[n("p",null,"困难只能吓倒懦夫懒汉，而胜利永远属于敢于等科学高峰的人。 ——茅以升")],-1),g=n("p",null,"在众多设计模式中，可能最常见、最有名的就是发布-订阅模式了，本篇我们一起来学习这个模式。",-1),f=n("p",null,[n("strong",null,"发布-订阅模式"),s(" （Publish-Subscribe Pattern, pub-sub）又叫观察者模式（Observer Pattern），它定义了一种一对多的关系，让多个订阅者对象同时监听某一个发布者，或者叫主题对象，这个主题对象的状态发生变化时就会通知所有订阅自己的订阅者对象，使得它们能够自动更新自己。")],-1),h={href:"https://www.zcfy.cc/article/observer-vs-pub-sub-pattern-hacker-noon",target:"_blank",rel:"noopener noreferrer"},_=n("strong",null,"本文将不对它们之间进行区分",-1),w=n("strong",null,"注意：",-1),x={href:"https://developer.mozilla.org/zh-CN/docs/Glossary/%E7%AB%8B%E5%8D%B3%E6%89%A7%E8%A1%8C%E5%87%BD%E6%95%B0%E8%A1%A8%E8%BE%BE%E5%BC%8F",target:"_blank",rel:"noopener noreferrer"},j={href:"http://es6.ruanyifeng.com/#docs/let",target:"_blank",rel:"noopener noreferrer"},E={href:"http://es6.ruanyifeng.com/#docs/function",target:"_blank",rel:"noopener noreferrer"},B={href:"http://es6.ruanyifeng.com/#docs/function",target:"_blank",rel:"noopener noreferrer"},S=p('<h2 id="_1-你曾遇见过的发布-订阅模式" tabindex="-1"><a class="header-anchor" href="#_1-你曾遇见过的发布-订阅模式" aria-hidden="true">#</a> 1. 你曾遇见过的发布-订阅模式</h2><p>在现实生活中其实我们会经常碰到发布-订阅模式的例子。</p><p>比如当我们进入一个聊天室/群，如果有人在聊天室发言，那么这个聊天室里的所有人都会收到这个人的发言。这是一个典型的发布-订阅模式，当我们加入了这个群，相当于订阅了在这个聊天室发送的消息，当有新的消息产生，聊天室会负责将消息发布给所有聊天室的订阅者。</p><p>再举个栗子，当我们去 adadis 买鞋，发现看中的款式已经售罄了，售货员告诉你不久后这个款式会进货，到时候打电话通知你。于是你留了个电话，离开了商场，当下周某个时候 adadis 进货了，售货员拿出小本本，给所有关注这个款式的人打电话。</p><p>这也是一个日常生活中的一个发布-订阅模式的实例，虽然不知道什么时候进货，但是我们可以登记号码之后等待售货员的电话，不用每天都打电话问鞋子的信息。</p><p>上面两个小栗子，都属于发布-订阅模式的实例，群成员/买家属于消息的订阅者，订阅消息的变化，聊天室/售货员属于消息的发布者，在合适的时机向群成员/小本本上的订阅者发布消息。</p><p>adadis 售货员这个例子的各方关系大概如下图：</p><p><img src="'+u+'" alt="image-20230811140701036"></p><p>在这样的逻辑中，有以下几个特点：</p><ol><li>买家（订阅者）只要声明对消息的一次订阅，就可以在未来的某个时候接受来自售货员（发布者）的消息，不用一直轮询消息的变化；</li><li>售货员（发布者）持有一个小本本（订阅者列表），对这个本本上记录的订阅者的情况并不关心，只需要在消息发生时挨个去通知小本本上的订阅者，当订阅者增加或减少时，只需要在小本本上增删记录即可；</li><li>将上面的逻辑升级一下，一个人可以加多个群，售货员也可以有多个小本本，当不同的群产生消息或者不款式的鞋进货了，发布者可以按照不同的名单/小本本分别去通知订阅了不同类型消息的订阅者，这里有个消息类型的概念；</li></ol><h2 id="_2-实例的代码实现" tabindex="-1"><a class="header-anchor" href="#_2-实例的代码实现" aria-hidden="true">#</a> 2. 实例的代码实现</h2>',11),M={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/EventTarget/addEventListener",target:"_blank",rel:"noopener noreferrer"},P={href:"https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event",target:"_blank",rel:"noopener noreferrer"},N=n("code",null,"onload",-1),z=n("code",null,"onload",-1),V=p(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;load&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;loaded!&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这与买鞋的例子类似，我们不知道什么时候进货，但只需订阅鞋子的消息，进货的时候售货员会打电话通知我们。</p><p>在现实中和编程中我们还会遇到很多这样类似的问题，我们可以将 adadis 的例子提炼一下，用 JavaScript 来实现：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> adadisPub <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">adadisBook</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// adadis售货员的小本本</span>
  <span class="token function">subShoe</span><span class="token punctuation">(</span><span class="token parameter">phoneNumber</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 买家在小本本是登记号码</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>adadisBook<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>phoneNumber<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 售货员打电话通知小本本上的买家</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> customer <span class="token keyword">of</span> <span class="token keyword">this</span><span class="token punctuation">.</span>adadisBook<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      customer<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> customer1 <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">phoneNumber</span><span class="token operator">:</span> <span class="token string">&#39;152xxx&#39;</span><span class="token punctuation">,</span>
  <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>phoneNumber <span class="token operator">+</span> <span class="token string">&#39;: 去商场看看&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> customer2 <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">phoneNumber</span><span class="token operator">:</span> <span class="token string">&#39;138yyy&#39;</span><span class="token punctuation">,</span>
  <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>phoneNumber <span class="token operator">+</span> <span class="token string">&#39;: 给表弟买双&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

adadisPub<span class="token punctuation">.</span><span class="token function">subShoe</span><span class="token punctuation">(</span>customer1<span class="token punctuation">)</span> <span class="token comment">// 在小本本上留下号码</span>
adadisPub<span class="token punctuation">.</span><span class="token function">subShoe</span><span class="token punctuation">(</span>customer2<span class="token punctuation">)</span>

adadisPub<span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 打电话通知买家到货了</span>

<span class="token comment">// 152xxx: 去商场看看</span>
<span class="token comment">// 138yyy: 给表弟买双</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样我们就实现了在有新消息时对买家的通知。</p><p>当然还可以对功能进行完善，比如：</p><ul><li>在登记号码的时候进行一下判重操作，重复号码就不登记了；</li><li>买家登记之后想了一下又不感兴趣了，那么以后也就不需要通知了，增加取消订阅的操作；</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> adadisPub <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">adadisBook</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// adadis售货员的小本本</span>
  <span class="token function">subShoe</span><span class="token punctuation">(</span><span class="token parameter">customer</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 买家在小本本是登记号码</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>adadisBook<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>customer<span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token comment">// 判重</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>adadisBook<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>customer<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">unSubShoe</span><span class="token punctuation">(</span><span class="token parameter">customer</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 取消订阅</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>adadisBook<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>customer<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span>
    <span class="token keyword">const</span> idx <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>adadisBook<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>customer<span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>adadisBook<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>idx<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 售货员打电话通知小本本上的买家</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> customer <span class="token keyword">of</span> <span class="token keyword">this</span><span class="token punctuation">.</span>adadisBook<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      customer<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> customer1 <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">phoneNumber</span><span class="token operator">:</span> <span class="token string">&#39;152xxx&#39;</span><span class="token punctuation">,</span>
  <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>phoneNumber <span class="token operator">+</span> <span class="token string">&#39;: 去商场看看&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> customer2 <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">phoneNumber</span><span class="token operator">:</span> <span class="token string">&#39;138yyy&#39;</span><span class="token punctuation">,</span>
  <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>phoneNumber <span class="token operator">+</span> <span class="token string">&#39;: 给表弟买双&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

adadisPub<span class="token punctuation">.</span><span class="token function">subShoe</span><span class="token punctuation">(</span>customer1<span class="token punctuation">)</span> <span class="token comment">// 在小本本上留下号码</span>
adadisPub<span class="token punctuation">.</span><span class="token function">subShoe</span><span class="token punctuation">(</span>customer1<span class="token punctuation">)</span>
adadisPub<span class="token punctuation">.</span><span class="token function">subShoe</span><span class="token punctuation">(</span>customer2<span class="token punctuation">)</span>
adadisPub<span class="token punctuation">.</span><span class="token function">unSubShoe</span><span class="token punctuation">(</span>customer1<span class="token punctuation">)</span>

adadisPub<span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 打电话通知买家到货了</span>

<span class="token comment">// 138yyy: 给表弟买双</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>到现在我们已经简单完成了一个发布-订阅模式。</p><p>但是还可以继续改进，比如买家可以关注不同的鞋型，那么当某个鞋型进货了，只通知关注了这个鞋型的买家，总不能通知所有买家吧。改写后的代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> adadisPub <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">adadisBook</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// adadis售货员的小本本</span>
  <span class="token function">subShoe</span><span class="token punctuation">(</span><span class="token parameter">type<span class="token punctuation">,</span> customer</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 买家在小本本是登记号码</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>adadisBook<span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 如果小本本上已经有这个type</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>adadisBook<span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>customer<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token comment">// 判重</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>adadisBook<span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>customer<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">this</span><span class="token punctuation">.</span>adadisBook<span class="token punctuation">[</span>type<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>customer<span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">unSubShoe</span><span class="token punctuation">(</span><span class="token parameter">type<span class="token punctuation">,</span> customer</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 取消订阅</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>adadisBook<span class="token punctuation">[</span>type<span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>adadisBook<span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>customer<span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token keyword">return</span>
    <span class="token keyword">const</span> idx <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>adadisBook<span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>customer<span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>adadisBook<span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>idx<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">notify</span><span class="token punctuation">(</span><span class="token parameter">type</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 售货员打电话通知小本本上的买家</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>adadisBook<span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">return</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>adadisBook<span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">customer</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> customer<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> customer1 <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">phoneNumber</span><span class="token operator">:</span> <span class="token string">&#39;152xxx&#39;</span><span class="token punctuation">,</span>
  <span class="token function">update</span><span class="token punctuation">(</span><span class="token parameter">type</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>phoneNumber <span class="token operator">+</span> <span class="token string">&#39;: 去商场看看&#39;</span> <span class="token operator">+</span> type<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> customer2 <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">phoneNumber</span><span class="token operator">:</span> <span class="token string">&#39;138yyy&#39;</span><span class="token punctuation">,</span>
  <span class="token function">update</span><span class="token punctuation">(</span><span class="token parameter">type</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>phoneNumber <span class="token operator">+</span> <span class="token string">&#39;: 给表弟买双&#39;</span> <span class="token operator">+</span> type<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

adadisPub<span class="token punctuation">.</span><span class="token function">subShoe</span><span class="token punctuation">(</span><span class="token string">&#39;运动鞋&#39;</span><span class="token punctuation">,</span> customer1<span class="token punctuation">)</span> <span class="token comment">// 订阅运动鞋</span>
adadisPub<span class="token punctuation">.</span><span class="token function">subShoe</span><span class="token punctuation">(</span><span class="token string">&#39;运动鞋&#39;</span><span class="token punctuation">,</span> customer1<span class="token punctuation">)</span>
adadisPub<span class="token punctuation">.</span><span class="token function">subShoe</span><span class="token punctuation">(</span><span class="token string">&#39;运动鞋&#39;</span><span class="token punctuation">,</span> customer2<span class="token punctuation">)</span>
adadisPub<span class="token punctuation">.</span><span class="token function">subShoe</span><span class="token punctuation">(</span><span class="token string">&#39;帆布鞋&#39;</span><span class="token punctuation">,</span> customer1<span class="token punctuation">)</span> <span class="token comment">// 订阅帆布鞋</span>

adadisPub<span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token string">&#39;运动鞋&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 打电话通知买家运动鞋到货了</span>

<span class="token comment">// 152xxx: 去商场看看运动鞋</span>
<span class="token comment">// 138yyy: 给表弟买双运动鞋</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样买家就可以订阅不同类型的鞋子，售货员也可以只通知关注某特定鞋型的买家了。</p><h2 id="_3-发布-订阅模式的通用实现" tabindex="-1"><a class="header-anchor" href="#_3-发布-订阅模式的通用实现" aria-hidden="true">#</a> 3. 发布-订阅模式的通用实现</h2><p>我们可以把上面例子的几个核心概念提取一下，买家可以被认为是订阅者（Subscriber），售货员可以被认为是发布者（Publisher），售货员持有小本本（SubscriberMap），小本本上记录有买家订阅（subscribe）的不同鞋型（Type）的信息，当然也可以退订（unSubscribe），当鞋型有消息时售货员会给订阅了当前类型消息的订阅者发布（notify）消息。</p><p>主要有下面几个概念：</p><ol><li><strong>Publisher</strong> ：发布者，当消息发生时负责通知对应订阅者</li><li><strong>Subscriber</strong> ：订阅者，当消息发生时被通知的对象</li><li><strong>SubscriberMap</strong> ：持有不同 type 的数组，存储有所有订阅者的数组</li><li><strong>type</strong> ：消息类型，订阅者可以订阅的不同消息类型</li><li><strong>subscribe</strong> ：该方法为将订阅者添加到 SubscriberMap 中对应的数组中</li><li><strong>unSubscribe</strong> ：该方法为在 SubscriberMap 中删除订阅者</li><li><strong>notify</strong> ：该方法遍历通知 SubscriberMap 中对应 type 的每个订阅者</li></ol><p>现在的结构如下图</p><p><img src="`+k+`" alt="image-20230811140721122"></p><p>下面使用通用化的方法实现一下。</p><p>首先我们使用立即调用函数 IIFE（Immediately Invoked Function Expression） 方式来将不希望公开的 <code>SubscriberMap</code> 隐藏，然后可以将注册的订阅行为换为回调函数的形式，这样我们可以在消息通知时附带参数信息，在处理通知的时候也更灵活：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> Publisher <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> _subsMap <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment">// 存储订阅者</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token comment">/* 消息订阅 */</span>
    <span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token parameter">type<span class="token punctuation">,</span> cb</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>_subsMap<span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>_subsMap<span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>cb<span class="token punctuation">)</span><span class="token punctuation">)</span> _subsMap<span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>cb<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> _subsMap<span class="token punctuation">[</span>type<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>cb<span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">/* 消息退订 */</span>
    <span class="token function">unsubscribe</span><span class="token punctuation">(</span><span class="token parameter">type<span class="token punctuation">,</span> cb</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>_subsMap<span class="token punctuation">[</span>type<span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token operator">!</span>_subsMap<span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>cb<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span>
      <span class="token keyword">const</span> idx <span class="token operator">=</span> _subsMap<span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>cb<span class="token punctuation">)</span>
      _subsMap<span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>idx<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">/* 消息发布 */</span>
    <span class="token function">notify</span><span class="token punctuation">(</span><span class="token parameter">type<span class="token punctuation">,</span> <span class="token operator">...</span>payload</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>_subsMap<span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">return</span>
      _subsMap<span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">cb</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">cb</span><span class="token punctuation">(</span><span class="token operator">...</span>payload<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

Publisher<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token string">&#39;运动鞋&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;152xxx&#39;</span> <span class="token operator">+</span> message<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 订阅运动鞋</span>
Publisher<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token string">&#39;运动鞋&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;138yyy&#39;</span> <span class="token operator">+</span> message<span class="token punctuation">)</span><span class="token punctuation">)</span>
Publisher<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token string">&#39;帆布鞋&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;139zzz&#39;</span> <span class="token operator">+</span> message<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 订阅帆布鞋</span>

Publisher<span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token string">&#39;运动鞋&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39; 运动鞋到货了 ~&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 打电话通知买家运动鞋消息</span>
Publisher<span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token string">&#39;帆布鞋&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39; 帆布鞋售罄了 T.T&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 打电话通知买家帆布鞋消息</span>

<span class="token comment">// 输出:  152xxx 运动鞋到货了 ~</span>
<span class="token comment">// 输出:  138yyy 运动鞋到货了 ~</span>
<span class="token comment">// 输出:  139zzz 帆布鞋售罄了 T.T</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面是使用 IIFE 实现的，现在 ES6 如此流行，也可以使用 class 语法来改写一下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Publisher</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>_subsMap <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">/* 消息订阅 */</span>
  <span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token parameter">type<span class="token punctuation">,</span> cb</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_subsMap<span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>_subsMap<span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>cb<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_subsMap<span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>cb<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_subsMap<span class="token punctuation">[</span>type<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>cb<span class="token punctuation">]</span>
  <span class="token punctuation">}</span>

  <span class="token comment">/* 消息退订 */</span>
  <span class="token function">unsubscribe</span><span class="token punctuation">(</span><span class="token parameter">type<span class="token punctuation">,</span> cb</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>_subsMap<span class="token punctuation">[</span>type<span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>_subsMap<span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>cb<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span>
    <span class="token keyword">const</span> idx <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_subsMap<span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>cb<span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>_subsMap<span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>idx<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">/* 消息发布 */</span>
  <span class="token function">notify</span><span class="token punctuation">(</span><span class="token parameter">type<span class="token punctuation">,</span> <span class="token operator">...</span>payload</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>_subsMap<span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">return</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>_subsMap<span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">cb</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">cb</span><span class="token punctuation">(</span><span class="token operator">...</span>payload<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> adadis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Publisher</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

adadis<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token string">&#39;运动鞋&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;152xxx&#39;</span> <span class="token operator">+</span> message<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 订阅运动鞋</span>
adadis<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token string">&#39;运动鞋&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;138yyy&#39;</span> <span class="token operator">+</span> message<span class="token punctuation">)</span><span class="token punctuation">)</span>
adadis<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token string">&#39;帆布鞋&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;139zzz&#39;</span> <span class="token operator">+</span> message<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 订阅帆布鞋</span>

adadis<span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token string">&#39;运动鞋&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39; 运动鞋到货了 ~&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 打电话通知买家运动鞋消息</span>
adadis<span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token string">&#39;帆布鞋&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39; 帆布鞋售罄了 T.T&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 打电话通知买家帆布鞋消息</span>

<span class="token comment">// 输出:  152xxx 运动鞋到货了 ~</span>
<span class="token comment">// 输出:  138yyy 运动鞋到货了 ~</span>
<span class="token comment">// 输出:  139zzz 帆布鞋售罄了 T.T</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-实战中的发布-订阅模式" tabindex="-1"><a class="header-anchor" href="#_4-实战中的发布-订阅模式" aria-hidden="true">#</a> 4. 实战中的发布-订阅模式</h2><h3 id="_4-1-使用-jquery-的方式" tabindex="-1"><a class="header-anchor" href="#_4-1-使用-jquery-的方式" aria-hidden="true">#</a> 4.1 使用 jQuery 的方式</h3><p>我们使用 jQuery 的时候可以通过其自带的 API 比如 <code>on</code>、<code>trigger</code>、<code>off</code> 来轻松实现事件的订阅、发布、取消订阅等操作：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">eventHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;自定义方法&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">/* ---- 事件订阅 ---- */</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;myevent&#39;</span><span class="token punctuation">,</span> eventHandler<span class="token punctuation">)</span>
<span class="token comment">// 发布</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">&#39;myevent&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 输出：自定义方法</span>

<span class="token comment">/* ---- 取消订阅 ---- */</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span><span class="token string">&#39;myevent&#39;</span><span class="token punctuation">)</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">&#39;myevent&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 没有输出</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>甚至我们可以使用原生的 <code>addEventListener</code>、<code>dispatchEvent</code>、<code>removeEventListener</code> 来实现发布订阅：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 输出：自定义方法</span>
<span class="token keyword">function</span> <span class="token function">eventHandler</span><span class="token punctuation">(</span><span class="token parameter">dom</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;自定义方法&#39;</span><span class="token punctuation">,</span> dom<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> app <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;app&#39;</span><span class="token punctuation">)</span>

<span class="token comment">/* ---- 事件订阅 ---- */</span>
app<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;myevent&#39;</span><span class="token punctuation">,</span> eventHandler<span class="token punctuation">)</span>
<span class="token comment">// 发布</span>
app<span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Event</span><span class="token punctuation">(</span><span class="token string">&#39;myevent&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// 输出：自定义方法+DOM</span>

<span class="token comment">/* ---- 取消订阅 ---- */</span>
app<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;myevent&#39;</span><span class="token punctuation">,</span> eventHandler<span class="token punctuation">)</span>
app<span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Event</span><span class="token punctuation">(</span><span class="token string">&#39;myevent&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// 没有输出</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-使用-vue-的-eventbus" tabindex="-1"><a class="header-anchor" href="#_4-2-使用-vue-的-eventbus" aria-hidden="true">#</a> 4.2 使用 Vue 的 EventBus</h3><p>和 jQuery 一样，Vue 也是实现有一套事件机制，其中一个我们熟知的用法是 <code>EventBus</code>。在多层组件的事件处理中，如果你觉得一层层 <code>$on</code>、<code>$emit</code> 比较麻烦，而你又不愿意引入 Vuex，那么这时候推介使用 <code>EventBus</code> 来解决组件间的数据通信：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// event-bus.js</span>

<span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> EventBus <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用时：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 组件A</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> EventBus <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./event-bus.js&#39;</span>

EventBus<span class="token punctuation">.</span><span class="token function">$on</span><span class="token punctuation">(</span><span class="token string">&#39;myevent&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">args</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// 组件B</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> EventBus <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./event-bus.js&#39;</span>

EventBus<span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">&#39;myevent&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;some args&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>实现组件间的消息传递，不过在中大型项目中，还是推介使用 Vuex，因为如果 Bus 上的事件挂载过多，事件满天飞，就分不清消息的来源和先后顺序，对可维护性是一种破坏。</p><h2 id="_5-源码中的发布-订阅模式" tabindex="-1"><a class="header-anchor" href="#_5-源码中的发布-订阅模式" aria-hidden="true">#</a> 5. 源码中的发布-订阅模式</h2><p>发布-订阅模式在源码中应用很多，特别是现在很多前端框架都会有的双向绑定机制的场景，这里以现在很火的 Vue 为例，来分析一下 Vue 是如何利用发布-订阅模式来实现视图层和数据层的双向绑定。先借用官网的双向绑定原理图：</p><p><img src="`+r+'" alt="image-20230811140738108"></p><p>下面稍微解释一下这个图（框架源码整个过程比较复杂，如果现在看不懂下面几段也没关系，大致了解一下即可)。</p>',39),I={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty",target:"_blank",rel:"noopener noreferrer"},O={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Working_with_Objects#%E5%AE%9A%E4%B9%89_getters_%E4%B8%8E_setters",target:"_blank",rel:"noopener noreferrer"},T=n("code",null,"getter",-1),A=p("<p>也就是说，响应式化后的数据相当于<strong>发布者</strong>。</p><p>每个组件都对应一个 Watcher <strong>订阅者</strong>。当每个组件的渲染函数被执行时，都会将本组件的 Watcher 放到自己所依赖的响应式数据的订阅者列表里，这就相当于完成了<strong>订阅</strong>，一般这个过程被称为依赖收集（Dependency Collect）。</p><blockquote><p>组件渲染函数执行的结果是生成虚拟 DOM 树（Virtual DOM Tree），这个树生成后将被映射为浏览器上的真实的 DOM 树，也就是用户所看到的页面视图。</p></blockquote><p>当响应式数据发生变化的时候，也就是触发了 <code>setter</code> 时，<code>setter</code> 会负责<strong>通知</strong>（Notify）该数据的订阅者列表里的 Watcher，Watcher 会触发组件重渲染（Trigger re-render）来更新（update）视图。</p>",4),L={href:"https://github.com/vuejs/vue/blob/v2.5.18/src/core/observer/index.js#L157-L194",target:"_blank",rel:"noopener noreferrer"},C=p(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// src/core/observer/index.js 响应式化过程</span>

Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">enumerable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">configurable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token function">reactiveGetter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">const</span> value <span class="token operator">=</span> getter <span class="token operator">?</span> <span class="token function">getter</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">:</span> val <span class="token comment">// 如果原本对象拥有getter方法则执行</span>
    dep<span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 进行依赖收集，dep.addSub</span>
    <span class="token keyword">return</span> value
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token function">reactiveSetter</span><span class="token punctuation">(</span><span class="token parameter">newVal</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>setter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">setter</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> newVal<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token comment">// 如果原本对象拥有setter方法则执行</span>
    dep<span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 如果发生变更，则通知更新</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>而这个 <code>dep</code> 上的 <code>depend</code> 和 <code>notify</code> 就是订阅和发布通知的具体方法。</p><p>简单来说，响应式数据是消息的发布者，而视图层是消息的订阅者，如果数据更新了，那么发布者会发布数据更新的消息来通知视图更新，从而实现数据层和视图层的双向绑定。</p><h2 id="_6-发布-订阅模式的优缺点" tabindex="-1"><a class="header-anchor" href="#_6-发布-订阅模式的优缺点" aria-hidden="true">#</a> 6. 发布-订阅模式的优缺点</h2><p>发布-订阅模式最大的优点就是<strong>解耦</strong>：</p><ol><li><strong>时间上的解耦</strong> ：注册的订阅行为由消息的发布方来决定何时调用，订阅者不用持续关注，当消息发生时发布者会负责通知；</li><li><strong>对象上的解耦</strong> ：发布者不用提前知道消息的接受者是谁，发布者只需要遍历处理所有订阅该消息类型的订阅者发送消息即可（迭代器模式），由此解耦了发布者和订阅者之间的联系，互不持有，都依赖于抽象，不再依赖于具体；</li></ol><p>由于它的解耦特性，发布-订阅模式的使用场景一般是：当一个对象的改变需要同时改变其它对象，并且它不知道具体有多少对象需要改变。发布-订阅模式还可以帮助实现一些其他的模式，比如<strong>中介者模式</strong>。</p><p>发布-订阅模式也有缺点：</p><ol><li><strong>增加消耗</strong> ：创建结构和缓存订阅者这两个过程需要消耗计算和内存资源，即使订阅后始终没有触发，订阅者也会始终存在于内存；</li><li><strong>增加复杂度</strong> ：订阅者被缓存在一起，如果多个订阅者和发布者层层嵌套，那么程序将变得难以追踪和调试，参考一下 Vue 调试的时候你点开原型链时看到的那堆 deps/subs/watchers 们…</li></ol><p>缺点主要在于理解成本、运行效率、资源消耗，特别是在多级发布-订阅时，情况会变得更复杂。</p><h2 id="_7-其他相关模式" tabindex="-1"><a class="header-anchor" href="#_7-其他相关模式" aria-hidden="true">#</a> 7. 其他相关模式</h2><h3 id="_7-1-发布-订阅模式和观察者模式" tabindex="-1"><a class="header-anchor" href="#_7-1-发布-订阅模式和观察者模式" aria-hidden="true">#</a> 7.1 发布-订阅模式和观察者模式</h3><p>观察者模式与发布-订阅者模式，在平时你可以认为他们是一个东西，但是某些场合（比如面试）下可能需要稍加注意，借用网上一张流行的图：</p><p><img src="`+d+'" alt="image-20230811140749961"></p><p>区别主要在发布-订阅模式中间的这个 Event Channel：</p><ol><li><strong>观察者模式</strong> 中的观察者和被观察者之间还存在耦合，被观察者还是知道观察者的；</li><li><strong>发布-订阅模式</strong> 中的发布者和订阅者不需要知道对方的存在，他们通过<strong>消息代理</strong>来进行通信，解耦更加彻底；</li></ol><h3 id="_7-2-发布-订阅模式和责任链模式" tabindex="-1"><a class="header-anchor" href="#_7-2-发布-订阅模式和责任链模式" aria-hidden="true">#</a> 7.2 发布-订阅模式和责任链模式</h3><p>发布-订阅模式和责任链模式也有点类似，主要区别在于：</p><ol><li><strong>发布-订阅模式</strong> 传播的消息是根据需要随时发生变化，是发布者和订阅者之间约定的结构，在多级发布-订阅的场景下，消息可能完全不一样；</li><li><strong>责任链模式</strong> 传播的消息是不变化的，即使变化也是在原来的消息上稍加修正，不会大幅改变结构；</li></ol><p>推介阅读：</p>',20),W={href:"https://www.zcfy.cc/article/observer-vs-pub-sub-pattern-hacker-noon",target:"_blank",rel:"noopener noreferrer"},q={href:"http://es6.ruanyifeng.com/",target:"_blank",rel:"noopener noreferrer"},D={href:"https://juejin.im/post/5b40c8495188251af3632dfa",target:"_blank",rel:"noopener noreferrer"};function $(F,H){const a=o("ExternalLinkIcon");return c(),i("div",null,[m,b,y,g,f,n("p",null,[s("当然有人提出发布-订阅模式和观察者模式之间是"),n("a",h,[s("有一些区别的"),t(a)]),s("，但是大部分情况下你可以将他们当成是一个模式，"),_,s("，文末会简单讨论一下他们之间的微妙区别，了解即可。")]),n("blockquote",null,[n("p",null,[w,s(" 本文可能用到一些编码技巧比如 "),n("a",x,[s("IIFE"),t(a)]),s("（Immediately Invoked Function Expression, 立即调用函数表达式），ES6 的语法 "),n("a",j,[s("let/const"),t(a)]),s("、"),n("a",E,[s("箭头函数"),t(a)]),s("、"),n("a",B,[s("rest 参数"),t(a)]),s("等，如果还没接触过可以点击链接稍加学习 ~")])]),S,n("p",null,[s("如果你在 DOM 上绑定过事件处理函数 "),n("a",M,[s("addEventListener"),t(a)]),s("，那么你已经使用过发布-订阅模式了。")]),n("p",null,[s("我们经常将一些操作挂载在 "),n("a",P,[s("onload"),t(a)]),s(" 事件上执行，当页面元素加载完毕，就会触发你注册在 "),N,s(" 事件上的回调。我们无法预知页面元素何时加载完毕，但是通过订阅 window 的 "),z,s(" 事件，window 会在加载完毕时向订阅者发布消息，也就是执行回调函数。")]),V,n("p",null,[s("组件渲染函数（Component Render Function）被执行前，会对数据层的数据进行响应式化。响应式化大致就是使用 "),n("a",I,[s("Object.defineProperty"),t(a)]),s(" 把数据转为 "),n("a",O,[s("getter/setter"),t(a)]),s("，并为每个数据添加一个订阅者列表的过程。这个列表是 "),T,s(" 闭包中的属性，将会记录所有依赖这个数据的组件。")]),A,n("p",null,[s("我们可以看看 Vue 的"),n("a",L,[s("源码"),t(a)]),s("：")]),C,n("blockquote",null,[n("ol",null,[n("li",null,[n("a",W,[s("观察者模式 vs 发布订阅模式，千万不要再混淆了"),t(a)])]),n("li",null,[n("a",q,[s("ECMAScript 6 入门 - 阮一峰"),t(a)])]),n("li",null,[n("a",D,[s("Vue 源码阅读 - 依赖收集原理"),t(a)])])])])])}const J=e(v,[["render",$],["__file","index-18.html.vue"]]);export{J as default};
