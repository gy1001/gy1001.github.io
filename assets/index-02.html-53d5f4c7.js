import{_ as e,p as s,q as a,a1 as n}from"./framework-e8cb8151.js";const i="/assets/image-20230728103856827-83ea2c97.png",d="/assets/image-20230728103950918-113421c2.png",t="/assets/image-20230728104000752-56515111.png",c="/assets/image-20230728104016719-83c88d84.png",o="/assets/image-20230728104056829-2ed9473b.png",l="/assets/image-20230728104104040-1e9fa541.png",r="/assets/image-20230728104114378-c3f6d338.png",p="/assets/image-20230728104158464-8121b4dd.png",h={},u=n('<h1 id="_02-环境准备-在各系统中快速安装-git-环境" tabindex="-1"><a class="header-anchor" href="#_02-环境准备-在各系统中快速安装-git-环境" aria-hidden="true">#</a> 02-环境准备：在各系统中快速安装 git 环境</h1><p><img src="'+i+'" alt="image-20230728103856827"></p><blockquote><p>机会不会上门来找人，只有人去找机会。 ——狄更斯</p></blockquote><p>在学习 <code>Git</code> 命令操作之前，我们先把 <code>Git</code> 的环境给搭建一下，这一节当中主要会教大家安装 <code>Git</code> 和一些命令智能提示的工具；<code>Git</code> 的安装相对来说非常简单， 并且不少 Linux 系统自带了 <code>Git</code> 工具；</p><p>如果你的系统当中已经安装了 <code>Git</code>，那么可以跳过相应的安装步骤，是否已经安装，可以通过下面安装的验证环节进行验证。大部分读者应该使用的是 Windows 系统，默认是没有安装 <code>Git</code> 工具的，可以通过下面的方法进行安装。</p><h2 id="_2-1-安装-git" tabindex="-1"><a class="header-anchor" href="#_2-1-安装-git" aria-hidden="true">#</a> 2.1 安装 Git</h2><p><code>Git</code> 可以通过图形化界面管理，也可以通过命令行管理，为了让读者能更好地理解 <code>Git</code> 的操作和使用效率，我们后续的内容都是以命令操作为主的讲解，在后面会单独拿出一小节教大家使用图形化管理。</p><h3 id="_2-1-1-windows-安装" tabindex="-1"><a class="header-anchor" href="#_2-1-1-windows-安装" aria-hidden="true">#</a> 2.1.1 Windows 安装</h3><p>在 Windows 系统中安装 <code>Git</code> 非常简单，只需要下载 <code>Git</code> 的安装包，然后安装引导点击安装即可：</p><blockquote><p>Git 下载地址：https://git-scm.com/download/win</p></blockquote><p>下载完安装包之后，双击 EXE 安装包，可以看到如下图窗口界面，一直点击 <code>Next</code> 安装即可：</p><p><img src="'+d+'" alt="image-20230728103950918"></p><p>在安装完成之后，会在你的右键菜单栏中增加一个 <code>Git</code> 的选项，你可以在电脑桌面点击鼠标<code>右键</code>，会看到多出两个菜单，如下图所示：</p><p><img src="'+t+'" alt="image-20230728104000752"></p><p>当你点击 <code>git bash Here</code> 菜单之后，可以看到一个终端窗口，在终端里面输入命令 <code>git —version</code>，如果可以看到 git 的版本信息，则说明安装成功，如下图所示：</p><img src="'+c+'" alt="image-20230728104016719"><h3 id="_2-1-2-mac-os-安装" tabindex="-1"><a class="header-anchor" href="#_2-1-2-mac-os-安装" aria-hidden="true">#</a> 2.1.2 Mac OS 安装</h3><p>我平时自己使用 Mac 比较多，不记得 Mac 是否自带了 <code>Git</code>；如果你的 Mac 系统当中没有 <code>Git</code> 工具，那么就安装一下吧。Mac 安装的方法也非常简单，这里推荐大家使用最简单的方法安装，直接下载 pkg 的安装包安装即可：</p><blockquote><p>Mac 版本 Git 下载地址：https://git-scm.com/download/mac</p></blockquote><p>下载下来之后可以看到一个 <code>dmg</code> 文件，双击打开 <code>dmg</code> 压缩文件，可以看到里面有一个 <code>pgk</code> 文件，如下图所示：</p><img src="'+o+'" alt="image-20230728104056829"><p>再次双击 pkg 文件，就可以进行安装，然后按照引导一直点击<code>继续</code>按钮就可以完成安装了，如下图所示：</p><img src="'+l+'" alt="image-20230728104104040"><p>安装完成之后，打开终端，在终端当中输入 <code>git —version</code>, 如果可以看到 Git 的版本号，说明已经成功安装，如下图所示：</p><img src="'+r+`" alt="image-20230728104114378"><h3 id="_2-1-3-linux-安装" tabindex="-1"><a class="header-anchor" href="#_2-1-3-linux-安装" aria-hidden="true">#</a> 2.1.3 Linux 安装</h3><p>Linux 其实通常默认已经自带了 <code>Git</code>，但考虑到少部分精简过的系统没有自带 <code>Git</code>，这里也简单提及一下安装方法；Linux 通常有多个发行版本，安装方式略有不同，不过都非常的简单，只需要一条命令即可安装完成，这里以常见的 <code>Ubuntu</code> 和 <code>Cent os</code> 为例。</p><p>ubuntu 系统的安装命令如下:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">apt</span> <span class="token function">install</span> <span class="token function">git</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Centos 系统安装命令如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>yum -y install git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>安装完成之后，打开终端，在终端当中输入 <code>git —version</code>, 如果可以看到 Git 的版本号，说明已经成功安装：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>➜  ~ <span class="token function">git</span> <span class="token parameter variable">--version</span>
<span class="token function">git</span> version <span class="token number">2.21</span>.0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-2-安装-zsh" tabindex="-1"><a class="header-anchor" href="#_2-2-安装-zsh" aria-hidden="true">#</a> 2.2 安装 zsh</h2><p>安装 <code>zsh</code> 的目的是为了接下来安装 <code>oh-my-zsh</code>，因为 <code>oh-my-zsh</code> 是基于 <code>zsh</code> 的一个主题；所以在安装 <code>oh-my-zsh</code> 之前，必须要安装 zsh，至于 <code>oh-my-zsh</code> 的用处可以先跳到下面的 <code>oh-my-zsh</code> 小节中查看，选择是否安装，下面我带着大家安装一下 <code>zsh</code>。</p><blockquote><p>在这 2.1 小节当中 <code>Git</code> 工具的安装已经完成了。本节下面的内容属于附加内容，会提及在 Linux 下和 Mac 的一些辅助工具的安装，在 Windows 默认的终端下无法安装，只限于 Linux 和 Mac 系统安装。</p></blockquote><h3 id="_2-2-1-mac-安装-zsh" tabindex="-1"><a class="header-anchor" href="#_2-2-1-mac-安装-zsh" aria-hidden="true">#</a> 2.2.1 mac 安装 zsh</h3><p>使用 mac 系统的读者相信大部分都按照了 <code>homebrew</code>，因此建议直接使用 brew 的方式来安装 zsh，命令如下所示：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>brew install zsh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>安装过程中，终端会出现如下信息：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">==</span><span class="token operator">&gt;</span> Installing <span class="token function">zsh</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> Downloading https://homebrew.bintray.com/bottles/zsh-5.7.1.mojave.bottle.tar
<span class="token operator">==</span><span class="token operator">&gt;</span> Downloading from https://akamai.bintray.com/79/793d87f67e64a5e01dfdea890af21
<span class="token comment">######################################################################## 100.0%</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> Pouring zsh-5.7.1.mojave.bottle.tar.gz
  /usr/local/Cellar/zsh/5.7.1: <span class="token number">1,515</span> files, <span class="token number">13</span>.3MB
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-1-linux-安装-zsh" tabindex="-1"><a class="header-anchor" href="#_2-2-1-linux-安装-zsh" aria-hidden="true">#</a> 2.2.1 Linux 安装 zsh</h3><p>Linux 中安装 zsh 同样非常简单，只需要一条命令即可完成安装，考虑到 Linux 多个版本，不同版本的安装方式不同，这里以 Ubuntu 和 centos 为例：</p><p>Ubuntu 安装 zsh 命令：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>apt install zsh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>centos 安装 zsh 命令：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>yum install zsh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>下面我以 Ubuntu 为例，执行安装命令之后可以看到返回如下信息：</p><img src="`+p+`" alt="image-20230728104158464"><h2 id="_2-3-oh-my-zsh" tabindex="-1"><a class="header-anchor" href="#_2-3-oh-my-zsh" aria-hidden="true">#</a> 2.3 oh-my-zsh</h2><p>安装 oh-my-zsh 的目的是为了让大家可以更快速的学习 <code>Git</code> 的命令行操作，它能够给我们在输入一些 <code>Git</code> 命令时候提供很大的方便。</p><h3 id="_2-3-1-安装-oh-my-zsh" tabindex="-1"><a class="header-anchor" href="#_2-3-1-安装-oh-my-zsh" aria-hidden="true">#</a> 2.3.1 安装 oh-my-zsh</h3><p>因为 oh-my-zsh 是基于 zsh，它的安装方式和系统本身关联关系，因此统一的安装命令如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sh</span> <span class="token parameter variable">-c</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh<span class="token variable">)</span></span>&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>执行安装命令完成之后，可以看到终端如下信息：</p><div class="language-zh line-numbers-mode" data-ext="zh"><pre class="language-zh"><code>         __                                     __
  ____  / /_     ____ ___  __  __   ____  _____/ /_
 / __ \\/ __ \\   / __ \`__ \\/ / / /  /_  / / ___/ __ \\
/ /_/ / / / /  / / / / / / /_/ /    / /_(__  ) / / /
\\____/_/ /_/  /_/ /_/ /_/\\__, /    /___/____/_/ /_/
                        /____/                       ....is now installed!

Please look over the ~/.zshrc file to select plugins, themes, and options.
p.s. Follow us on https://twitter.com/ohmyzsh
p.p.s. Get stickers, shirts, and coffee mugs at https://shop.planetargon.com/collections/oh-my-zsh
➜  ~
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-2-测试验证" tabindex="-1"><a class="header-anchor" href="#_2-3-2-测试验证" aria-hidden="true">#</a> 2.3.2 测试验证</h3><p>安装成功之后，会看到终端发现明显的变化，当你输入命令的一部分再按下 tab 键时，它会给你一些相应的提示或者自动补全，比如当你输入：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> st
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>再按下 tab 键，在终端会看到如下效果：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>➜  ~ git st
stash      -- stash away changes to dirty working directory
status     -- show working-tree status
stripspace -- filter out empty lines
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>除了自动补全和命令提示外，还可以给你纠错，比如当你输入命令：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>git statsu
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>它会告诉你 git 没有这个命令，并提示你相对应正确的命令，如下所示：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>➜  ~ git statsu
git: &#39;statsu&#39; is not a git command. See &#39;git --help&#39;.

The most similar command is
	status
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-4-本章小结" tabindex="-1"><a class="header-anchor" href="#_2-4-本章小结" aria-hidden="true">#</a> 2.4 本章小结</h2><p>在这一节当中主要讲解了 <code>Git</code> 和辅助工具 <code>oh-my-zsh</code> 的安装与验证方法：</p><ol><li><code>Git</code> 的安装非常简单，去官网下载对应系统的安装包按照引导安装即可；</li><li>安装 <code>oh-my-zsh</code> 的目的是为了让在终端当中有智能提示；</li><li><code>oh-my-zsh</code>是基于 <code>zsh</code> 的一个主题，安装之前必须先安装<code>zsh</code>。</li></ol>`,68),m=[u];function v(g,_){return s(),a("div",null,m)}const x=e(h,[["render",v],["__file","index-02.html.vue"]]);export{x as default};
