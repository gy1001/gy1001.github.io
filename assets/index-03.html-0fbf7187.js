import{_ as t,M as o,p as c,q as l,R as n,t as s,N as e,a1 as p}from"./framework-e8cb8151.js";const i={},u=p(`<h1 id="_03-入门到进阶-玩转-webapck-打包构建" tabindex="-1"><a class="header-anchor" href="#_03-入门到进阶-玩转-webapck-打包构建" aria-hidden="true">#</a> 03-入门到进阶：玩转 Webapck 打包构建</h1><h2 id="_01-webpack-快读上手" tabindex="-1"><a class="header-anchor" href="#_01-webpack-快读上手" aria-hidden="true">#</a> 01: webpack 快读上手</h2><h3 id="webpack-核心概念" tabindex="-1"><a class="header-anchor" href="#webpack-核心概念" aria-hidden="true">#</a> webpack 核心概念</h3><ul><li>entry：入口模块文件路径</li><li>output：输出 bundle 文件路径</li><li>module: 模块，webpack 构建对象</li><li>bundle：输出文件，webpack 构建产物</li><li>chunk：中间文件，webpack 构建的中间产物</li><li>loader：文件转换器</li><li>plugin：插件，执行特定任务</li></ul><h2 id="_02-webpack-快速入门-基础代码演示" tabindex="-1"><a class="header-anchor" href="#_02-webpack-快速入门-基础代码演示" aria-hidden="true">#</a> 02: webpack 快速入门+基础代码演示</h2><h3 id="quick-start" tabindex="-1"><a class="header-anchor" href="#quick-start" aria-hidden="true">#</a> Quick Start</h3><ol><li><p>新建文件夹<code>wepack-demo</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> webpack-demo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>执行初始化命令,根据提示输入内容</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> webpack-demo
<span class="token function">npm</span> init
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>创建<code>src/index.js</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> src
<span class="token builtin class-name">cd</span> src
<span class="token function">touch</span> index.js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>写入如下内容</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hello webpack&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>创建<code>public/index.html</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> public
<span class="token builtin class-name">cd</span> public
<span class="token function">touch</span> index.html
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>写入如下内容(引入未来打包构建的<code>dist/bundle.js</code>文件)</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>X-UA-Compatible<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>IE=edge<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial-scale=1.0<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../dist/bundle.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>创建<code>wepack.config.js</code>，并写入配置如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">&#39;development&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">&#39;./src/index.js&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">path</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;./dist&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">&#39;bundle.js&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>安装依赖</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-D</span> webpack webpack-cli
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>配置<code>build</code>命令为<code>webpack</code>,在<code>package.json</code>中增加如下内容</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token string-property property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;webpack&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>执行打包命令，完成打包构建</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> run build
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>运行<code>public/index.html</code>，可以看到打印结果</p></li><li><p>这里我们可以打开打包后的文件，删除注释后，得到如下的一个结果</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> __webpack_modules__ <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&#39;./src/index.js&#39;</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">eval</span><span class="token punctuation">(</span>
        <span class="token string">&quot;console.log(&#39;hello webpack&#39;)\\n\\n\\n//# sourceURL=webpack://webpack-demo/./src/index.js?&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">var</span> __webpack_exports__ <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  __webpack_modules__<span class="token punctuation">[</span><span class="token string">&#39;./src/index.js&#39;</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="_03-webpack-source-map-原理讲解" tabindex="-1"><a class="header-anchor" href="#_03-webpack-source-map-原理讲解" aria-hidden="true">#</a> 03：webpack source-map 原理讲解</h2><p>通过<code>devtool</code>可以得到完全不同的打包源码，会对打包性能也有重大影响。</p><h3 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章" aria-hidden="true">#</a> 参考文章</h3>`,10),r=n("code",null,"devtool",-1),d={href:"https://webpack.js.org/configuration/devtool/",target:"_blank",rel:"noopener noreferrer"},k={href:"http://www.ruanyifeng.com/blog/2013/01/javascript_source_map.html",target:"_blank",rel:"noopener noreferrer"},v={href:"https://segmentfault.com/a/1190000008315937",target:"_blank",rel:"noopener noreferrer"},m={href:"https://juejin.cn/post/7209648356530962489",target:"_blank",rel:"noopener noreferrer"},b={href:"https://juejin.cn/post/6969748500938489892#heading-18",target:"_blank",rel:"noopener noreferrer"},g={href:"https://juejin.cn/post/7199895323187347514#heading-5",target:"_blank",rel:"noopener noreferrer"},h=p(`<h3 id="代码实操" tabindex="-1"><a class="header-anchor" href="#代码实操" aria-hidden="true">#</a> 代码实操</h3><p>修改<code>webpack.config.js</code>文件如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">&#39;development&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">&#39;./src/index.js&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">path</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;./dist&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">&#39;bundle.js&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">devtool</span><span class="token operator">:</span> <span class="token string">&#39;source-map&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 添加如下代码</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重新执行<code>npm run build</code>，可以看到<code>dist</code> 目录下多了一个<code>bundle.js.map</code>文件，而<code>bundle.js</code>文件内容如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/******/</span> <span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// webpackBootstrap</span>
  <span class="token keyword">var</span> __webpack_exports__ <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token comment">/*!**********************!*\\
  !*** ./src/index.js ***!
  \\**********************/</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hello webpack&#39;</span><span class="token punctuation">)</span>

  <span class="token doc-comment comment">/******/</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">//# sourceMappingURL=bundle.js.map</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>而<code>bundle.js.map</code>文件内容如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token string-property property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;file&quot;</span><span class="token operator">:</span> <span class="token string">&quot;bundle.js&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 对应的源文件</span>
  <span class="token string-property property">&quot;mappings&quot;</span><span class="token operator">:</span> <span class="token string">&quot;;;;;;AAAA&quot;</span><span class="token punctuation">,</span><span class="token comment">// 我对源文件中哪一行进行映射，第6行开始</span>
  <span class="token comment">// 转换前的文件。该项是一个数组，可能存在多个文件合并成一个文件。</span>
  <span class="token string-property property">&quot;sources&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;webpack://webpack-demo/./src/index.js&quot;</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token comment">// sourceContent: 原始内容。</span>
  <span class="token string-property property">&quot;sourcesContent&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;console.log(&#39;hello webpack&#39;)\\n&quot;</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token comment">// 转换前的所有变量名和属性名。</span>
  <span class="token string-property property">&quot;names&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;sourceRoot&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>mappings 位置对应的原理</strong></p><table><thead><tr><th style="text-align:left;">分析角度</th><th>含义</th></tr></thead><tbody><tr><td style="text-align:left;">行对应</td><td>以分号（;）表示，每个分号对应转换后源码的一行。所以，第一个分号前的内容，就对应源码的第一行，以此类推。</td></tr><tr><td style="text-align:left;">位置对应</td><td>以逗号（,）表示，每个逗号对应转换后源码的一个位置。所以，第一个逗号前的内容，就对应该行源码的第一个位置，以此类推。</td></tr><tr><td style="text-align:left;">分词信息</td><td>以 VLQ 编码表示，代表记录该位置对应的转换前的源码位置、原来属于那个文件等信息。</td></tr></tbody></table><ul><li>【行对应】很好理解，即一个分号为一行，因为压缩后基本上都是一行了，所以这个没啥有用信息；</li><li>【位置对应】可以理解为分词，每个逗号对应转换后源码的一个位置；</li><li>【分词信息】是关键，如<code>AAAA</code>代表该位置转换前的源码位置，以<code>VLQ</code>编码表示；</li></ul><p>每个位置使用五位，表示五个字段（webpack 5.xx 打包后只留下四位，第五位不是必需的）</p><div class="language-tex line-numbers-mode" data-ext="tex"><pre class="language-tex"><code>从左边开始
　　- 第一位，表示这个位置在（转换后的代码的）的第几列。
　　- 第二位，表示这个位置属于sources属性中的哪一个文件。
　　- 第三位，表示这个位置属于转换前代码的第几行。
　　- 第四位，表示这个位置属于转换前代码的第几列。
　　- 第五位，表示这个位置属于names属性中的哪一个变量。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="个人总结" tabindex="-1"><a class="header-anchor" href="#个人总结" aria-hidden="true">#</a> 个人总结</h3><p>读了很多文章，大概了解了<code>VLQ编码</code>转换的一些规则</p><ol><li><p>实际上只有 <strong>每个分号中的第一串英文</strong> 是用来表示代码的 <strong>第几行、第几列</strong> 的绝对位置外，后面的都是相对于之前的位置来做 <strong>加减法</strong> 的</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/430f2bbe58b2452da5c40148097a9b2d~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p></li><li><p>注意：Base-VLQ 编码》</p><blockquote><p>对于正负而言，编码规则设定<strong>第一个单元的最后一位用于表示正负数，零正一负</strong>；</p><ul><li><strong>这里需要注意，为什么说是【第一个单元】，因为一共六个位，去掉一个表示连续，一个表示正负，那能表示的范围是[-15,15]，如果数字过大，就会需要多个单元去描述非第一个单元是不需要表示正负的，所以只需要最高位表示是否终止即可。</strong></li></ul></blockquote><ul><li>见名知意，其实就是 VLQ 编码方式和 base64 编码的结合。不过有几点与 VLQ 的区别也需要注意一下 <ul><li>Base64 VLQ 需要能够表示负数,于是用第一个单元的最后一位来作为符号标志位</li><li>在 Base64 VLQ 中，因为要和 base64 相对应，所以修改<code>vlq</code>7 位一组的设定，改为 5 位一组，加上设定为最高位的连续位正好六位。</li></ul></li><li>举例子 <ul><li>对于 7： 二进制是 111， <ul><li>只有一个单元，自然最高位是 0；</li><li>正数，所以最后一位是 0；</li><li>最后只有三位，所以前置位补 0；</li><li>得出的 VLQ 编码就是<code>001110</code>；</li><li><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bfef3c9831194a3bb1b24d4ee4339d38~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></li></ul></li><li><strong>对于 1200</strong>：二进制是：10010110000 <ul><li>多个单元，所以连续，最高位是 1；</li><li>正数，所以最后一位是 0；</li><li>超过一个单元，所以对于第一个单元在二进制中从后取出四个数出来填充四位即可</li><li>那得到的第一个单元的组成就是<code>100000</code></li><li>再完成第二个单元 <ul><li>还是填不满，所以联系，最高位是 1</li><li>非第一个单元，所以不管正负了，取出五个数填充五位即可</li><li>得到的第二个单元的组成就是<code>101011</code></li></ul></li><li>例推下去，最后得到的结果即<code>100000101011000010</code></li><li><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4aa865e15d904a34ae4c8db322945c35~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></li></ul></li></ul></li></ul></li><li><p>VLQ 编码和 base64 编码的对应关系如下表：</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ebe0b5c88f56454f9a7b2088d92b5b27~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p></li></ol><h2 id="_04-通过-webpack-loader-打包-css-文件" tabindex="-1"><a class="header-anchor" href="#_04-通过-webpack-loader-打包-css-文件" aria-hidden="true">#</a> 04：通过 webpack loader 打包 css 文件</h2><h3 id="loader-解决了什么问题" tabindex="-1"><a class="header-anchor" href="#loader-解决了什么问题" aria-hidden="true">#</a> loader 解决了什么问题</h3><ul><li>将除了<code>js</code>以外其他资源转换为<code>js</code></li></ul><h3 id="loader-执行顺序" tabindex="-1"><a class="header-anchor" href="#loader-执行顺序" aria-hidden="true">#</a> loader 执行顺序</h3><ul><li>从右到左（或者说：从下到上）依次执行</li></ul><h3 id="quick-start-1" tabindex="-1"><a class="header-anchor" href="#quick-start-1" aria-hidden="true">#</a> Quick Start</h3><ol><li><p>创建<code>index.css</code>,内容如下</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.test</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>在<code>index.js</code>(entry)中引入<code>index.css</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token string">&#39;./index.css&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hello webpack&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>修改<code>public/index.html</code>如下</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>test<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>重新执行<code>npm run build</code>会引发错误</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>Module parse failed<span class="token operator">:</span> Unexpected <span class="token function">token</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">)</span>
You may need an appropriate loader to handle <span class="token keyword">this</span> file type<span class="token punctuation">,</span> currently no loaders are configured to process <span class="token keyword">this</span> file<span class="token punctuation">.</span> See https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>webpack<span class="token punctuation">.</span>js<span class="token punctuation">.</span>org<span class="token operator">/</span>concepts#loaders
<span class="token operator">&gt;</span> <span class="token punctuation">.</span>test<span class="token punctuation">{</span>
<span class="token operator">|</span>   width<span class="token operator">:</span> 100px<span class="token punctuation">;</span>
<span class="token operator">|</span>   height<span class="token operator">:</span> 100px<span class="token punctuation">;</span>
 @ <span class="token punctuation">.</span><span class="token operator">/</span>src<span class="token operator">/</span>index<span class="token punctuation">.</span>js <span class="token number">1</span><span class="token operator">:</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">20</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>安装<code>css-loader</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> <span class="token function">npm</span> <span class="token function">install</span> css-loader <span class="token parameter variable">-D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>修改配置文件<code>webpack.config.js</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>
  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;css-loader&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>再次执行<code>npm run build</code>，打包编译成功</p></li><li><p>但是运行页面至浏览器，发现仍然没有显示</p></li><li><p>查找原因</p><ol><li><p>通过查看<code>bundle.js</code>可以看到如下</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a1df6fe2a9d14069a96bbd2bbe5bfb34~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p></li><li><p>生成了一个变量<code>___CSS_LOADER_EXPORT___</code>，但是导出后并没有进行下一步的处理</p></li></ol></li><li><p>需要再安装一个插件<code>style-loader</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> style-loader  <span class="token parameter variable">-D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>修改配置文件<code>webpack.config.js</code>内容如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>
  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;style-loader&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;css-loader&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="_05-创建属于自己的文件类型-自定义-loader-开发" tabindex="-1"><a class="header-anchor" href="#_05-创建属于自己的文件类型-自定义-loader-开发" aria-hidden="true">#</a> 05：创建属于自己的文件类型：自定义 loader 开发</h2><ol><li><p>我们新建测试文件<code>/src/test.imooc</code>文件，内容如下</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>index.js</code>中引入该文件</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> value <span class="token keyword">from</span> <span class="token string">&#39;./test.imooc&#39;</span>
<span class="token keyword">import</span> <span class="token string">&#39;./index.css&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hello webpack&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>新建<code>loader/imooc-loader.js</code>文件，内容如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;script&gt;([\\s\\S]+?)&lt;\\/script&gt;</span><span class="token regex-delimiter">/</span></span>

module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">source</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> __source <span class="token operator">=</span> source<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>reg<span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;=imooc loader running=&#39;</span><span class="token punctuation">,</span> __source<span class="token punctuation">)</span>
  <span class="token keyword">return</span> __source <span class="token operator">&amp;&amp;</span> __source<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
<span class="token comment">// 判断当前模块是否是主模块，如果是主模块，就运行以下代码</span>
<span class="token comment">// 可以用来对 loader 进行单独处理 比如单独运行 node ./loader/imooc-loader.js 时会运行</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>require<span class="token punctuation">.</span>main <span class="token operator">===</span> module<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> source <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;script&gt;
  export default {
    a: 1,
    b: 2
  }
  &lt;/script&gt;</span><span class="token template-punctuation string">\`</span></span>
  <span class="token keyword">const</span> match <span class="token operator">=</span> source<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>reg<span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>match<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>修改配置文件<code>webpack.config.js</code>，内容如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">&#39;development&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">&#39;./src/index.js&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">path</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;./dist&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">&#39;bundle.js&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">devtool</span><span class="token operator">:</span> <span class="token string">&#39;source-map&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span> <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;style-loader&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;css-loader&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.imooc$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;./loader/imooc-loader.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>重新运行<code>npm run build</code>进行打包，可以在终端看到打印的代码，重新运行<code>index.html</code>至浏览器中，可以看到控制台打印的结果</p></li></ol><h3 id="内联调用-loader" tabindex="-1"><a class="header-anchor" href="#内联调用-loader" aria-hidden="true">#</a> 内联调用 loader</h3><ol><li><p>我们修改<code>webpack.config.js</code>文件，不对<code>css</code>文件进行处理, 删除 <code>css</code> 处理规则</p></li><li><p>修改<code>index.js</code>中文件如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token string">&#39;style-loader!css-loader!./index.css&#39;</span> <span class="token comment">// 内联式调用 loader</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>重新打包，可以发现一切如常</p></li></ol><p>缺点：</p><ol><li>调用繁琐</li><li>多次调用需要多次拼接</li><li>此用法不建议使用，了解即可</li></ol><h2 id="_06-webpack-plugin-入门-bannerplugin-源码解析" tabindex="-1"><a class="header-anchor" href="#_06-webpack-plugin-入门-bannerplugin-源码解析" aria-hidden="true">#</a> 06：webpack plugin 入门 + BannerPlugin 源码解析</h2><h3 id="解决了什么问题" tabindex="-1"><a class="header-anchor" href="#解决了什么问题" aria-hidden="true">#</a> 解决了什么问题 ？</h3><p><code>webpack</code> 构建生命周期功能定制问题， <code>webpack</code> 本身就是一个构建过程的状态机，其自身的核心功能也是在构建在 <code>loader</code> 和 <code>plugin</code> 的机制上</p><h3 id="webpack-hooks" tabindex="-1"><a class="header-anchor" href="#webpack-hooks" aria-hidden="true">#</a> webpack hooks</h3>`,32),y=n("code",null,"compiler 钩子",-1),f={href:"https://www.webpackjs.com/api/compiler-hooks/#hooks",target:"_blank",rel:"noopener noreferrer"},w=n("code",null,"compilation 钩子",-1),x={href:"https://www.webpackjs.com/api/compilation-hooks/",target:"_blank",rel:"noopener noreferrer"},j=p(`<h3 id="qucik-start" tabindex="-1"><a class="header-anchor" href="#qucik-start" aria-hidden="true">#</a> Qucik Start</h3><p>使用官方 BannerPlugin 来进行一个流程的梳理</p><ol><li><p>修改<code>webpack.config.js</code>文件，添加如下代码</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> webpack <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;webpack&#39;</span><span class="token punctuation">)</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>BannerPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">banner</span><span class="token operator">:</span> <span class="token string">&#39;欢迎学习前端工程化课程&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>重新运行<code>npm run build</code>，可以看到<code>bundle.js</code>顶部已经添加了这句话</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/20c0964985754e4889042d76cf88f97e~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p></li><li><p>我们打开<code>node_modules/webpack/lib/BannerPlugin.js</code>中可以看到这个实现原理</p><ul><li>这是一个<code>BannerPlugin</code>类，实现了<code>constructor</code>、<code>apply</code>方法</li><li>在<code>apply</code>方法中，分别调用了<code>compiler.hooks.compilation.tap(&quot;BannerPlugin&quot;,</code>以及<code>compilation.hooks.processAssets.tap</code>等钩子函数</li></ul></li></ol><h2 id="_07-自定义-webpack-plugin-实现自定义页脚注释" tabindex="-1"><a class="header-anchor" href="#_07-自定义-webpack-plugin-实现自定义页脚注释" aria-hidden="true">#</a> 07: 自定义 webpack plugin 实现自定义页脚注释</h2><ol><li><p>新建文件<code>plugin/FooterPlugin.js</code>文件，内容如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> ConcatSource <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;webpack-sources&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">FooterPlugin</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>options <span class="token operator">=</span> options
  <span class="token punctuation">}</span>
  <span class="token function">apply</span><span class="token punctuation">(</span><span class="token parameter">compiler</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    compiler<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>compilation<span class="token punctuation">.</span><span class="token function">tap</span><span class="token punctuation">(</span><span class="token string">&#39;FooterPlugin&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">compilation</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      compilation<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>processAssets<span class="token punctuation">.</span><span class="token function">tap</span><span class="token punctuation">(</span><span class="token string">&#39;FootterPlugin&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> chunk <span class="token keyword">of</span> compilation<span class="token punctuation">.</span>chunks<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> file <span class="token keyword">of</span> chunk<span class="token punctuation">.</span>files<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> commont <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/*</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>banner<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">*/</span><span class="token template-punctuation string">\`</span></span>
            compilation<span class="token punctuation">.</span><span class="token function">updateAsset</span><span class="token punctuation">(</span>
              file<span class="token punctuation">,</span>
              <span class="token punctuation">(</span><span class="token parameter">old</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">ConcatSource</span><span class="token punctuation">(</span>old<span class="token punctuation">,</span> <span class="token string">&#39;\\n&#39;</span><span class="token punctuation">,</span> commont<span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token punctuation">)</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> FooterPlugin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>配置文件<code>webpack.config.js</code>中引入插件<code>FooterPlugin.js</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> FooterPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./plugin/FooterPlugin&#39;</span><span class="token punctuation">)</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">FooterPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">banner</span><span class="token operator">:</span> <span class="token string">&#39;慕课网出品&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>重新打包<code>npm run build</code>，打开<code>bundle.js</code>可以看到如下内容</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/df99c1e271ff4d7f82cdceec3d5e7893~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p></li></ol>`,5);function _(q,P){const a=o("ExternalLinkIcon");return c(),l("div",null,[u,n("p",null,[r,s("的配置项可以通过官网获得:"),n("a",d,[s("https://webpack.js.org/configuration/devtool/"),e(a)])]),n("p",null,[s("source-map 的原理可以参考阮一峰来世的文章："),n("a",k,[s("http://www.ruanyifeng.com/blog/2013/01/javascript_source_map.html"),e(a)])]),n("p",null,[n("a",v,[s("打破砂锅问到底：详解 Webpack 中的 sourcemap"),e(a)])]),n("p",null,[n("a",m,[s("生产上的问题你不会用 sourcemap 定位吗？"),e(a)])]),n("p",null,[n("a",b,[s("万字长文：关于 sourcemap，这篇文章就够了"),e(a)])]),n("p",null,[n("a",g,[s("sourcemap 这么讲，我彻底理解了"),e(a)])]),h,n("ul",null,[n("li",null,[y,s("："),n("a",f,[s("https://www.webpackjs.com/api/compiler-hooks/#hooks"),e(a)])]),n("li",null,[w,s("："),n("a",x,[s("https://www.webpackjs.com/api/compilation-hooks/"),e(a)])])]),j])}const V=t(i,[["render",_],["__file","index-03.html.vue"]]);export{V as default};
