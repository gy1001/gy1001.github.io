import{_ as a,M as d,p as r,q as n,R as e,t,N as o,a1 as l}from"./framework-e8cb8151.js";const s="/assets/image-20231209235402129-9de3c2d2.png",c="/assets/image-20231209235436707-03c9ba6a.png",h="/assets/image-20231209235548303-ba7055bf.png",g="/assets/diagram_react-native-components-5c194a9a.svg",u="/assets/image-20231210010113065-909d2a7e.png",x={},f=l('<h1 id="_04-为-前端开发-同学补充原生知识" tabindex="-1"><a class="header-anchor" href="#_04-为-前端开发-同学补充原生知识" aria-hidden="true">#</a> 04- 为“前端开发”同学补充原生知识</h1><h2 id="_01-本节内容" tabindex="-1"><a class="header-anchor" href="#_01-本节内容" aria-hidden="true">#</a> 01-本节内容</h2><h3 id="内容大纲" tabindex="-1"><a class="header-anchor" href="#内容大纲" aria-hidden="true">#</a> 内容大纲</h3><ul><li>以安卓为例，学习如何连接设备，以及开发中常用的 adb 命令</li><li>以安卓为例，了解移动端 UI 结构和设备特性</li><li>以安卓为例，讲解 RN 开发中经常涉及到的原生文件</li><li>了解 RN 组件与 原生组件的对应关系</li><li>原生开发语言：Android：Java/kotlin, IOS：OC/Swift</li><li>移动端的应用发布以及主流的应用市场</li><li>移动端特有的生产热修复机制和应用场景</li><li>移动端设备的版本兼容选择</li></ul><h3 id="安卓链接设备以及常用-adb命令" tabindex="-1"><a class="header-anchor" href="#安卓链接设备以及常用-adb命令" aria-hidden="true">#</a> 安卓链接设备以及常用 adb命令</h3><ul><li>USB 连接设备</li><li>WIFI 局域网链接</li><li>adb 启动、停止、查看设备、端口映射、进入沙盒 <ul><li>启动：<code>adb start-serve</code></li><li>停止：<code>adb kill-serve</code></li><li>查看设备：<code>adb devices</code></li><li>端口映射：<code>adb reverse tcp:8081 tcp:8081</code></li><li>进入沙盒：<code>adb shell</code></li></ul></li></ul><h2 id="_02-移动端ui结构和设备特性" tabindex="-1"><a class="header-anchor" href="#_02-移动端ui结构和设备特性" aria-hidden="true">#</a> 02-移动端UI结构和设备特性</h2><h3 id="移动端应用ui结构" tabindex="-1"><a class="header-anchor" href="#移动端应用ui结构" aria-hidden="true">#</a> 移动端应用UI结构</h3><ul><li>StatusBar 状态栏</li><li>ActionBar 标题栏</li><li>ContentView 内容</li><li>Navigation 导航</li></ul><h3 id="移动端特有的交互形式" tabindex="-1"><a class="header-anchor" href="#移动端特有的交互形式" aria-hidden="true">#</a> 移动端特有的交互形式</h3><ul><li>一致返回，直到退出app</li><li>home健，挂起应用</li></ul><h3 id="移动端页面载体" tabindex="-1"><a class="header-anchor" href="#移动端页面载体" aria-hidden="true">#</a> 移动端页面载体</h3><p>page1 =&gt; Page2</p><p><img src="'+s+'" alt="image-20231209235402129"></p><p>而在 RN 中</p><p><img src="'+c+'" alt="image-20231209235436707"></p><p><img src="'+h+'" alt="image-20231209235548303"></p><h2 id="_03-rn-开发中常见的原生文件" tabindex="-1"><a class="header-anchor" href="#_03-rn-开发中常见的原生文件" aria-hidden="true">#</a> 03-RN 开发中常见的原生文件</h2><ul><li>配置相关：mainfests、gradle <ul><li>权限</li><li>第三方等</li><li>…</li></ul></li><li>应用相关：Application、String、mipmap</li><li>桥接：ReactPackage、ReactModule、ViewManager</li></ul><h2 id="_04-rn-和原生组件对相应关系" tabindex="-1"><a class="header-anchor" href="#_04-rn-和原生组件对相应关系" aria-hidden="true">#</a> 04-RN 和原生组件对相应关系</h2>',20),p={href:"https://reactnative.cn/docs/components-and-apis",target:"_blank",rel:"noopener noreferrer"},_=l('<table><thead><tr><th style="text-align:left;">REACT NATIVE UI 组件</th><th style="text-align:left;">ANDROID 原生视图</th><th style="text-align:left;">IOS 原生视图</th><th style="text-align:left;">WEB 标签</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;"><code>&lt;View&gt;</code></td><td style="text-align:left;"><code>&lt;ViewGroup&gt;</code></td><td style="text-align:left;"><code>&lt;UIView&gt;</code></td><td style="text-align:left;">A non-scrolling <code>&lt;div&gt;</code></td><td style="text-align:left;">一个支持使用flexbox布局、样式、一些触摸处理和无障碍性控件的容器</td></tr><tr><td style="text-align:left;"><code>&lt;Text&gt;</code></td><td style="text-align:left;"><code>&lt;TextView&gt;</code></td><td style="text-align:left;"><code>&lt;UITextView&gt;</code></td><td style="text-align:left;"><code>&lt;p&gt;</code></td><td style="text-align:left;">显示、样式和嵌套文本字符串，甚至处理触摸事件</td></tr><tr><td style="text-align:left;"><code>&lt;Image&gt;</code></td><td style="text-align:left;"><code>&lt;ImageView&gt;</code></td><td style="text-align:left;"><code>&lt;UIImageView&gt;</code></td><td style="text-align:left;"><code>&lt;img&gt;</code></td><td style="text-align:left;">显示不同类型的图片</td></tr><tr><td style="text-align:left;"><code>&lt;ScrollView&gt;</code></td><td style="text-align:left;"><code>&lt;ScrollView&gt;</code></td><td style="text-align:left;"><code>&lt;UIScrollView&gt;</code></td><td style="text-align:left;"><code>&lt;div&gt;</code></td><td style="text-align:left;">一个通用的滚动容器，可以包含多个组件和视图</td></tr><tr><td style="text-align:left;"><code>&lt;TextInput&gt;</code></td><td style="text-align:left;"><code>&lt;EditText&gt;</code></td><td style="text-align:left;"><code>&lt;UITextField&gt;</code></td><td style="text-align:left;"><code>&lt;input type=&quot;text&quot;&gt;</code></td><td style="text-align:left;">使用户可以输入文本</td></tr></tbody></table><img src="'+g+'" alt="A diagram showing React Native&#39;s Core Components are a subset of React Components that ship with React Native." style="zoom:50%;"><h2 id="_05-原生开发语言选择" tabindex="-1"><a class="header-anchor" href="#_05-原生开发语言选择" aria-hidden="true">#</a> 05-原生开发语言选择</h2><ul><li>Android: Java Vs Kotlin</li><li>IOS: OC Vs Swift</li></ul><h2 id="_06-移动端应用发布" tabindex="-1"><a class="header-anchor" href="#_06-移动端应用发布" aria-hidden="true">#</a> 06-移动端应用发布</h2><ul><li>debug 包 和 release 包 <ul><li>app文件夹下的 build.gradle： buildTypes 下有 debug、release 选项</li></ul></li><li>应用签名：生成与使用</li></ul><p><img src="'+u+'" alt="image-20231210010113065"></p><ul><li>国内主流应用市场：AppStore + 华 米 O V</li></ul><h2 id="_07-移动端特有的生产热修复机制和应用场景" tabindex="-1"><a class="header-anchor" href="#_07-移动端特有的生产热修复机制和应用场景" aria-hidden="true">#</a> 07-移动端特有的生产热修复机制和应用场景</h2><ul><li>热修复机制的产生原因</li><li>RN 热修复框架选择：PUSHY等</li><li>热修复应用场景和注意事项</li></ul><h2 id="_08-移动端设备版本兼容选择" tabindex="-1"><a class="header-anchor" href="#_08-移动端设备版本兼容选择" aria-hidden="true">#</a> 08-移动端设备版本兼容选择</h2><ul><li>Android <ul><li>尺寸：1080 * 1920 以上</li><li>系统版本：安卓 5.0 以上</li></ul></li><li>IOS <ul><li>尺寸：375 * 667 以上</li><li>系统版本：IOS 10以上</li></ul></li></ul>',12);function m(b,y){const i=d("ExternalLinkIcon");return r(),n("div",null,[f,e("p",null,[t("React Native 具有许多核心组件，从表单控件到活动指示器，应有尽有。你可以在"),e("a",p,[t("API 章节"),o(i)]),t("找到它们。您将主要使用以下核心组件：")]),_])}const V=a(x,[["render",m],["__file","index-04.html.vue"]]);export{V as default};
