import{_ as e,M as o,p as c,q as i,R as n,t as s,N as p,a1 as t}from"./framework-e8cb8151.js";const l={},u=t('<h1 id="_25-中介者模式-找媒人介绍对象" tabindex="-1"><a class="header-anchor" href="#_25-中介者模式-找媒人介绍对象" aria-hidden="true">#</a> 25-<strong>中介者模式：找媒人介绍对象</strong></h1><p><img src="https://img2.mukewang.com/5d2fd81100015f0406400359.jpg" alt="img"></p><blockquote><p>合理安排时间，就等于节约时间。 ——培根</p></blockquote><p><strong>中介者模式</strong> （Mediator Pattern）又称调停模式，使得各对象不用显式地相互引用，将对象与对象之间紧密的耦合关系变得松散，从而可以独立地改变他们。核心是<strong>多个对象之间复杂交互的封装</strong>。</p><p>根据最少知识原则，一个对象应该尽量少地了解其他对象。如果对象之间耦合性太高，改动一个对象则会影响到很多其他对象，可维护性差。复杂的系统，对象之间的耦合关系会得更加复杂，中介者模式就是为了解决这个问题而诞生的。</p>',5),r=n("strong",null,"注意：",-1),k={href:"http://es6.ruanyifeng.com/#docs/let",target:"_blank",rel:"noopener noreferrer"},d={href:"http://es6.ruanyifeng.com/#docs/function",target:"_blank",rel:"noopener noreferrer"},m={href:"http://es6.ruanyifeng.com/#docs/destructuring",target:"_blank",rel:"noopener noreferrer"},v={href:"http://es6.ruanyifeng.com/#/docs/function",target:"_blank",rel:"noopener noreferrer"},b=t(`<h2 id="_1-你曾见过的中介者模式" tabindex="-1"><a class="header-anchor" href="#_1-你曾见过的中介者模式" aria-hidden="true">#</a> 1. 你曾见过的中介者模式</h2><p>举一个有点意思的例子。相亲是一个多方博弈、互相选择（嫌弃）的场景，男生和女生相亲，不仅仅是男生和女生两方关系，还有：</p><ol><li>男方的角度： <ul><li>男生会考虑女生的长相、身高、性格、三观、家境、和自己父母能不能合得来、对方家长是否好相处等等；</li><li>男生的家长会考虑女生的条件、和自己儿子搭不搭、对方家长的性格等等；</li></ul></li><li>女方的角度： <ul><li>女生会考虑男生的性格、上进心、是不是高富帅、能不能通过自己父母的法眼、对方家长是否好相处等等；</li><li>女生的家长也会考虑男生的条件、是不是配得上自己女儿、对方家长的性格等等；</li></ul></li></ol><p>双方的家长可能还有博弈和交换，比如你家是公务员，那么可以稍微穷一点；我家比较帅，那么矮一点对方也可以接受…总之，男生、女生、男方家长、女方家长各方的关系交错复杂，每个人都有自己的考量，如果某一方有什么想法，要和其他三方进行沟通，牵一发动全身。这时候我们可以引入媒人，无论哪一方有什么要求或者什么想法，都可以直接告诉媒人，这样就不用各方自己互相沟通了。</p><p>再看另一个例子。比如买房子的时候，我们不必自己去跑到每个卖家那里了解情况，而一般选择从中介那里获取房源信息。卖家们把各自的房源信息提供给中介，包括房源的大小、楼层、朝向等，有的卖家说价格还可以谈，有的卖家说我的房子带阁楼，有的卖家说要跟车库一起卖，等等。买家从中介处就可以获取自己所需的房源信息，比如你不需要车库，也不住一楼和顶楼，只考虑一百平米以上的屋子，中介就会给你筛选出满足你需要的所有房源供你查看，而不需买家一个个的找卖家们了解信息，当你正关注的卖家房子卖出去了中介也会及时告诉你，这就是中介的作用。</p><p>类似的例子还有很多，比如电商平台之于买家与店家，聊天平台之于每个聊天者，澳门大型线上赌场之于每个参与赌博的人…. 😅</p><p>在类似的场景中，有以下特点：</p><ol><li>相亲各方/房源买家卖家（目标对象）之间的关系复杂，引入媒人/中介（中介者）会极大方便各方之间的沟通；</li><li>相亲各方/房源买家卖家（目标对象）之间如果有什么想法和要求上的变动，通过媒人/中介（中介者）就可以及时通知到相关各方，而目标对象之间相互不通信；</li></ol><h2 id="_2-实例的代码实现" tabindex="-1"><a class="header-anchor" href="#_2-实例的代码实现" aria-hidden="true">#</a> 2. 实例的代码实现</h2><p>我们使用 JavaScript 将刚刚的相亲例子实现一下。</p><p>首先我们考虑一个场景，男方和女方都有一定的条件，双方之间有要求，双方家长对对方孩子也有要求，如果达不到要求则不同意这门婚事。（也就是说暂时不考虑男女双方对于对方家长，和双方家长之间的要求，因为这样代码就太长了）</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
  <span class="token comment">/* 个人信息 */</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> info<span class="token punctuation">,</span> target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name
    <span class="token keyword">this</span><span class="token punctuation">.</span>info <span class="token operator">=</span> info <span class="token comment">// 是一个对象，每一项为数字，比如身高、工资..</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>target <span class="token operator">=</span> target <span class="token comment">// 也是对象，每一项为两个数字的数组，表示可接受的最低和最高值</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>enemyList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">// 考虑列表</span>
  <span class="token punctuation">}</span>

  <span class="token comment">/* 注册相亲对象及家长 */</span>
  <span class="token function">registEnemy</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>enemy</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>enemyList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span>enemy<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">/* 检查所有相亲对象及其家长的条件 */</span>
  <span class="token function">checkAllPurpose</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>enemyList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">enemy</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> enemy<span class="token punctuation">.</span>info <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">checkPurpose</span><span class="token punctuation">(</span>enemy<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">/* 检查对方是否满足自己的要求，并发信息 */</span>
  <span class="token function">checkPurpose</span><span class="token punctuation">(</span><span class="token parameter">enemy</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>target<span class="token punctuation">)</span> <span class="token comment">// 是否满足自己的要求</span>
      <span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> <span class="token punctuation">[</span>low<span class="token punctuation">,</span> high<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>target<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
        <span class="token keyword">return</span> low <span class="token operator">&lt;=</span> enemy<span class="token punctuation">.</span>info<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> enemy<span class="token punctuation">.</span>info<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> high
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    enemy<span class="token punctuation">.</span><span class="token function">receiveResult</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">,</span> enemy<span class="token punctuation">)</span> <span class="token comment">// 通知对方</span>
  <span class="token punctuation">}</span>

  <span class="token comment">/* 接受到对方的信息 */</span>
  <span class="token function">receiveResult</span><span class="token punctuation">(</span><span class="token parameter">result<span class="token punctuation">,</span> they<span class="token punctuation">,</span> me</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    result
      <span class="token operator">?</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>
          <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>they<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">：我觉得合适~ \\t（我的要求 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>me<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> 已经满足）</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
        <span class="token punctuation">)</span>
      <span class="token operator">:</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>
          <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>they<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">：你是个好人! \\t（我的要求 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>me<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> 不能满足！）</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
        <span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 男方 */</span>
<span class="token keyword">const</span> ZhangXiaoShuai <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span>
  <span class="token string">&#39;张小帅&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">171</span><span class="token punctuation">,</span> <span class="token literal-property property">salary</span><span class="token operator">:</span> <span class="token number">5000</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>

<span class="token comment">/* 男方家长 */</span>
<span class="token keyword">const</span> ZhangXiaoShuaiParent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&#39;张小帅家长&#39;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">160</span><span class="token punctuation">,</span> <span class="token number">167</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">/* 女方 */</span>
<span class="token keyword">const</span> LiXiaoMei <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span>
  <span class="token string">&#39;李小美&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">160</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>

<span class="token comment">/* 女方家长 */</span>
<span class="token keyword">const</span> LiXiaoMeiParent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&#39;李小美家长&#39;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">salary</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">10000</span><span class="token punctuation">,</span> <span class="token number">20000</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">/* 注册，每一个 person 实例都需要注册对方家庭成员的信息 */</span>
ZhangXiaoShuai<span class="token punctuation">.</span><span class="token function">registEnemy</span><span class="token punctuation">(</span>LiXiaoMei<span class="token punctuation">,</span> LiXiaoMeiParent<span class="token punctuation">)</span>
LiXiaoMei<span class="token punctuation">.</span><span class="token function">registEnemy</span><span class="token punctuation">(</span>ZhangXiaoShuai<span class="token punctuation">,</span> ZhangXiaoShuaiParent<span class="token punctuation">)</span>
ZhangXiaoShuaiParent<span class="token punctuation">.</span><span class="token function">registEnemy</span><span class="token punctuation">(</span>LiXiaoMei<span class="token punctuation">,</span> LiXiaoMeiParent<span class="token punctuation">)</span>
LiXiaoMeiParent<span class="token punctuation">.</span><span class="token function">registEnemy</span><span class="token punctuation">(</span>ZhangXiaoShuai<span class="token punctuation">,</span> ZhangXiaoShuaiParent<span class="token punctuation">)</span>

<span class="token comment">/* 检查对方是否符合要求，同样，每一个 person 实例都需要执行检查 */</span>
ZhangXiaoShuai<span class="token punctuation">.</span><span class="token function">checkAllPurpose</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
LiXiaoMei<span class="token punctuation">.</span><span class="token function">checkAllPurpose</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
ZhangXiaoShuaiParent<span class="token punctuation">.</span><span class="token function">checkAllPurpose</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
LiXiaoMeiParent<span class="token punctuation">.</span><span class="token function">checkAllPurpose</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// 张小帅：我觉得合适~ 	（我的要求 李小美 已经满足）</span>
<span class="token comment">// 李小美：我觉得合适~ 	（我的要求 张小帅 已经满足）</span>
<span class="token comment">// 张小帅家长：我觉得合适~ 	（我的要求 李小美 已经满足）</span>
<span class="token comment">// 李小美家长：你是个好人! 	（我的要求 张小帅 不能满足！）</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当然作为灵活的 JavaScript，并不一定需要使用类，使用对象的形式也是可以的：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> PersonFunc <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">/* 注册相亲对象及家长 */</span>
  <span class="token function">registEnemy</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>enemy</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>enemyList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span>enemy<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token comment">/* 检查所有相亲对象及其家长的条件 */</span>
  <span class="token function">checkAllPurpose</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>enemyList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">enemy</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> enemy<span class="token punctuation">.</span>info <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">checkPurpose</span><span class="token punctuation">(</span>enemy<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token comment">/* 检查对方是否满足自己的要求，并发信息 */</span>
  <span class="token function">checkPurpose</span><span class="token punctuation">(</span><span class="token parameter">enemy</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>target<span class="token punctuation">)</span> <span class="token comment">// 是否满足自己的要求</span>
      <span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> <span class="token punctuation">[</span>low<span class="token punctuation">,</span> high<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>target<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
        <span class="token keyword">return</span> low <span class="token operator">&lt;=</span> enemy<span class="token punctuation">.</span>info<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> enemy<span class="token punctuation">.</span>info<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> high
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    enemy<span class="token punctuation">.</span><span class="token function">receiveResult</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">,</span> enemy<span class="token punctuation">)</span> <span class="token comment">// 通知对方</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token comment">/* 接受到对方的信息 */</span>
  <span class="token function">receiveResult</span><span class="token punctuation">(</span><span class="token parameter">result<span class="token punctuation">,</span> they<span class="token punctuation">,</span> me</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    result
      <span class="token operator">?</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>
          <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>they<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">：我觉得合适~ \\t（我的要求 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>me<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> 已经满足）</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
        <span class="token punctuation">)</span>
      <span class="token operator">:</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>
          <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>they<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">：你是个好人! \\t（我的要求 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>me<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> 不能满足！）</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
        <span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 男方 */</span>
<span class="token keyword">const</span> ZhangXiaoShuai <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>PersonFunc<span class="token punctuation">,</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;张小帅&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">info</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">171</span><span class="token punctuation">,</span> <span class="token literal-property property">salary</span><span class="token operator">:</span> <span class="token number">5000</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">enemyList</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 男方家长 */</span>
<span class="token keyword">const</span> ZhangXiaoShuaiParent <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>PersonFunc<span class="token punctuation">,</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;张小帅家长&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">info</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
  <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">160</span><span class="token punctuation">,</span> <span class="token number">167</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">enemyList</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 女方 */</span>
<span class="token keyword">const</span> LiXiaoMei <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>PersonFunc<span class="token punctuation">,</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;李小美&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">info</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">160</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">enemyList</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 女方家长 */</span>
<span class="token keyword">const</span> LiXiaoMeiParent <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>PersonFunc<span class="token punctuation">,</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;李小美家长&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">info</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
  <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">salary</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">10000</span><span class="token punctuation">,</span> <span class="token number">20000</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">enemyList</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 注册 */</span>
ZhangXiaoShuai<span class="token punctuation">.</span><span class="token function">registEnemy</span><span class="token punctuation">(</span>LiXiaoMei<span class="token punctuation">,</span> LiXiaoMeiParent<span class="token punctuation">)</span>
LiXiaoMei<span class="token punctuation">.</span><span class="token function">registEnemy</span><span class="token punctuation">(</span>ZhangXiaoShuai<span class="token punctuation">,</span> ZhangXiaoShuaiParent<span class="token punctuation">)</span>
ZhangXiaoShuaiParent<span class="token punctuation">.</span><span class="token function">registEnemy</span><span class="token punctuation">(</span>LiXiaoMei<span class="token punctuation">,</span> LiXiaoMeiParent<span class="token punctuation">)</span>
LiXiaoMeiParent<span class="token punctuation">.</span><span class="token function">registEnemy</span><span class="token punctuation">(</span>ZhangXiaoShuai<span class="token punctuation">,</span> ZhangXiaoShuaiParent<span class="token punctuation">)</span>

<span class="token comment">/* 检查对方是否符合要求 */</span>
ZhangXiaoShuai<span class="token punctuation">.</span><span class="token function">checkAllPurpose</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
LiXiaoMei<span class="token punctuation">.</span><span class="token function">checkAllPurpose</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
ZhangXiaoShuaiParent<span class="token punctuation">.</span><span class="token function">checkAllPurpose</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
LiXiaoMeiParent<span class="token punctuation">.</span><span class="token function">checkAllPurpose</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// 张小帅：我觉得合适~ 	（我的要求 李小美 已经满足）</span>
<span class="token comment">// 李小美：我觉得合适~ 	（我的要求 张小帅 已经满足）</span>
<span class="token comment">// 张小帅家长：我觉得合适~ 	（我的要求 李小美 已经满足）</span>
<span class="token comment">// 李小美家长：你是个好人! 	（我的要求 张小帅 不能满足！）</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们还可以使用 <code>Object.create()</code> 赋值原型的方式将方法放在原型上，也可以使用原型继承的方式，JavaScript 的灵活性让你可以自由选择习惯的方式。</p><p>单就结果而言，上面的代码可以实现整个逻辑。<strong>但是这几个对象之间相互引用、相互持有，并紧密耦合</strong>。如果继续引入关系，比如张小帅的七大姑、李小美的八大姨，或者考虑的情况更多一些，那么就要改动很多代码，上面的写法就满足不了要求了。</p><p>这时我们可以引入媒人（中介者），专门处理对象之间的耦合关系，所有对象间相互不了解，只与媒人交互，如果引入了新的相关方，也只需要通知媒人即可。看一下实现：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">/* 男方 */</span>
<span class="token keyword">const</span> ZhangXiaoShuai <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;张小帅&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">family</span><span class="token operator">:</span> <span class="token string">&#39;张小帅家&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">info</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">171</span><span class="token punctuation">,</span> <span class="token literal-property property">salary</span><span class="token operator">:</span> <span class="token number">5000</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 男方家长 */</span>
<span class="token keyword">const</span> ZhangXiaoShuaiParent <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;张小帅家长&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">family</span><span class="token operator">:</span> <span class="token string">&#39;张小帅家&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">info</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
  <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">160</span><span class="token punctuation">,</span> <span class="token number">167</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 女方 */</span>
<span class="token keyword">const</span> LiXiaoMei <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;李小美&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">family</span><span class="token operator">:</span> <span class="token string">&#39;李小美家&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">info</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">160</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 女方家长 */</span>
<span class="token keyword">const</span> LiXiaoMeiParent <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;李小美家长&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">family</span><span class="token operator">:</span> <span class="token string">&#39;李小美家&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">info</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
  <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">salary</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">10000</span><span class="token punctuation">,</span> <span class="token number">20000</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 媒人 */</span>
<span class="token keyword">const</span> MatchMaker <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">matchBook</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// 媒人的花名册</span>

  <span class="token comment">/* 注册各方 */</span>
  <span class="token function">registPersons</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>personList</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    personList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">person</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>matchBook<span class="token punctuation">[</span>person<span class="token punctuation">.</span>family<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>matchBook<span class="token punctuation">[</span>person<span class="token punctuation">.</span>family<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">this</span><span class="token punctuation">.</span>matchBook<span class="token punctuation">[</span>person<span class="token punctuation">.</span>family<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>person<span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token comment">/* 检查对方家庭的孩子对象是否满足要求 */</span>
  <span class="token function">checkAllPurpose</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>matchBook<span class="token punctuation">)</span> <span class="token comment">// 遍历名册中所有家庭</span>
      <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">familyName<span class="token punctuation">,</span> idx<span class="token punctuation">,</span> matchList</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
        matchList
          <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">match</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> match <span class="token operator">!==</span> familyName<span class="token punctuation">)</span> <span class="token comment">// 对于其中一个家庭，过滤出名册中其他的家庭</span>
          <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">enemyFamily</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>matchBook<span class="token punctuation">[</span>enemyFamily<span class="token punctuation">]</span> <span class="token comment">// 遍历该家庭中注册到名册上的所有成员</span>
              <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">enemy</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>matchBook<span class="token punctuation">[</span>familyName<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>
                  <span class="token punctuation">(</span>
                    person<span class="token punctuation">,</span> <span class="token comment">// 逐项比较自己的条件和他们的要求</span>
                  <span class="token punctuation">)</span> <span class="token operator">=&gt;</span> enemy<span class="token punctuation">.</span>info <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">checkPurpose</span><span class="token punctuation">(</span>person<span class="token punctuation">,</span> enemy<span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token punctuation">)</span><span class="token punctuation">,</span>
              <span class="token punctuation">)</span><span class="token punctuation">,</span>
          <span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token comment">/* 检查对方是否满足自己的要求，并发信息 */</span>
  <span class="token function">checkPurpose</span><span class="token punctuation">(</span><span class="token parameter">person<span class="token punctuation">,</span> enemy</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span>target<span class="token punctuation">)</span> <span class="token comment">// 是否满足自己的要求</span>
      <span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> <span class="token punctuation">[</span>low<span class="token punctuation">,</span> high<span class="token punctuation">]</span> <span class="token operator">=</span> person<span class="token punctuation">.</span>target<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
        <span class="token keyword">return</span> low <span class="token operator">&lt;=</span> enemy<span class="token punctuation">.</span>info<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> enemy<span class="token punctuation">.</span>info<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> high
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">receiveResult</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> person<span class="token punctuation">,</span> enemy<span class="token punctuation">)</span> <span class="token comment">// 通知对方</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token comment">/* 通知对方信息 */</span>
  <span class="token function">receiveResult</span><span class="token punctuation">(</span><span class="token parameter">result<span class="token punctuation">,</span> person<span class="token punctuation">,</span> enemy</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    result
      <span class="token operator">?</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>person<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> 觉得合适~ \\t（</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>enemy<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> 已经满足要求）</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
      <span class="token operator">:</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>
          <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>person<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> 觉得不合适! \\t（</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>enemy<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> 不能满足要求！）</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
        <span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 注册 */</span>
MatchMaker<span class="token punctuation">.</span><span class="token function">registPersons</span><span class="token punctuation">(</span>
  ZhangXiaoShuai<span class="token punctuation">,</span>
  ZhangXiaoShuaiParent<span class="token punctuation">,</span>
  LiXiaoMei<span class="token punctuation">,</span>
  LiXiaoMeiParent<span class="token punctuation">,</span>
<span class="token punctuation">)</span>

MatchMaker<span class="token punctuation">.</span><span class="token function">checkAllPurpose</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// 输出: 小帅 觉得合适~ 	    （李小美 已经满足要求）</span>
<span class="token comment">// 输出: 张小帅家长 觉得合适~ 	（李小美 已经满足要求）</span>
<span class="token comment">// 输出: 李小美 觉得合适~ 	    （张小帅 已经满足要求）</span>
<span class="token comment">// 输出: 李小美家长 觉得不合适! 	（张小帅 不能满足要求！）</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到，除了媒人之外，其他各个角色都是独立的，相互不知道对方的存在，对象间关系被解耦，我们甚至可以方便地添加新的对象。比如赵小美家同时还在考虑着孙小拽（emmm…）：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 重写上面「注册」之后的代码</span>

<span class="token comment">/* 引入孙小拽 */</span>
<span class="token keyword">const</span> SunXiaoZhuai <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;孙小拽&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">familyType</span><span class="token operator">:</span> <span class="token string">&#39;男方&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">info</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">27</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">173</span><span class="token punctuation">,</span> <span class="token literal-property property">salary</span><span class="token operator">:</span> <span class="token number">20000</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 孙小拽家长 */</span>
<span class="token keyword">const</span> SunXiaoZhuaiParent <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;孙小拽家长&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">familyType</span><span class="token operator">:</span> <span class="token string">&#39;男方&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">info</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
  <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">160</span><span class="token punctuation">,</span> <span class="token number">170</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 注册，这里只需要注册一次 */</span>
MatchMaker<span class="token punctuation">.</span><span class="token function">registPersons</span><span class="token punctuation">(</span>
  ZhangXiaoShuai<span class="token punctuation">,</span>
  ZhangXiaoShuaiParent<span class="token punctuation">,</span>
  LiXiaoMei<span class="token punctuation">,</span>
  LiXiaoMeiParent<span class="token punctuation">,</span>
  SunXiaoZhuai<span class="token punctuation">,</span>
  SunXiaoZhuaiParent<span class="token punctuation">,</span>
<span class="token punctuation">)</span>

<span class="token comment">/* 检查对方是否符合要求，也只需要检查一次 */</span>
MatchMaker<span class="token punctuation">.</span><span class="token function">checkAllPurpose</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// 输出: 张小帅 觉得合适~ 	    （李小美 已经满足要求）</span>
<span class="token comment">// 输出: 张小帅家长 觉得合适~ 	（李小美 已经满足要求）</span>
<span class="token comment">// 输出: 孙小拽 觉得合适~ 	    （李小美 已经满足要求）</span>
<span class="token comment">// 输出: 孙小拽家长 觉得合适~ 	（李小美 已经满足要求）</span>
<span class="token comment">// 输出: 李小美 觉得合适~ 	    （张小帅 已经满足要求）</span>
<span class="token comment">// 输出: 李小美家长 觉得不合适! 	（张小帅 不能满足要求！）</span>
<span class="token comment">// 输出: 李小美 觉得合适~ 	    （孙小拽 已经满足要求）</span>
<span class="token comment">// 输出: 李小美家长 觉得合适~ 	（孙小拽 已经满足要求）</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从这个例子就已经可以看出中介者模式的优点了，因为各对象之间的相互引用关系被解耦，从而令系统的可扩展性、可维护性更好。</p><h2 id="_3-中介者模式的通用实现" tabindex="-1"><a class="header-anchor" href="#_3-中介者模式的通用实现" aria-hidden="true">#</a> 3. 中介者模式的通用实现</h2><p>对于上面的例子，张小帅、李小美、孙小拽和他们的家长们相当于容易产生耦合的对象（最早的一本设计模式书上将这些对象称为同事，这里也借用一下这个称呼，Colleague），而媒人就相当于中介者（Mediator）。在中介者模式中，同事对象之间互相不通信，而只与中介者通信，同事对象只需知道中介者即可。主要有以下几个概念：</p><ol><li><strong>Colleague：</strong> 同事对象，只知道中介者而不知道其他同事对象，通过中介者来与其他同事对象通信；</li><li><strong>Mediator：</strong> 中介者，负责与各同事对象的通信；</li></ol><p>结构图如下：</p><p><img src="https://i.loli.net/2019/05/25/5ce950ac8294b91062.png" alt="img"></p><p>可以看到上图，使用中介者模式之后同事对象间的网状结构变成了星型结构，同事对象之间不需要知道彼此，符合最少知识原则。如果同事对象之间需要相互通信，只能通过中介者的方式，这样让同事对象之间原本的强耦合变成弱耦合，强相互依赖变成弱相互依赖，从而让这些同事对象可以独立地改变和复用。原本同事对象间的交互逻辑被中介者封装起来，各个同事对象只需关心自身即可。</p><h2 id="_4-中介者模式的优缺点" tabindex="-1"><a class="header-anchor" href="#_4-中介者模式的优缺点" aria-hidden="true">#</a> 4. 中介者模式的优缺点</h2><p>中介者模式的主要优点有：</p><ol><li><strong>松散耦合</strong>，降低了同事对象之间的相互依赖和耦合，不会像之前那样牵一发动全身；</li><li>将同事对象间的<strong>一对多关联转变为一对一的关联</strong>，符合最少知识原则，提高系统的灵活性，使得系统易于维护和扩展；</li><li>中介者在同事对象间起到了控制和协调的作用，因此可以结合代理模式那样，进行<strong>同事对象间的访问控制、功能扩展</strong>；</li><li>因为同事对象间不需要相互引用，因此也可以<strong>简化同事对象的设计和实现</strong>；</li></ol><p>主要缺点是：<strong>逻辑过度集中化</strong>，当同事对象太多时，中介者的职责将很重，逻辑变得复杂而庞大，以至于难以维护。</p><p>当出现中介者可维护性变差的情况时，考虑是否在系统设计上不合理，从而简化系统设计，优化并重构，避免中介者出现职责过重的情况。</p><h2 id="_5-中介者模式的适用场景" tabindex="-1"><a class="header-anchor" href="#_5-中介者模式的适用场景" aria-hidden="true">#</a> 5. 中介者模式的适用场景</h2><p>中介者模式适用多个对象间的关系确实已经紧密耦合，且导致扩展、维护产生了困难的场景，也就是当多个<strong>对象之间的引用关系变成了网状结构的时候</strong>，此时可以考虑使用引入中介者来把<strong>网状结构转化为星型结构</strong>。</p><p>但是，如果对象之间的关系耦合并不紧密，或者之间的关系本就一目了然，那么引入中介者模式就是多此一举、画蛇添足。</p><p>实际上，我们通常使用的 MVC/MVVM 框架，就含有中介者模式的思想，Controller/ViewModel 层作为中介者协调 View/Model 进行工作，减少 View/Model 之间的直接耦合依赖，从而做到视图层和数据层的最大分离。可以关注后面有单独一章分析 MVC/MVVM 模式，深入了解。</p><h2 id="_6-其他相关模式" tabindex="-1"><a class="header-anchor" href="#_6-其他相关模式" aria-hidden="true">#</a> 6. 其他相关模式</h2><h3 id="_6-1-中介者模式和外观模式" tabindex="-1"><a class="header-anchor" href="#_6-1-中介者模式和外观模式" aria-hidden="true">#</a> 6.1 中介者模式和外观模式</h3><p>外观模式和中介者模式思想上有一些相似的地方，但也有不同：</p><ol><li><strong>中介者模式</strong> 将多个平等对象之间<strong>内部</strong>的复杂交互关系封装起来，主要目的是为了多个对象之间的解耦；</li><li><strong>外观模式</strong> 封装一个子系统内部的模块，是为了向系统<strong>外部</strong>提供方便的调用；</li></ol><h3 id="_6-2-中介者模式与发布-订阅模式" tabindex="-1"><a class="header-anchor" href="#_6-2-中介者模式与发布-订阅模式" aria-hidden="true">#</a> 6.2 中介者模式与发布-订阅模式</h3><p>中介者模式和发布-订阅模式都可以用来进行对象间的解耦，比如发布-订阅模式的发布者/订阅者和中介者模式里面的中介者/同事对象功能上就比较类似。</p><p>这两个模式也可以组合使用，比如中介者模式就可以使用发布-订阅模式，对相关同事对象进行消息的广播通知。</p><p>比如上面相亲的例子中，注册各方和通知信息就使用了发布-订阅模式。</p><h3 id="_6-3-中介者模式与代理模式" tabindex="-1"><a class="header-anchor" href="#_6-3-中介者模式与代理模式" aria-hidden="true">#</a> 6.3 中介者模式与代理模式</h3><p>同事对象之间需要通信的时候，需要经由中介者，这时中介者就相当于同事对象间的代理。所以这时就可以引入代理模式的概念，对同事对象相互访问的时候，起到访问控制、功能扩展等等功能。</p><p>推介阅读：</p>`,47),y={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach",target:"_blank",rel:"noopener noreferrer"},h={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/every",target:"_blank",rel:"noopener noreferrer"},g={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/filter",target:"_blank",rel:"noopener noreferrer"},f={href:"https://juejin.im/post/5b51e5d3f265da0f4861143c#heading-5",target:"_blank",rel:"noopener noreferrer"};function w(_,P){const a=o("ExternalLinkIcon");return c(),i("div",null,[u,n("blockquote",null,[n("p",null,[r,s(" 本文可能用到一些 ES6 的语法 "),n("a",k,[s("let/const"),p(a)]),s("、"),n("a",d,[s("箭头函数"),p(a)]),s("、"),n("a",m,[s("解构赋值"),p(a)]),s("、"),n("a",v,[s("Rest 参数"),p(a)]),s(" 等，如果还没接触过可以点击链接稍加学习 ~")])]),b,n("ol",null,[n("li",null,[n("a",y,[s("Array.prototype.forEach() - JavaScript | MDN"),p(a)])]),n("li",null,[n("a",h,[s("Array.prototype.every() - JavaScript | MDN"),p(a)])]),n("li",null,[n("a",g,[s("Array.prototype.filter() - JavaScript | MDN"),p(a)])]),n("li",null,[n("a",f,[s("JS 中可以提升幸福度的小技巧 - 短路运算符"),p(a)])])])])}const M=e(l,[["render",w],["__file","index-25.html.vue"]]);export{M as default};
