import{_ as e,M as o,p as c,q as i,R as n,t as s,N as t,a1 as p}from"./framework-e8cb8151.js";const l="/assets/image-20230811161508295-d0b81fef.png",u="/assets/image-20230811161539495-0378d0c3.png",k="/assets/image-20230811161601845-967a1548.png",r={},d=p('<h1 id="_23-命令模式-江湖通缉令" tabindex="-1"><a class="header-anchor" href="#_23-命令模式-江湖通缉令" aria-hidden="true">#</a> 23-<strong>命令模式：江湖通缉令</strong></h1><p><img src="https://img4.mukewang.com/5d2fd66a00017b5f06400359.jpg" alt="img"></p><blockquote><p>世界上最宽阔的是海洋，比海洋更宽阔的是天空，比天空更宽阔的是人的胸怀。——雨果</p></blockquote><h1 id="行为型模式-命令模式" tabindex="-1"><a class="header-anchor" href="#行为型模式-命令模式" aria-hidden="true">#</a> 行为型模式：命令模式</h1><p><strong>命令模式</strong> （Command Pattern）又称事务模式，将请求封装成对象，将命令的发送者和接受者解耦。本质上是对<strong>方法调用的封装</strong>。</p><p>通过封装方法调用，也可以做一些有意思的事，例如记录日志，或者重复使用这些封装来实现撤销（undo）、重做（redo）操作。</p>',6),v=n("strong",null,"注意：",-1),m={href:"http://es6.ruanyifeng.com/#docs/let",target:"_blank",rel:"noopener noreferrer"},b={href:"http://es6.ruanyifeng.com/#docs/class",target:"_blank",rel:"noopener noreferrer"},h=p('<h2 id="_1-你曾见过的命令模式" tabindex="-1"><a class="header-anchor" href="#_1-你曾见过的命令模式" aria-hidden="true">#</a> 1. 你曾见过的命令模式</h2><p>某日，著名门派蛋黄派于江湖互联网发布江湖通缉令一张「通缉偷电瓶车贼窃格瓦拉，抓捕归案奖鸭蛋 10 个」。对于通缉令发送者蛋黄派来说，不需向某个特定单位通知通缉令，而通缉令发布之后，蛋黄派也不用管是谁来完成这个通缉令，也就是说，通缉令的发送者和接受者之间被解耦了。</p><p>大学宿舍的时候，室友们都上床了，没人起来关灯，不知道有谁提了一句「谁起来把灯关一下」，此时比的是谁装睡装得像，如果沉不住气，就要做命令的执行者，去关灯了。</p><p><img src="'+l+`" alt="image-20230811161508295"></p><p>比较经典的例子是餐馆订餐，客人需要向厨师发送请求，但是不知道这些厨师的联系方式，也不知道厨师炒菜的流程和步骤，一般是将客人订餐的请求封装成命令对象，也就是订单。这个订单对象可以在程序中被四处传递，就像订单可以被服务员传递到某个厨师手中，客人不需要知道是哪个厨师完成自己的订单，厨师也不需要知道是哪个客户的订单。</p><p>在类似场景中，这些例子有以下特点：</p><ol><li>命令的发送者和接收者解耦，发送者与接收者之间没有直接引用关系，发送请求的对象只需要知道如何发送请求，而不必知道如何完成请求；</li><li>对命令还可以进行撤销、排队等操作，比如用户等太久不想等了撤销订单，厨师不够了将订单进行排队，等等操作；</li></ol><h2 id="_2-实例的代码实现" tabindex="-1"><a class="header-anchor" href="#_2-实例的代码实现" aria-hidden="true">#</a> 2. 实例的代码实现</h2><p>为了方便演示命令的撤销和重做，下面使用 JavaScript 来实现对超级玛丽的操控 🤣。</p><h3 id="_2-1-马里奥的操控实现" tabindex="-1"><a class="header-anchor" href="#_2-1-马里奥的操控实现" aria-hidden="true">#</a> 2.1 马里奥的操控实现</h3><p>首先我们新建一个移动对象类，在以后的代码中是通用的：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;my-canvas&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> CanvasWidth <span class="token operator">=</span> <span class="token number">400</span> <span class="token comment">// 画布宽度</span>
<span class="token keyword">var</span> CanvasHeight <span class="token operator">=</span> <span class="token number">400</span> <span class="token comment">// 画布高度</span>
<span class="token keyword">var</span> CanvasStep <span class="token operator">=</span> <span class="token number">40</span> <span class="token comment">// 动作步长</span>
canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> CanvasWidth
canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> CanvasHeight

<span class="token comment">// 移动对象类</span>
<span class="token keyword">var</span> <span class="token function-variable function">Role</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> imgSrc</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>position <span class="token operator">=</span> <span class="token punctuation">{</span> x<span class="token punctuation">,</span> y <span class="token punctuation">}</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;my-canvas&#39;</span><span class="token punctuation">)</span>

  <span class="token keyword">this</span><span class="token punctuation">.</span>ctx <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&#39;2d&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>img <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>img<span class="token punctuation">.</span>style<span class="token punctuation">.</span>width <span class="token operator">=</span> CanvasStep
  <span class="token keyword">this</span><span class="token punctuation">.</span>img<span class="token punctuation">.</span>style<span class="token punctuation">.</span>height <span class="token operator">=</span> CanvasStep
  <span class="token keyword">this</span><span class="token punctuation">.</span>img<span class="token punctuation">.</span>src <span class="token operator">=</span> imgSrc
  <span class="token keyword">this</span><span class="token punctuation">.</span>img<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>img<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> CanvasStep<span class="token punctuation">,</span> CanvasStep<span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token class-name">Role</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">move</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> pos <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>position
  <span class="token keyword">this</span><span class="token punctuation">.</span>ctx<span class="token punctuation">.</span><span class="token function">clearRect</span><span class="token punctuation">(</span>pos<span class="token punctuation">.</span>x<span class="token punctuation">,</span> pos<span class="token punctuation">.</span>y<span class="token punctuation">,</span> CanvasStep<span class="token punctuation">,</span> CanvasStep<span class="token punctuation">)</span>
  pos<span class="token punctuation">.</span>x <span class="token operator">+=</span> x
  pos<span class="token punctuation">.</span>y <span class="token operator">+=</span> y
  <span class="token keyword">this</span><span class="token punctuation">.</span>ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>img<span class="token punctuation">,</span> pos<span class="token punctuation">.</span>x<span class="token punctuation">,</span> pos<span class="token punctuation">.</span>y<span class="token punctuation">,</span> CanvasStep<span class="token punctuation">,</span> CanvasStep<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下面如果要实现操控超级玛丽，可以直接：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> mario <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Role</span><span class="token punctuation">(</span>
  <span class="token number">200</span><span class="token punctuation">,</span>
  <span class="token number">200</span><span class="token punctuation">,</span>
  <span class="token string">&#39;https://i.loli.net/2019/08/09/sqnjmxSZBdPfNtb.jpg&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>

<span class="token comment">// 设置按钮回调</span>
<span class="token keyword">var</span> elementUp <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;up-btn&#39;</span><span class="token punctuation">)</span>
elementUp<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  mario<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span>CanvasStep<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> elementDown <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;down-btn&#39;</span><span class="token punctuation">)</span>
elementDown<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  mario<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> CanvasStep<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> elementLeft <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;left-btn&#39;</span><span class="token punctuation">)</span>
elementLeft<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  mario<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span><span class="token operator">-</span>CanvasStep<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> elementRight <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;right-btn&#39;</span><span class="token punctuation">)</span>
elementRight<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  mario<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span>CanvasStep<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以实现下面这样的效果：</p><p><img src="`+u+`" alt="image-20230811161539495"></p><p>如果要新建一个小怪兽角色，可以：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> monster <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Role</span><span class="token punctuation">(</span>
  <span class="token number">160</span><span class="token punctuation">,</span>
  <span class="token number">160</span><span class="token punctuation">,</span>
  <span class="token string">&#39;https://i.loli.net/2019/08/12/XCTzcdbhriLlskv.png&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18),f={href:"https://codepen.io/SHERlocked93/pen/EqGwrm",target:"_blank",rel:"noopener noreferrer"},y=p(`<h3 id="_2-2-引入命令模式" tabindex="-1"><a class="header-anchor" href="#_2-2-引入命令模式" aria-hidden="true">#</a> 2.2 引入命令模式</h3><p>上面的实现逻辑上没有问题，但当我们在页面上点击按钮发送操作请求时，需要向具体负责实现行为的对象发送请求操作，对应上面的例子中的 <code>mario</code>、<code>monster</code>，这些对象就是操作的接受者。也就是说，操作的发送者直接持有操作的接受者，逻辑直接暴露在页面 DOM 的事件回调中，耦合较强。如果要增加新的角色，需要对 DOM 的回调函数进行改动，如果对操作行为进行修改，对应地，也需修改 DOM 回调函数。</p><p>此时，我们可以引入命令模式，以便将操作的发送者和操作的接受者解耦。在这个例子中，我们将操作马里奥的行为包装成命令类，操作的发送者只需要持有对应的命令实例并执行，命令的内容是具体的行为逻辑。</p><p>多说无益，直接看代码（从这里之后就直接用 ES6）：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;my-canvas&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> CanvasWidth <span class="token operator">=</span> <span class="token number">400</span> <span class="token comment">// 画布宽度</span>
<span class="token keyword">const</span> CanvasHeight <span class="token operator">=</span> <span class="token number">400</span> <span class="token comment">// 画布高度</span>
<span class="token keyword">const</span> CanvasStep <span class="token operator">=</span> <span class="token number">40</span> <span class="token comment">// 动作步长</span>
canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> CanvasWidth
canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> CanvasHeight

<span class="token keyword">const</span> btnUp <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;up-btn&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> btnDown <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;down-btn&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> btnLeft <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;left-btn&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> btnRight <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;right-btn&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 移动对象类</span>
<span class="token keyword">class</span> <span class="token class-name">Role</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> imgSrc</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> x
    <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> y
    <span class="token keyword">this</span><span class="token punctuation">.</span>canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;my-canvas&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>ctx <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&#39;2d&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>img <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>img<span class="token punctuation">.</span>style<span class="token punctuation">.</span>width <span class="token operator">=</span> CanvasStep
    <span class="token keyword">this</span><span class="token punctuation">.</span>img<span class="token punctuation">.</span>style<span class="token punctuation">.</span>height <span class="token operator">=</span> CanvasStep
    <span class="token keyword">this</span><span class="token punctuation">.</span>img<span class="token punctuation">.</span>src <span class="token operator">=</span> imgSrc
    <span class="token keyword">this</span><span class="token punctuation">.</span>img<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>img<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> CanvasStep<span class="token punctuation">,</span> CanvasStep<span class="token punctuation">)</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token function">move</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>ctx<span class="token punctuation">.</span><span class="token function">clearRect</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>x<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y<span class="token punctuation">,</span> CanvasStep<span class="token punctuation">,</span> CanvasStep<span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">+=</span> x
    <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">+=</span> y
    <span class="token keyword">this</span><span class="token punctuation">.</span>ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>img<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>x<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y<span class="token punctuation">,</span> CanvasStep<span class="token punctuation">,</span> CanvasStep<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// 向上移动命令类</span>
<span class="token keyword">class</span> <span class="token class-name">MoveUpCommand</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">receiver</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>receiver <span class="token operator">=</span> receiver
  <span class="token punctuation">}</span>

  <span class="token function">execute</span><span class="token punctuation">(</span><span class="token parameter">role</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>receiver<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span>CanvasStep<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// 向下移动命令类</span>
<span class="token keyword">class</span> <span class="token class-name">MoveDownCommand</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">receiver</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>receiver <span class="token operator">=</span> receiver
  <span class="token punctuation">}</span>

  <span class="token function">execute</span><span class="token punctuation">(</span><span class="token parameter">role</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>receiver<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> CanvasStep<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// 向左移动命令类</span>
<span class="token keyword">class</span> <span class="token class-name">MoveLeftCommand</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">receiver</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>receiver <span class="token operator">=</span> receiver
  <span class="token punctuation">}</span>

  <span class="token function">execute</span><span class="token punctuation">(</span><span class="token parameter">role</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>receiver<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span><span class="token operator">-</span>CanvasStep<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// 向右移动命令类</span>
<span class="token keyword">class</span> <span class="token class-name">MoveRightCommand</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">receiver</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>receiver <span class="token operator">=</span> receiver
  <span class="token punctuation">}</span>

  <span class="token function">execute</span><span class="token punctuation">(</span><span class="token parameter">role</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>receiver<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span>CanvasStep<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// 设置按钮命令</span>
<span class="token keyword">const</span> <span class="token function-variable function">setCommand</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">element<span class="token punctuation">,</span> command</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  element<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    command<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">/* ----- 客户端 ----- */</span>
<span class="token keyword">const</span> mario <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Role</span><span class="token punctuation">(</span>
  <span class="token number">200</span><span class="token punctuation">,</span>
  <span class="token number">200</span><span class="token punctuation">,</span>
  <span class="token string">&#39;https://i.loli.net/2019/08/09/sqnjmxSZBdPfNtb.jpg&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
<span class="token keyword">const</span> moveUpCommand <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MoveUpCommand</span><span class="token punctuation">(</span>mario<span class="token punctuation">)</span>
<span class="token keyword">const</span> moveDownCommand <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MoveDownCommand</span><span class="token punctuation">(</span>mario<span class="token punctuation">)</span>
<span class="token keyword">const</span> moveLeftCommand <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MoveLeftCommand</span><span class="token punctuation">(</span>mario<span class="token punctuation">)</span>
<span class="token keyword">const</span> moveRightCommand <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MoveRightCommand</span><span class="token punctuation">(</span>mario<span class="token punctuation">)</span>

<span class="token function">setCommand</span><span class="token punctuation">(</span>btnUp<span class="token punctuation">,</span> moveUpCommand<span class="token punctuation">)</span>
<span class="token function">setCommand</span><span class="token punctuation">(</span>btnDown<span class="token punctuation">,</span> moveDownCommand<span class="token punctuation">)</span>
<span class="token function">setCommand</span><span class="token punctuation">(</span>btnLeft<span class="token punctuation">,</span> moveLeftCommand<span class="token punctuation">)</span>
<span class="token function">setCommand</span><span class="token punctuation">(</span>btnRight<span class="token punctuation">,</span> moveRightCommand<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),w={href:"https://codepen.io/SHERlocked93/pen/YmMNXx",target:"_blank",rel:"noopener noreferrer"},g=p(`<p>我们把操作的逻辑分别提取到对应的 <code>Command</code> 类中，并约定 <code>Command</code> 类的 <code>execute</code> 方法存放命令接收者需要执行的逻辑，也就是前面例子中的 <code>onclick</code> 回调方法部分。</p><p>按下操作按钮之后<strong>会发生事情</strong>这个逻辑是不变的，而<strong>具体发生什么事情</strong>的逻辑是可变的，这里我们可以提取出公共逻辑，把一定发生事情这个逻辑提取到 <code>setCommand</code> 方法中，在这里调用命令类实例的 <code>execute</code> 方法，而不同事情具体逻辑的不同体现在各个 <code>execute</code> 方法的不同实现中。</p><p>至此，命令的发送者已经知道自己将会执行一个 <code>Command</code> 类实例的 <code>execute</code> 实例方法，但是具体是哪个操作类的类实例来执行，还不得而知，这时候需要调用 <code>setCommand</code> 方法来告诉命令的发送者，执行的是哪个命令。</p><p>综上，一个命令模式改造后的实例就完成了，但是在 JavaScript 中，命令不一定要使用类的形式：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 前面代码一致</span>

<span class="token comment">// 向上移动命令对象</span>
<span class="token keyword">const</span> MoveUpCommand <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">execute</span><span class="token punctuation">(</span><span class="token parameter">role</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    role<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span>CanvasStep<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">// 向下移动命令对象</span>
<span class="token keyword">const</span> MoveDownCommand <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">execute</span><span class="token punctuation">(</span><span class="token parameter">role</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    role<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> CanvasStep<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">// 向左移动命令对象</span>
<span class="token keyword">const</span> MoveLeftCommand <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">execute</span><span class="token punctuation">(</span><span class="token parameter">role</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    role<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span><span class="token operator">-</span>CanvasStep<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">// 向右移动命令对象</span>
<span class="token keyword">const</span> MoveRightCommand <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">execute</span><span class="token punctuation">(</span><span class="token parameter">role</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    role<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span>CanvasStep<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">// 设置按钮命令</span>
<span class="token keyword">const</span> <span class="token function-variable function">setCommand</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">element<span class="token punctuation">,</span> role<span class="token punctuation">,</span> command</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  element<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    command<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>role<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">/* ----- 客户端 ----- */</span>
<span class="token keyword">const</span> mario <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Role</span><span class="token punctuation">(</span>
  <span class="token number">200</span><span class="token punctuation">,</span>
  <span class="token number">200</span><span class="token punctuation">,</span>
  <span class="token string">&#39;https://i.loli.net/2019/08/09/sqnjmxSZBdPfNtb.jpg&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>

<span class="token function">setCommand</span><span class="token punctuation">(</span>btnUp<span class="token punctuation">,</span> mario<span class="token punctuation">,</span> MoveUpCommand<span class="token punctuation">)</span>
<span class="token function">setCommand</span><span class="token punctuation">(</span>btnDown<span class="token punctuation">,</span> mario<span class="token punctuation">,</span> MoveDownCommand<span class="token punctuation">)</span>
<span class="token function">setCommand</span><span class="token punctuation">(</span>btnLeft<span class="token punctuation">,</span> mario<span class="token punctuation">,</span> MoveLeftCommand<span class="token punctuation">)</span>
<span class="token function">setCommand</span><span class="token punctuation">(</span>btnRight<span class="token punctuation">,</span> mario<span class="token punctuation">,</span> MoveRightCommand<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),C={href:"https://codepen.io/SHERlocked93/pen/LwrzJY",target:"_blank",rel:"noopener noreferrer"},_=p(`<h3 id="_2-3-命令模式升级" tabindex="-1"><a class="header-anchor" href="#_2-3-命令模式升级" aria-hidden="true">#</a> 2.3 命令模式升级</h3><p>可以对这个项目进行升级，记录这个角色的行动历史，并且提供一个 <code>redo</code>、<code>undo</code> 按钮，撤销和重做角色的操作，可以想象一下如果不使用命令模式，记录的 Log 将比较乱，也不容易进行操作撤销和重做。</p><p>下面我们可以使用命令模式来对上面马里奥的例子进行重构，有下面几个要点：</p><ol><li>命令对象包含有 <code>execute</code> 方法和 <code>undo</code> 方法，前者是执行和重做时执行的方法，后者是撤销时执行的反方法；</li><li>每次执行操作时将当前操作命令推入撤销命令栈，并将当前重做命令栈清空；</li><li>撤销操作时，将撤销命令栈中最后推入的命令取出并执行其 <code>undo</code> 方法，且将该命令推入重做命令栈；</li><li>重做命令时，将重做命令栈中最后推入的命令取出并执行其 <code>execute</code> 方法，且将其推入撤销命令栈；</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 向上移动命令对象</span>
<span class="token keyword">const</span> MoveUpCommand <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">execute</span><span class="token punctuation">(</span><span class="token parameter">role</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    role<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span>CanvasStep<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">undo</span><span class="token punctuation">(</span><span class="token parameter">role</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    role<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> CanvasStep<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">// 向下移动命令对象</span>
<span class="token keyword">const</span> MoveDownCommand <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">execute</span><span class="token punctuation">(</span><span class="token parameter">role</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    role<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> CanvasStep<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">undo</span><span class="token punctuation">(</span><span class="token parameter">role</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    role<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span>CanvasStep<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">// 向左移动命令对象</span>
<span class="token keyword">const</span> MoveLeftCommand <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">execute</span><span class="token punctuation">(</span><span class="token parameter">role</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    role<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span><span class="token operator">-</span>CanvasStep<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">undo</span><span class="token punctuation">(</span><span class="token parameter">role</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    role<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span>CanvasStep<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">// 向右移动命令对象</span>
<span class="token keyword">const</span> MoveRightCommand <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">execute</span><span class="token punctuation">(</span><span class="token parameter">role</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    role<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span>CanvasStep<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">undo</span><span class="token punctuation">(</span><span class="token parameter">role</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    role<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span><span class="token operator">-</span>CanvasStep<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">// 命令管理者</span>
<span class="token keyword">const</span> CommandManager <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">undoStack</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 撤销命令栈</span>
  <span class="token literal-property property">redoStack</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 重做命令栈</span>

  <span class="token function">executeCommand</span><span class="token punctuation">(</span><span class="token parameter">role<span class="token punctuation">,</span> command</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>redoStack<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment">// 每次执行清空重做命令栈</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>undoStack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span> <span class="token comment">// 推入撤销命令栈</span>
    command<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>role<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token comment">/* 撤销 */</span>
  <span class="token function">undo</span><span class="token punctuation">(</span><span class="token parameter">role</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>undoStack<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span>
    <span class="token keyword">const</span> lastCommand <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>undoStack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    lastCommand<span class="token punctuation">.</span><span class="token function">undo</span><span class="token punctuation">(</span>role<span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>redoStack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>lastCommand<span class="token punctuation">)</span> <span class="token comment">// 放入redo栈中</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token comment">/* 重做 */</span>
  <span class="token function">redo</span><span class="token punctuation">(</span><span class="token parameter">role</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>redoStack<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span>
    <span class="token keyword">const</span> lastCommand <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>redoStack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    lastCommand<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>role<span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>undoStack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>lastCommand<span class="token punctuation">)</span> <span class="token comment">// 放入undo栈中</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">// 设置按钮命令</span>
<span class="token keyword">const</span> <span class="token function-variable function">setCommand</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">element<span class="token punctuation">,</span> role<span class="token punctuation">,</span> command</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> command <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    element<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      CommandManager<span class="token punctuation">.</span><span class="token function">executeCommand</span><span class="token punctuation">(</span>role<span class="token punctuation">,</span> command<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    element<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">command</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>CommandManager<span class="token punctuation">,</span> role<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">/* ----- 客户端 ----- */</span>
<span class="token keyword">const</span> mario <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Role</span><span class="token punctuation">(</span>
  <span class="token number">200</span><span class="token punctuation">,</span>
  <span class="token number">200</span><span class="token punctuation">,</span>
  <span class="token string">&#39;https://i.loli.net/2019/08/09/sqnjmxSZBdPfNtb.jpg&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>

<span class="token function">setCommand</span><span class="token punctuation">(</span>btnUp<span class="token punctuation">,</span> mario<span class="token punctuation">,</span> MoveUpCommand<span class="token punctuation">)</span>
<span class="token function">setCommand</span><span class="token punctuation">(</span>btnDown<span class="token punctuation">,</span> mario<span class="token punctuation">,</span> MoveDownCommand<span class="token punctuation">)</span>
<span class="token function">setCommand</span><span class="token punctuation">(</span>btnLeft<span class="token punctuation">,</span> mario<span class="token punctuation">,</span> MoveLeftCommand<span class="token punctuation">)</span>
<span class="token function">setCommand</span><span class="token punctuation">(</span>btnRight<span class="token punctuation">,</span> mario<span class="token punctuation">,</span> MoveRightCommand<span class="token punctuation">)</span>

<span class="token function">setCommand</span><span class="token punctuation">(</span>btnUndo<span class="token punctuation">,</span> mario<span class="token punctuation">,</span> CommandManager<span class="token punctuation">.</span>undo<span class="token punctuation">)</span>
<span class="token function">setCommand</span><span class="token punctuation">(</span>btnRedo<span class="token punctuation">,</span> mario<span class="token punctuation">,</span> CommandManager<span class="token punctuation">.</span>redo<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),x={href:"https://codepen.io/SHERlocked93/pen/GVxOGz",target:"_blank",rel:"noopener noreferrer"},S=n("p",null,"我们可以给马里奥画一个蘑菇 ，当马里奥走到蘑菇上面的时候提示「挑战成功！」",-1),M=n("p",null,"代码实现就不贴了，可以看看下面的实现链接。效果如下：",-1),R=n("p",null,[n("img",{src:k,alt:"image-20230811161601845"})],-1),j={href:"https://codepen.io/SHERlocked93/pen/QeZoKv?editors=1011",target:"_blank",rel:"noopener noreferrer"},E=p('<p>有了撤销和重做命令之后，做一些小游戏比如围棋、象棋，会很容易就实现悔棋、复盘等功能。</p><h2 id="_3-命令模式的优缺点" tabindex="-1"><a class="header-anchor" href="#_3-命令模式的优缺点" aria-hidden="true">#</a> 3. 命令模式的优缺点</h2><p>命令模式的优点：</p><ol><li>命令模式将调用命令的请求对象与执行该命令的接收对象解耦，因此系统的可扩展性良好，加入新的命令不影响原有逻辑，所以增加新的命令也很容易；</li><li>命令对象可以被不同的请求者角色重用，方便复用；</li><li>可以将命令记入日志，根据日志可以容易地实现对命令的撤销和重做；</li></ol><p>命令模式的缺点：命令类或者命令对象随着命令的变多而膨胀，如果命令对象很多，那么使用者需要谨慎使用，以免带来不必要的系统复杂度。</p><h2 id="_4-命令模式的使用场景" tabindex="-1"><a class="header-anchor" href="#_4-命令模式的使用场景" aria-hidden="true">#</a> 4. 命令模式的使用场景</h2><ol><li>需要将请求调用者和请求的接收者解耦的时候；</li><li>需要将请求排队、记录请求日志、撤销或重做操作时；</li></ol><h2 id="_5-其他相关模式" tabindex="-1"><a class="header-anchor" href="#_5-其他相关模式" aria-hidden="true">#</a> 5. 其他相关模式</h2><h3 id="_5-1-命令模式与职责链模式" tabindex="-1"><a class="header-anchor" href="#_5-1-命令模式与职责链模式" aria-hidden="true">#</a> 5.1 命令模式与职责链模式</h3><p>命令模式和职责链模式可以结合使用，比如具体命令的执行，就可以引入职责链模式，让命令由职责链中合适的处理者执行。</p><h3 id="_5-2-命令模式与组合模式" tabindex="-1"><a class="header-anchor" href="#_5-2-命令模式与组合模式" aria-hidden="true">#</a> 5.2 命令模式与组合模式</h3><p>命令模式和组合模式可以结合使用，比如不同的命令可以使用组合模式的方法形成一个宏命令，执行完一个命令之后，再继续执行其子命令。</p><h3 id="_5-3-命令模式与工厂模式" tabindex="-1"><a class="header-anchor" href="#_5-3-命令模式与工厂模式" aria-hidden="true">#</a> 5.3 命令模式与工厂模式</h3><p>命令模式与工厂模式可以结合使用，比如命令模式中的命令可以由工厂模式来提供。</p>',14);function D(I,B){const a=o("ExternalLinkIcon");return c(),i("div",null,[d,n("blockquote",null,[n("p",null,[v,s(" 本文可能用到一些 ES6 的语法 "),n("a",m,[s("let/const"),t(a)]),s(" 、"),n("a",b,[s("Class"),t(a)]),s(" 等，如果还没接触过可以点击链接稍加学习 ~")])]),h,n("p",null,[s("代码和预览参见："),n("a",f,[s("Codepen - 状态模式 Demo1"),t(a)])]),y,n("p",null,[s("代码和预览参见："),n("a",w,[s("Codepen-状态模式 Demo2"),t(a)])]),g,n("p",null,[s("代码和预览参见："),n("a",C,[s("Codepen-状态模式 Demo3"),t(a)])]),_,n("p",null,[s("代码和预览参见："),n("a",x,[s("Codepen-状态模式 Demo4"),t(a)])]),S,M,R,n("p",null,[s("代码和预览参见："),n("a",j,[s("Codepen-状态模式 Demo5"),t(a)])]),E])}const U=e(r,[["render",D],["__file","index-23.html.vue"]]);export{U as default};
