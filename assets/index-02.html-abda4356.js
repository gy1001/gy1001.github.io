import{_ as r,M as o,p as l,q as i,R as e,t,N as a,a1 as s}from"./framework-e8cb8151.js";const p={},c=s(`<h1 id="_02-完整的写一个-button-组件" tabindex="-1"><a class="header-anchor" href="#_02-完整的写一个-button-组件" aria-hidden="true">#</a> 02: 完整的写一个 Button 组件</h1><blockquote><p>热身项目，简单一个 Button 组件，感受一下整个过程</p></blockquote><h2 id="_01-如何完善组件单测" tabindex="-1"><a class="header-anchor" href="#_01-如何完善组件单测" aria-hidden="true">#</a> 01: 如何完善组件单测</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token function">add</span> @testing-library/react
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,4),d={href:"https://www.jianshu.com/p/0104595b0123/",target:"_blank",rel:"noopener noreferrer"},u={href:"https://testing-library.com/docs/react-testing-library/intro",target:"_blank",rel:"noopener noreferrer"},y={href:"https://www.robinwieruch.de/react-testing-library/",target:"_blank",rel:"noopener noreferrer"},h=s(`<ul><li>组件渲染 render</li><li>元素查找 get/query/find</li><li>事件触发 fireEvent</li></ul><h3 id="render" tabindex="-1"><a class="header-anchor" href="#render" aria-hidden="true">#</a> render</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">container</span><span class="token operator">:</span> HTMLDivElement<span class="token punctuation">,</span> <span class="token comment">// 组件渲染的容器</span>
  <span class="token literal-property property">baseElement</span><span class="token operator">:</span> HTMLBodyElement<span class="token punctuation">,</span> <span class="token comment">// 相当于 document.body</span>
  <span class="token literal-property property">debug</span><span class="token operator">:</span> Function<span class="token punctuation">,</span> <span class="token comment">// 打印当前 DOM 解构</span>
  <span class="token literal-property property">rerender</span><span class="token operator">:</span> Function<span class="token punctuation">,</span> <span class="token comment">// 重新渲染组件</span>
  <span class="token literal-property property">unmount</span><span class="token operator">:</span> Function<span class="token punctuation">,</span> <span class="token comment">// 组件卸载</span>
<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">render</span><span class="token punctuation">(</span>component<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="queries" tabindex="-1"><a class="header-anchor" href="#queries" aria-hidden="true">#</a> Queries</h3><table><thead><tr><th style="text-align:center;">search type （单个元素）</th><th style="text-align:center;">search type （多个元素）</th><th>function （查询单个元素）</th><th style="text-align:center;">适用场景</th></tr></thead><tbody><tr><td style="text-align:center;">getBy</td><td style="text-align:center;">getAllBy</td><td>getByText、getByRole、 getByLabelText、 getByPlaceholderText、 getByAltText、 getByDisplayValue、</td><td style="text-align:center;">由于只返回元素或 error，适用于确定该元素存在的情况</td></tr><tr><td style="text-align:center;">queryBy</td><td style="text-align:center;">queryAllBy</td><td>queryByText、queryByRole、queryByLabelText、queryByPlaceholderText、queryByAltText、queryByDisplayValue</td><td style="text-align:center;">用于元素可能不存在</td></tr><tr><td style="text-align:center;">findBy</td><td style="text-align:center;">findAllBy</td><td>findByText、findByRole、findByLabelText、findByPlaceholderText、 findByAltText、findByDisplayValue</td><td style="text-align:center;">用于异步元素</td></tr></tbody></table><h3 id="fireevent" tabindex="-1"><a class="header-anchor" href="#fireevent" aria-hidden="true">#</a> fireEvent</h3><blockquote><p>fireEvent(node, event)</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>fireEvent<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span>
fireEvent<span class="token punctuation">.</span><span class="token function">change</span><span class="token punctuation">(</span>screen<span class="token punctuation">.</span><span class="token function">getByRole</span><span class="token punctuation">(</span><span class="token string">&#39;textbox&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;JavaScript&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8);function k(b,v){const n=o("ExternalLinkIcon");return l(),i("div",null,[c,e("p",null,[e("a",d,[t("React Testing Library 入门"),a(n)]),e("a",u,[t("https://testing-library.com/docs/react-testing-library/intro"),a(n)]),e("a",y,[t("https://www.robinwieruch.de/react-testing-library/"),a(n)])]),h])}const m=r(p,[["render",k],["__file","index-02.html.vue"]]);export{m as default};
