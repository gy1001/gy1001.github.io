import{_ as i,p as e,q as l,a1 as a}from"./framework-e8cb8151.js";const t={},r=a('<h1 id="_01-学前准备" tabindex="-1"><a class="header-anchor" href="#_01-学前准备" aria-hidden="true">#</a> 01-学前准备</h1><h2 id="跨平台的优势和机遇" tabindex="-1"><a class="header-anchor" href="#跨平台的优势和机遇" aria-hidden="true">#</a> 跨平台的优势和机遇</h2><ul><li>快速开发，降本增效</li><li>合并两端人员，促进技术融合</li><li>迎合大前端趋势，构建全栈能力</li></ul><h2 id="各种跨平台方案的百家争鸣" tabindex="-1"><a class="header-anchor" href="#各种跨平台方案的百家争鸣" aria-hidden="true">#</a> 各种跨平台方案的百家争鸣</h2><ul><li>weex</li><li>React Native</li><li>Flutter</li><li>微信小程序</li><li>uniApp</li><li>…</li></ul><h2 id="react-native-和-flutter-的比较" tabindex="-1"><a class="header-anchor" href="#react-native-和-flutter-的比较" aria-hidden="true">#</a> React Native 和 Flutter 的比较</h2><ul><li>RN 的学习曲线相对比较平缓，更利于边学边做。Flutter 独特的开发方式和巨量的 widget 列表让人望而生畏</li><li>Flutter 性能优于 RN。但是 RN 近几年的发展更新已经逐步缩小差距</li><li>学习 RN 对于往大前端全站方向发展更有优势，而 Flutter 目前在 Web、小程序、桌面端表现平平</li><li>RN 天然支持热修复，而 Flutter 需要其他方案支持</li><li>Flutter 出自 Google，对于安卓开发有“情感优势”，而 RN 出自 FaceBook, 需要重新学习前端语言</li><li>二者都是非常优秀的跨平台方案，从需要选择，理性看待，不要简单用优质/低劣划分</li></ul><h2 id="学习-rn-的优势" tabindex="-1"><a class="header-anchor" href="#学习-rn-的优势" aria-hidden="true">#</a> 学习 RN 的优势</h2><ul><li>综合能力更均衡，已经被行业验证的成熟方案</li><li>开发效率高，JS 复用率最高可达 95%</li><li>在大前端全栈方面优于其他矿平台方案</li></ul><h2 id="react-native-大厂优势" tabindex="-1"><a class="header-anchor" href="#react-native-大厂优势" aria-hidden="true">#</a> React Native 大厂优势</h2><ul><li>Meta</li><li>Microsoft</li><li>QQ</li><li>Baidu</li><li>…</li></ul><h2 id="学习目标" tabindex="-1"><a class="header-anchor" href="#学习目标" aria-hidden="true">#</a> 学习目标</h2><ul><li>全面掌握 RN 开发基础，进阶开发技巧，熟练应用在企业级项目开发中</li><li>深入了解RN，社区热点和发展趋势，能够跟随社区持续学习</li><li>借助 RN 技术栈顺带学习 React 开发技巧</li></ul>',13),h=[r];function d(n,c){return e(),l("div",null,h)}const s=i(t,[["render",d],["__file","index-01.html.vue"]]);export{s as default};
