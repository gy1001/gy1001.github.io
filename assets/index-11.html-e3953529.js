import{_ as p,M as r,p as o,q as i,R as a,t as s,N as e,a1 as t}from"./framework-e8cb8151.js";const l={},c=t(`<h1 id="_11-项目设计" tabindex="-1"><a class="header-anchor" href="#_11-项目设计" aria-hidden="true">#</a> 11- 项目设计</h1><h2 id="_01-面试为何会考察组件和状态设计" tabindex="-1"><a class="header-anchor" href="#_01-面试为何会考察组件和状态设计" aria-hidden="true">#</a> 01: 面试为何会考察组件和状态设计</h2><h3 id="组件和状态设计" tabindex="-1"><a class="header-anchor" href="#组件和状态设计" aria-hidden="true">#</a> 组件和状态设计</h3><ul><li>框架（vue React）的使用（和高级特性）是必要条件</li><li>能独立负责项目？还是需要别人带着？-----考察设计能力</li><li>面试必考（二/三面），场景题</li></ul><h3 id="考察重点" tabindex="-1"><a class="header-anchor" href="#考察重点" aria-hidden="true">#</a> 考察重点</h3><ul><li>数据驱动视图</li><li>状态：数据结构设计（react-state, vue-data）</li><li>视图：组件结构和拆分</li></ul><h3 id="回顾面试题" tabindex="-1"><a class="header-anchor" href="#回顾面试题" aria-hidden="true">#</a> 回顾面试题</h3><ul><li>React 设计 todoList （组件结构，redux state 数据结构）</li><li>Vue 设计购物车（组件结构，vuex state 数据结构）</li></ul><h2 id="_02-状态设计的思路和要点" tabindex="-1"><a class="header-anchor" href="#_02-状态设计的思路和要点" aria-hidden="true">#</a> 02: 状态设计的思路和要点</h2><h3 id="react-实现-todo-list" tabindex="-1"><a class="header-anchor" href="#react-实现-todo-list" aria-hidden="true">#</a> React 实现 Todo List</h3><ul><li>state 数据结构设计</li><li>组件设计（拆分、组合）和组件通讯</li><li>代码演示</li></ul><h3 id="设计原型图" tabindex="-1"><a class="header-anchor" href="#设计原型图" aria-hidden="true">#</a> 设计原型图</h3><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/30d56180a13d4651ae9ab7c5ba6d9d27~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p><h3 id="state-数据结构设计" tabindex="-1"><a class="header-anchor" href="#state-数据结构设计" aria-hidden="true">#</a> state 数据结构设计</h3><ul><li>用数据描述所有的内容</li><li>数据要结构化，易于程序操作（遍历、查找）</li><li>数据要可扩展，以便增加新的功能</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">list</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;标题1&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">complete</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_03-组件设计的思路和要点" tabindex="-1"><a class="header-anchor" href="#_03-组件设计的思路和要点" aria-hidden="true">#</a> 03: 组件设计的思路和要点</h2><h3 id="组件设计原则" tabindex="-1"><a class="header-anchor" href="#组件设计原则" aria-hidden="true">#</a> 组件设计原则</h3><ul><li>从功能上拆分层次</li><li>尽量让组件原子化</li><li>容器组件（只管理数据）&amp;&amp; UI 组件（只显示视图）</li></ul><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e17bb66af80f46278808ec7b68ad45f4~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p><h3 id="组件设计" tabindex="-1"><a class="header-anchor" href="#组件设计" aria-hidden="true">#</a> 组件设计</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// APP: 只负责数据管理</span>
<span class="token comment">// Input 只负责输入，将数据结果传递给父组件</span>
<span class="token comment">// List: 只负责列表显示，从父组件获取数据</span>
<span class="token comment">// ListItem: 显式单条数据，删除、切换完成状态</span>
<span class="token operator">&lt;</span>App<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>Input <span class="token operator">/</span><span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>List<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>ListItem<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>ListItem<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>ListItem<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>ListItem<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>ListItem<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>ListItem<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>ListItem<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>ListItem<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>List<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>App<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_04-react-实现-todolist-代码演示" tabindex="-1"><a class="header-anchor" href="#_04-react-实现-todolist-代码演示" aria-hidden="true">#</a> 04:React 实现 TodoList 代码演示</h2>`,23),d={href:"https://github.com/gy1001/Javascript/tree/main/frame-project-interview/react-code-demo/src/components/TodoLIst",target:"_blank",rel:"noopener noreferrer"},u=t(`<h3 id="react-实现-todo-list-总结" tabindex="-1"><a class="header-anchor" href="#react-实现-todo-list-总结" aria-hidden="true">#</a> React 实现 Todo List -- 总结</h3><ul><li>state 数据结构设计</li><li>组件设计组件通讯</li><li>结合 redux</li></ul><h2 id="_05-vue-实现购物车-你将如何设计" tabindex="-1"><a class="header-anchor" href="#_05-vue-实现购物车-你将如何设计" aria-hidden="true">#</a> 05: Vue 实现购物车-你将如何设计</h2><ul><li>data 数据结构设计</li><li>组件设计和组件通讯</li><li>代码演示</li></ul><h3 id="设想原型图" tabindex="-1"><a class="header-anchor" href="#设想原型图" aria-hidden="true">#</a> 设想原型图</h3><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/16a6620d3eeb448aa025048a78357d51~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p><h2 id="_06-vue-实现购物车-data-如何设计" tabindex="-1"><a class="header-anchor" href="#_06-vue-实现购物车-data-如何设计" aria-hidden="true">#</a> 06: Vue 实现购物车 data 如何设计</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token literal-property property">productList</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;商品1&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">price</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">cartList</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
      <span class="token literal-property property">quantity</span><span class="token operator">:</span> <span class="token number">1</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_07-vue-实现购物车-组件设计和代码演示" tabindex="-1"><a class="header-anchor" href="#_07-vue-实现购物车-组件设计和代码演示" aria-hidden="true">#</a> 07: Vue 实现购物车-组件设计和代码演示</h2><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/42828ac20f0d4f168c89949ddc15c394~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// App: 管理所有数据</span>
<span class="token comment">// ProductList：商品列表</span>
<span class="token comment">// CartList：购物车列表和总价</span>
<span class="token operator">&lt;</span>App<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>ProductList<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>ProductListItem<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>ProductListItem<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>ProductListItem<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>ProductListItem<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>ProductListItem<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>ProductListItem<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>ProductList<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>CartList<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>CartItem<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>CartItem<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>CartItem<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>CartItem<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>CartList<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>App<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),m={href:"https://github.com/gy1001/Javascript/blob/main/frame-project-interview/vue-code-demo/src/components/Cart/index.vue",target:"_blank",rel:"noopener noreferrer"},k=a("h2",{id:"_08-结合-vuex-实现购物车",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_08-结合-vuex-实现购物车","aria-hidden":"true"},"#"),s(" 08: 结合 vuex 实现购物车")],-1),h={href:"https://github.com/gy1001/Javascript/blob/main/frame-project-interview/vuex-shopping-cart-demo/app.js",target:"_blank",rel:"noopener noreferrer"},v=t('<h2 id="_09-状态设计和组件设计的考点总结" tabindex="-1"><a class="header-anchor" href="#_09-状态设计和组件设计的考点总结" aria-hidden="true">#</a> 09: 状态设计和组件设计的考点总结</h2><ul><li>data 数据结构设计</li><li>组件设计和组件通讯</li><li>结合 redux</li></ul><h3 id="data-数据结构设计" tabindex="-1"><a class="header-anchor" href="#data-数据结构设计" aria-hidden="true">#</a> data 数据结构设计</h3><ul><li>用数据描述所有的内容</li><li>数据要结构化，易于程序操作（遍历、查找）</li><li>数据要可扩展，以便增加新的功能</li></ul><h3 id="组件设计-1" tabindex="-1"><a class="header-anchor" href="#组件设计-1" aria-hidden="true">#</a> 组件设计</h3><ul><li>从功能上拆分层次</li><li>尽量让组件原子化</li><li>容器组件（只管理数据）&amp;&amp; UI 组件（只显示视图）</li></ul>',6);function b(g,f){const n=r("ExternalLinkIcon");return o(),i("div",null,[c,a("p",null,[a("a",d,[s("代码演示"),e(n)])]),u,a("p",null,[a("a",m,[s("代码演示"),e(n)])]),k,a("p",null,[a("a",h,[s("https://github.com/gy1001/Javascript/blob/main/frame-project-interview/vuex-shopping-cart-demo/app.js"),e(n)])]),v])}const x=p(l,[["render",b],["__file","index-11.html.vue"]]);export{x as default};
