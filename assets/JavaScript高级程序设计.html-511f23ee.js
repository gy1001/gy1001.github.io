import{_ as n,p as s,q as a,a1 as e}from"./framework-e8cb8151.js";const t={},i=e(`<h1 id="javascript-高级程序设计-md" tabindex="-1"><a class="header-anchor" href="#javascript-高级程序设计-md" aria-hidden="true">#</a> JavaScript 高级程序设计.md</h1><h2 id="_17-事件" tabindex="-1"><a class="header-anchor" href="#_17-事件" aria-hidden="true">#</a> 17. 事件</h2><h3 id="_17-6-模拟-dom-事件" tabindex="-1"><a class="header-anchor" href="#_17-6-模拟-dom-事件" aria-hidden="true">#</a> 17.6 模拟 DOM 事件</h3><p>任何时候，都可以通过<code>document.createEvent()</code>方法创建一个event 对象。这个方法接收一个参数，此参数是一个表示要创建事件类型的字符串。可用的字符串是以下值之一</p><ul><li>UIEvents：(DOM3中是 UIEvent) 通用用户界面事件（鼠标事件和键盘事件都继承自这个事件）</li><li>MouseEvents: (DOM3中是 MouseEvent): 通用鼠标事件</li><li>HTMLEvents:(DOM3中没有)：通用鼠标事件</li></ul><p>事件模拟的最后一步是触发事件。为此要使用 *dispatchEvent()*方法，这个方法存在于所有支持事件的DOM节点上。 接收一个参数，即表示要触发事件的 event 对象。调用 dispatchEvent()后，事件就“转正”了，接着便冒泡并触发事件处理程序执行。</p><h4 id="_17-6-1-模拟鼠标事件" tabindex="-1"><a class="header-anchor" href="#_17-6-1-模拟鼠标事件" aria-hidden="true">#</a> 17.6.1 模拟鼠标事件</h4><blockquote><p>要创建鼠标 event 对象，可以调用 createEvent() 方法并传入 MouseEvents 参数。这样可以返回一个 event 对象，这个对象有一个 initMouseEvent() 方法，用于为新对象指定鼠标的特定信息。</p></blockquote><p>initMouseEvent()方法接收15个参数，分别对应鼠标事件会暴露的属性。这些参数列举如下</p><ul><li>type(字符串)：要触发的事件类型，如 click</li><li>buddles(布尔值)：表示事件是否冒泡。为精确模拟鼠标事件，应该设置为 true</li><li>cancelable(布尔值)：表示事件是否可以取消。为精确模拟鼠标事件，应该设置为 true</li><li>view(AbstractView)：与事件关联的视图。只被事件处理程序使用，通常为 0</li><li>detail(整数)：关于事件的额外信息。只被事件处理程序使用，通常为 0</li><li>screenX(整数)：事件相对于屏幕的x坐标</li><li>screenY（整数）：事件相对于屏幕的 y 坐标。</li><li>clientX（整数）：事件相对于视口的 x 坐标。</li><li>clientY（整数）：事件相对于视口的 y 坐标。</li><li>ctrlkey（布尔值）：表示是否按下了 Ctrl 键。默认为 false。</li><li>altkey（布尔值）：表示是否按下了 Alt 键。默认为 false。</li><li>shiftkey（布尔值）：表示是否按下了 Shift 键。默认为 false。</li><li>metakey（布尔值）：表示是否按下了 Meta 键。默认为 false。</li><li>button（整数）：表示按下了哪个按钮。默认为 0。</li><li>relatedTarget（对象）：与事件相关的对象。只在模拟 mouseover 和 mouseout 时使用。</li></ul><p>代码如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;myBtn&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// 创建 event 对象</span>
<span class="token keyword">let</span> event <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createEvent</span><span class="token punctuation">(</span><span class="token string">&#39;MouseEvents&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// 初始化 event 对象</span>
event<span class="token punctuation">.</span><span class="token function">initMouseEvent</span><span class="token punctuation">(</span>
  <span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span>
  <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token boolean">true</span><span class="token punctuation">,</span>
  document<span class="token punctuation">.</span>defaultView<span class="token punctuation">,</span>
  <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token keyword">null</span>
<span class="token punctuation">)</span>
<span class="token comment">// 触发事件</span>
btn<span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),l=[i];function c(p,o){return s(),a("div",null,l)}const d=n(t,[["render",c],["__file","JavaScript高级程序设计.html.vue"]]);export{d as default};
