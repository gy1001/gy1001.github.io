import{_ as t,M as l,p as i,q as p,Q as s,R as n,t as e,N as c,a1 as a}from"./framework-e8cb8151.js";const d={},u=a('<h1 id="_05-flexbox-布局中的-flex-属性的基础运用" tabindex="-1"><a class="header-anchor" href="#_05-flexbox-布局中的-flex-属性的基础运用" aria-hidden="true">#</a> 05-Flexbox 布局中的 flex 属性的基础运用</h1><p>Flexbox 的设计目的是在包含元素（Flex 容器）中沿着行或列分配元素（Flex 项目）和空间。而它的最大特性就是 Flex 项目可伸缩，也就是让 Flex 项目的宽度（或高度）可以自动填充 Flex 容器剩余空间或 Flex 项目适配 Flex 容器不足的空间。而这一切都依赖于 Flexbox 模块中的 <code>flex</code> 属性来完成。</p><p>一个 Flex 容器会按照各个 Flex 项目的扩展比率分配 Flex 容器剩余空间，也会按照收缩比率来收缩 Flex 项目，以免 Flex 项目溢出 Flex 容器。简单地说，<strong>Flex 项目的大小由 Flexbox 布局算法调整，也只有这种布局才称得上是灵活性的布局。</strong></p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/57e282bdf2904fcd85f2711deef3c6b0~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><p>这种灵活性的布局将会涉及 Flex 项目的计算，那么问题来了，Flexbox 布局中的 Flex 项目是如何计算的呢？它和扩展比率或收缩比率之间又存在些什么关系呢？我们将带着这些疑问开启本课程的学习。</p><h2 id="flexbox-中空间是如何分配的" tabindex="-1"><a class="header-anchor" href="#flexbox-中空间是如何分配的" aria-hidden="true">#</a> Flexbox 中空间是如何分配的？</h2><p>要分配空间，首先浏览器必须确定<strong>有多少空间可用</strong> 。一般情况，浏览器会按照下面的过程来分配空间。</p><ul><li><strong>计算 Flex 容器内的可用空间</strong> 。Flex 容器的可用空间指的是 Flex 容器的主轴尺寸（Main Size）减去其 <strong>内距（<code>padding</code>）</strong> 、 <strong>边框宽度（<code>border-width</code>）</strong> 、<strong>间距（<code>gap</code>）</strong> 和 <strong>Flex 项目的外边距（<code>margin</code>）</strong> 。</li></ul>',8),r=a("<ul><li><strong>计算每个 Flex 项目的伸缩基础大小和假设的主尺寸</strong> ，即使用 <code>flex-basis</code> 、<code>min-width</code> 、<code>min-inline-size</code> 、<code>width</code> 、 <code>inline-size</code> 或 Flex 项目内容大小（<code>min-content</code> 或 <code>max-content</code>）设定的大小。其中 <code>flex-basis</code> 是 Flex 项目所需的最小尺寸，假设的主尺寸是指应用伸缩因子之前 Flex 项目的尺寸。而且 Flex 项目的伸缩基础大小永远不会小于其内容的伸缩基础大小。</li></ul>",1),x=n("ul",null,[n("li",null,[n("strong",null,"计算所有"),e(),n("strong",null,"Flex"),e(),n("strong",null,"项目的总假设主尺寸"),e(" 。")])],-1),m=a('<ul><li><strong>将所有 Flex 项目的假想主尺寸与 Flex 容器的可用空间进行比较</strong> 。当所有 Flex 项目的假想主尺寸总和大于 Flex 容器可用空间时，将会使用 <code>flex-shrink</code> 属性值作为 Flex 项目的收缩因子（收缩比率）来收缩 Flex 项目；当所有 Flex 项目的假想主尺寸总和小于 Flex 容器可用空间时，将会使用 <code>flex-grow</code> 属性值作为 Flex 项目的扩展因子（扩展比率）来扩展 Flex 项目。</li></ul><p>也就是说，使用 Flexbox 布局时，浏览器会使用伸缩因子（包括扩展因子和收缩因子）决定从每个 Flex 项目中增加（扩展因子）或减去（收缩因子） Flex 容器的剩余空间，并且浏览器在循环中完成每个 Flex 项目的计算。</p><blockquote><p>剩余空间是指从 Flex 容器的内部宽度减去具有一定大小的 Flex 项目的总和、加上内距和间距值后剩下的部分。如果 Flex 项目设置了外距，还需要减去外距。</p></blockquote><p>而且浏览器还会将确定的尺寸看作是 Flex 项目的已知尺寸。当一个 Flex 项目具有一定的尺寸时，它被认为是一个非弹性的 Flex 项目。没有明确尺寸的 Flex 项目则被认为是灵活的 Flex 项目。</p><h2 id="先了解一些概念" tabindex="-1"><a class="header-anchor" href="#先了解一些概念" aria-hidden="true">#</a> 先了解一些概念</h2><p>Flex 项目的计算其实就是 <strong>Flex 项目尺寸的计算</strong> ，但在 CSS 中设置元素尺寸，主要由 <strong>尺寸属性</strong> 和 <strong>尺寸属性值</strong> 两部分来决定，只不过，这两部分所涉及到的内容比较多。</p><p>比如说，在 CSS 中给一个元素设置尺寸时，常会使用 <code>width</code> 、<code>height</code> 、<code>inline-size</code> 和 <code>block-size</code> ，也会使用 <code>min-width</code> 、<code>min-height</code> 、<code>min-inline-size</code> 、<code>min-block-size</code> 、<code>max-width</code> 、<code>max-height</code> 、<code>max-inline-size</code> 和 <code>max-block-size</code> 给元素限定一个尺寸。但要最终决定元素尺寸大小的是这些属性的值，比如：</p><ul><li><code>auto</code>：设置值为 <code>auto</code> 时，容器的大小将会以容器上下文来计算。如果它是个块元素，等于父容器宽度，如果它是个内联元素，则等于元素内容的尺寸大小；不过给 <code>min-width</code>、<code>min-height</code>、<code>min-inline-size</code> 或 <code>min-block-size</code> 设置值为 <code>auto</code> 时，将会指定一个自动计算好的最小值 。</li></ul>',8),k=n("ul",null,[n("li",null,[n("code",null,"none"),e("：如果取值为 "),n("code",null,"none"),e(" 时，元素盒子的大小是没有任何限制的。")])],-1),b=a("<ul><li><code>&lt;length-percentage&gt;</code>：使用 <code>&lt;length&gt;</code> 或 <code>&lt;percent&gt;</code> 指定元素的大小。其中 <code>&lt;length&gt;</code> 是一个长度值，它可能是一个固定长度值，也可能是一个相对长度值，主要取决于其单位，比如 <code>px</code> 是一个固定值，<code>vw</code> 和 <code>rem</code> 又是一个相对值。<code>&lt;percent&gt;</code> 是一个百分比值，根据其父元素的宽度来解析百分比。</li></ul>",1),v=n("ul",null,[n("li",null,[n("code",null,"min-content"),e("：如果指定了内联轴，那么 "),n("code",null,"min-content"),e(" 对应的大小则是内联大小，否则将表现为属性的初始值，即固有的最小宽度。")])],-1),g=n("ul",null,[n("li",null,[n("code",null,"max-content"),e("：如果指定了内联轴，那么 "),n("code",null,"max-content"),e(" 对应的大小则是内联大小，否则将表现为属性的初始值，即固有的首选宽度。")])],-1),f=a("<ul><li><code>fit-content()</code>：如果显式指定了内联轴，使用 <code>fit-content()</code> 函数，可以用指定的参数替换可用空间，即 <code>min(max-content, max(min-content, &lt;length-percentage&gt;))</code>；否则将表现为属性的初始值。对于内在尺寸，<code>fit-content(&lt;length&gt;)</code> 表现长度值（<code>&lt;length&gt;</code>）。如果 <code>fit-content()</code> 使用了百分比值，<code>min-content</code> 作为最小内容，<code>max-content</code> 作为最大内容 。</li></ul><p>而其中<code>auto</code> 、<code>min-content</code> 、<code>max-content</code> 和 <code>fit-content()</code> 又被称为自动计算尺寸大小方式。</p><p>使用这些属性和值设定元素尺寸时，又根据使用的值不同，可以分为：</p><ul><li><strong>明确的尺寸</strong>，指的是不需要执行布局就可以确定盒子的大小。也就是说，显式给容器设置一个固定值，或内容所占区域的大小，或一个容器块的初始大小，或通过其他计算方式得到的尺寸（比如Flexbox 布局中的“拉伸和压缩（Strretch-fit）”）。</li></ul>",4),h=a('<ul><li><strong>不确定的尺寸</strong>，指的是一个未知的尺寸。换句话说，容器具备无限空间。</li></ul><p>通俗一点来理解的话，明确的尺寸是知道容器的 <code>width</code>（或 <code>inline-size</code>）和 <code>height</code>（或 <code>block-size</code>）；不确定的尺寸是需要根据内容来计算的，所以要知道，不确定的尺寸需要先检查内容。</p><p>在 Flexbox 布局中，除了上述提到的方式可以指定 Flex 项目尺寸之外，Flexbox 模块中的 <code>flex-basis</code> 属性（<code>flex</code> 简写属性成员之一） 也可以用来设定 Flex 项目的大小。而且它还会受 <code>flex</code> 属性中的 <code>flex-grow</code> 和 <code>flex-shrink</code> ，以及Flex 容器的可用空间、剩余空间和不足空间等因素影响。</p><p>Flexbox 布局中的 <code>flex-basis</code> 可用来指定 Flex 项目在 Flex 容器主轴方向的初始值。简单地说，除了 <code>auto</code> 和 <code>content</code>，<code>flex-basis</code> 都以与水平书写模式中 <code>width</code>相同的方式解析（除了 <code>width</code> 值设置为 <code>auto</code>，<code>flex-basis</code> 设置为 <code>content</code>）。</p><p>当然，在 Flexbox 纵向布局（即<code>flex-direction</code> 取值为 <code>column</code> 或 <code>column-reverse</code> 时），<code>flex-basis</code> 对应的值就和<code>height</code> 相同。而且当书写模式改变时，相应的取值方式也会有所改变。用张图来简单描述一下：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9a2a85c988f4433898d041a46d7fb1b9~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p>',6),F={href:"https://juejin.cn/book/7161370789680250917/section/7161621092560273439",target:"_blank",rel:"noopener noreferrer"},_=a(`<h2 id="flex-的基础使用" tabindex="-1"><a class="header-anchor" href="#flex-的基础使用" aria-hidden="true">#</a> <code>flex</code> 的基础使用</h2><p><code>flex</code> 是一个只能用于 Flex 项目的属性，它可以<strong>让 Flex 项目根据 Flex 容器的可用空间对自身做伸缩计算</strong> ，它包含三个子属性：<code>flex-basis</code> 、<code>flex-grow</code> 和 <code>flex-shrink</code> 。</p><p>为了让大家更好地理解 <code>flex</code> 属性以及它的子属性，我们先从一个简单的 Flex 项目开始：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>A<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>B<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>C<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>D<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>E<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
  <span class="token selector">.container</span> <span class="token punctuation">{</span>
    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
    <span class="token property">inline-size</span><span class="token punctuation">:</span> 1000px<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/89bf88a91f4344849ad9e2d208aa5474~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p>`,5),w={href:"https://codepen.io/airen/full/JjvWgar",target:"_blank",rel:"noopener noreferrer"},z=a('<p>默认情况，浏览器对 Flex 项目计算结果如下：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cf7e64be2f324b3babbafcb0bf989842~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><p>我们在 Flex 容器上显式设置了 <code>inline-size</code> 值为 <code>1000px</code> ，在所有 Flex 项目上未显式设置任何与尺寸有关的属性（比如 <code>width</code> 、 <code>inline-size</code> 或 <code>flex-basis</code> 等），浏览器在计算如下：</p><ul><li>Flex 容器可用空间是 <code>1000px</code> ；</li></ul>',4),j=a("<ul><li>每一个 Flex 项目因未显式设置任何与尺寸有关的属性，浏览器视每一个 Flex 项目的尺寸即为其内容的最大尺寸（<code>max-content</code>），同时浏览器根据内容多少，可计算出其宽度的具体值是多少像素值。我们示例中每个 Flex 项目的宽度分别是 <code>237.56px</code> 、 <code>70.26px</code> 、 <code>243.30px</code> 、 <code>100.69px</code> 和 <code>100.11px</code> 。</li></ul><p>这样就可以计算出 Flex 容器的剩余（或不足空间）： <code>1000px - 237.56px - 70.26px - 243.30px - 100.69px - 100.11px = 248.08px</code> 。如果计算出来值是正值的话，该值就是 Flex 容器的剩余空间，反之则是 Flex 容器的不足空间。</p><blockquote><p>注意，在接下来的示例中，Flex 容器的宽度（可用空间）都是 <code>1000px</code> ，并且在 Flex 容器上未显式设置 <code>border</code> 、<code>padding</code> 和 <code>gap</code> 以及在 Flex 项目上未显式设置 <code>margin</code> 值。</p></blockquote><p>在这个示例中，我们并没有在 Flex 项目设置 <code>flex</code> 属性的值，此时，浏览器在计算 Flex 项目时会视 Flex 项目的 <code>flex</code> 属性的值是其默认值，即 <code>flex: 0 1 auto</code> ，对应的就是：</p><ul><li><code>flex-grow</code> 属性的初始值为 <code>0</code> ，表示 Flex 项目不扩展（即不瓜分 Flex 容器的剩余空间）；</li></ul>",5),q=n("ul",null,[n("li",null,[n("code",null,"flex-shrink"),e(" 属性的初始值为 "),n("code",null,"1"),e(" ，表示 Flex 项目会收缩（即 Flex 项目在原始尺寸上按比率减去 Flex 容器的不足空间）；")])],-1),y=a("<ul><li><code>flex-basis</code> 属性的初始值为 <code>auto</code> ，表示 Flex 项目的基本尺寸是 Flex 项目的最大内容尺寸（即 <code>max-content</code>）。</li></ul><p>示例中，所有 Flex 项目的假设主尺寸总和是 <code>751.92px</code>（即 <code>237.56 + 70.26 + 243.30 + 100.69 + 100.11 = 751.92</code>），该值小于 Flex 容器的可用空间 <code>1000px</code> 。结果就是所有 Flex 项目既不会扩展以填充 Flex 容器可用空间，也不会缩小以适应其中。</p><p>现在我们知道了， <code>flex</code> 属性是 <code>flex-grow</code> 、<code>flex-shrink</code> 和 <code>flex-basis</code> 三个属性的简写属性，但我们在使用的时候，<code>flex</code> 属性可以指定 <strong><code>1</code></strong> <strong>个值</strong> （单值语法）、<strong><code>2</code></strong> <strong>个值</strong> （双值语法）或 <strong><code>3</code></strong> <strong>个值</strong> (三值语法)。</p><p><code>flex</code> 属性的单值语法时，其值必须为以下其中之一：</p><ul><li>一个无单位的数值（<code>&lt;number&gt;</code>），比如 <code>flex: 1</code> ，这个时候它（即<code>1</code>）会被当作 <code>flex-grow</code> 属性的值；</li></ul>",5),N=n("ul",null,[n("li",null,[e("一个有效的长度值（"),n("code",null,"<length-percentage>"),e(" ），比如 "),n("code",null,"flex: 30vw"),e(" ，这个时候它（即 "),n("code",null,"30vw"),e("）会被当作 "),n("code",null,"flex-basis"),e(" 属性的值；")])],-1),W=a(`<ul><li>关键词 <code>none</code> 、 <code>auto</code> 或 <code>initial</code> （即初始值）。</li></ul><p>比如：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.item</span> <span class="token punctuation">{</span>
  flex<span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
    
  <span class="token comment">/* 等同于 */</span>
  flex-grow<span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
  flex-shrink<span class="token punctuation">:</span> 1<span class="token punctuation">;</span> 
  flex-basis<span class="token punctuation">:</span> 0%<span class="token punctuation">;</span> 
<span class="token punctuation">}</span>
<span class="token selector">​
.item</span> <span class="token punctuation">{</span>
  flex<span class="token punctuation">:</span> 30vw<span class="token punctuation">;</span>
    
  <span class="token comment">/* 等同于 */</span>
  flex-grow<span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
  flex-shrink<span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
  flex-basis<span class="token punctuation">:</span> 30vw<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>flex</code> 属性的双值语法，其第一个值必须为 <strong>一个无单位的数值（<code>&lt;number&gt;</code>）</strong> ，并且它会<strong>被当作</strong> <strong><code>flex-grow</code></strong> <strong>属性的值</strong> ；第二个值必须为以下之一：</p><ul><li>一个无单位的数值（<code>&lt;number&gt;</code>），它会被当作 <code>flex-shrink</code> 属性的值；</li></ul>`,5),Y=a(`<ul><li>一个有效的长度值（<code>&lt;length-percentage&gt;</code>），它会被当作 <code>flex-basis</code> 属性的值。</li></ul><p>比如：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.item</span> <span class="token punctuation">{</span>
  flex<span class="token punctuation">:</span> 1 2<span class="token punctuation">;</span>
  
  <span class="token comment">/* 等同于 */</span>
  flex-grow<span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
  flex-shrink<span class="token punctuation">:</span> 2<span class="token punctuation">;</span>
  flex-basis<span class="token punctuation">:</span> 0%<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">​
.item</span> <span class="token punctuation">{</span>
  flex<span class="token punctuation">:</span> 2 30vw<span class="token punctuation">;</span>
  
  <span class="token comment">/* 等同于 */</span>
  flex-grow<span class="token punctuation">:</span> 2<span class="token punctuation">;</span>
  flex-shrink<span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
  flex-basis<span class="token punctuation">:</span> 30vw<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">​
.item</span> <span class="token punctuation">{</span>
  flex<span class="token punctuation">:</span> 30vw 2<span class="token punctuation">;</span>
  
  <span class="token comment">/* 等同于 */</span>
  flex-grow<span class="token punctuation">:</span> 2<span class="token punctuation">;</span>
  flex-shrink<span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
  flex-basis<span class="token punctuation">:</span> 30vw<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>flex</code> 属性的三值语法：</p><ul><li>第一个值必须是一个无单位的数值（<code>&lt;number&gt;</code>），并且它会被当作 <code>flex-grow</code> 属性的值；</li></ul>`,5),D=n("ul",null,[n("li",null,[e("第二个值必须是一个无单位的数值（"),n("code",null,"<number>"),e("），并且它会被当作 "),n("code",null,"flex-shrink"),e(" 属性的值；")])],-1),S=a(`<ul><li>第三个值必须是一个有效的长度值（<code>&lt;length-percentage&gt;</code>），并且它会被当作 <code>flex-basis</code> 属性的值。</li></ul><p>比如：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.items</span> <span class="token punctuation">{</span>
  flex<span class="token punctuation">:</span> 2 1 200px<span class="token punctuation">;</span>
    
  <span class="token comment">/* 等同于 */</span>
  flex-grow<span class="token punctuation">:</span> 2<span class="token punctuation">;</span>
  flex-shrink<span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
  flex-basis<span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">​
.item</span> <span class="token punctuation">{</span>
  flex<span class="token punctuation">:</span> 30vw 2 1<span class="token punctuation">;</span>
  
  <span class="token comment">/* 等同于 */</span>
  flex-grow<span class="token punctuation">:</span> 2<span class="token punctuation">;</span>
  flex-shrink<span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
  flex-basis<span class="token punctuation">:</span> 30vw<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>另外， <code>flex</code> 属性的取值还可以是：</p><ul><li><code>auto</code> ：Flex 项目会根据自身的 <code>width</code> （或 <code>inline-size</code>）和 <code>height</code> （或 <code>block-size</code>）来确定尺寸，但 Flex 项目会根据 Flex 容器剩余空间进行伸缩。其相当于 <code>flex: 1 1 auto</code> 。</li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.item</span> <span class="token punctuation">{</span>
  flex<span class="token punctuation">:</span> auto<span class="token punctuation">;</span>
    
  <span class="token comment">/* 等同于 */</span>
  flex-grow<span class="token punctuation">:</span> 1<span class="token punctuation">;</span>     <span class="token comment">/* Flex 项目可以扩展到超过其 flex-basis */</span>
  flex-shrink<span class="token punctuation">:</span> 1<span class="token punctuation">;</span>   <span class="token comment">/* Flex 项目可以收缩到小于其 flex-basis */</span>
  flex-basis<span class="token punctuation">:</span> auto<span class="token punctuation">;</span> <span class="token comment">/* Flex 项目为基本大小 auto，即 max-content */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f4c58ceb6f704c5dbe0f3968d6089eac~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p>`,7),V={href:"https://codepen.io/airen/full/eYrWOey",target:"_blank",rel:"noopener noreferrer"},E=a(`<p>简单地说，要使项目增长，同时允许大 Flex 项目比小 Flex 项目拥有更多空间，请使用 <code>flex:auto</code>。这也意味着 Flex 项目最终具有不同的大小，因为 Flex 项目之间共享的空间，将在每个 Flex 项目被设为最大内容大小（<code>max-content</code>）之后被均分。因此，较大的 Flex 项目会获得更多的空间。</p><p>Flexbox 布局中，很多开发者为了强制所有 Flex 项目的大小一致，并忽略内容的大小，即 <strong>均分 Flex 容器可用空间（不是均分 Flex 容器剩余空间）</strong> ，简单地说就是，<strong>让所有 Flex 项目尺寸相等</strong> ，习惯性使用 <code>flex: 1</code> ：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.item</span> <span class="token punctuation">{</span>
  flex<span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
  
  <span class="token comment">/* 等同于 */</span>
  flex-grow<span class="token punctuation">:</span> 1<span class="token punctuation">;</span>   <span class="token comment">/* Flex 项目可以增长到超过其 flex-basis */</span>
  flex-shrink<span class="token punctuation">:</span> 1<span class="token punctuation">;</span> <span class="token comment">/* Flex 项目可以收缩到比它们的 flex-basis 小 */</span>
  flex-basis<span class="token punctuation">:</span> 0%<span class="token punctuation">;</span> <span class="token comment">/* Flex 项目为基本大小 0 */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/821b6375d5674fbbbd8fee49ece7afcf~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p>`,4),J={href:"https://codepen.io/airen/full/zYjwYxy",target:"_blank",rel:"noopener noreferrer"},C=a(`<p><strong>使用</strong> <strong><code>flex: 1</code></strong> <strong>表示所有 Flex 项目的大小都为零</strong> ，因此，弹性容器中的所有空间均可供分配。由于所有 Flex 项目的 <code>flex-grow</code> 扩展因子均为 <code>1</code>，所以，它们可以平均增长并共享 Flex 容器空间。</p><p>这里有一个误区，<strong>大多数开发者都误认为，只要在 Flex 项目上显式设置了</strong> <strong><code>flex:1</code></strong> <strong>，所有 Flex 项目的宽度（或高度）就相等。</strong> 事实并非如此，比如上面示例，由于第一个 Flex 项目的内容就要比其他 Flex 项目略宽一点，即使在所有 Flex 项目设置了 <code>flex:1</code> ，也没有实现所有 Flex 项目等宽的效果：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5b1e6e8450a7420cb73a3cc07b258867~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><p>如果要真的实现所有 Flex 项目宽度相等，除了在 Flex 项目上设置为 <code>flex:1</code> 之外，还需要显式设置 <code>min-width</code> 值为 <code>0</code> (其中原委我们将在后面的课程中介绍)：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.item</span> <span class="token punctuation">{</span>
  flex<span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
  min-width<span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c951707e534e4e9a904e32464ee232dd~tplv-k3u1fbpfcp-zoom-1.image" alt="img"><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3b01587b45034a01910ba5857b65c55b~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p>`,6),B={href:"https://codepen.io/airen/full/WNJjNod",target:"_blank",rel:"noopener noreferrer"},O=a(`<ul><li><code>initial</code> ： Flex 项目会根据自身的 <code>width</code> (或 <code>inline-size</code>)， 和 <code>height</code> （或 <code>block-size</code>）来确定尺寸，Flex 项目不会扩展，但会收缩来适应 Flex 容器。其相当于 <code>flex: 0 1 auto</code>。</li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.item</span> <span class="token punctuation">{</span>
  flex<span class="token punctuation">:</span> initial<span class="token punctuation">;</span>
  
  <span class="token comment">/* 等同于 */</span>
  flex-grow<span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
  flex-shrink<span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
  flex-basis<span class="token punctuation">:</span> auto<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/eb24bfa8f26241c6bc6553d56ce7300d~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p>`,3),R={href:"https://codepen.io/airen/full/zYjwOWa",target:"_blank",rel:"noopener noreferrer"},I=a(`<ul><li><code>none</code> ：Flex 项目会根据自身的 <code>width</code> （或 <code>inline-size</code>），和 <code>height</code> （或 <code>block-size</code>）来设置尺寸，它是完全非弹性的，即不会收缩，也不会扩展来适应 Flex 容器。其相当于 <code>flex: 0 0 auto</code>。</li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.item</span> <span class="token punctuation">{</span>
  flex<span class="token punctuation">:</span> none<span class="token punctuation">;</span>
  
  <span class="token comment">/* 等同于 */</span>
  flex-grow<span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
  flex-shrink<span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
  flex-basis<span class="token punctuation">:</span> auto<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c9880893afe640238cf98e4a2c2bfca2~tplv-k3u1fbpfcp-zoom-1.image" alt="img"><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/103c25877f59430b9b97d1612d7712f9~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p>`,3),L={href:"https://codepen.io/airen/full/oNdWvJR",target:"_blank",rel:"noopener noreferrer"},M=n("ul",null,[n("li",null,[n("code",null,"<flex-grow>"),e(" ：定义 Flex 项目的 "),n("code",null,"flex-grow"),e(" 属性的值，取值为 "),n("code",null,"<number>"),e("。")])],-1),A=n("ul",null,[n("li",null,[n("code",null,"<flex-shrink>"),e(" ：定义 Flex 项目 "),n("code",null,"flex-shrink"),e(" 属性的值，取值为 "),n("code",null,"<number>"),e(" 。")])],-1),Q=a('<ul><li><code>&lt;flex-basis&gt;</code> ：定义 Flex 项目的 <code>flex-basis</code> 属性的值。若值为<code>0</code>时，则必须加上单位（<code>&lt;length&gt;</code>或<code>&lt;percentage&gt;</code>），比如<code>0px</code>或<code>0%</code>，避免被视作伸缩性<code>flex-grow</code>或<code>flex-shrink</code>的值。</li></ul><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b60f962b2eb44feda9f9e688531cc5c0~tplv-k3u1fbpfcp-zoom-1.image" alt="img"><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cdc7f01fdda941baae2395c17ec274d9~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p>',2),T={href:"https://codepen.io/airen/full/oNdWvVr",target:"_blank",rel:"noopener noreferrer"},G=a("<p>在大多数情况下，在 Flex 项目上设置 <code>flex</code> 属性时，其常见值的效果有：</p><ul><li><code>flex: 0 auto</code> 和 <code>flex: initial</code> ，这两个值与 <code>flex: 0 1 auto</code> 相同，也是 <code>flex</code> 的<strong>初始值</strong> 。会根据 Flex 项目的 <code>width</code> (或 <code>inline-size</code>) ，和 <code>height</code> （或 <code>block-size</code>）属性值来决定 Flex 项目尺寸。当 Flex 容器有剩余空间时，Flex 项目并不会扩展填满整个 Flex 容器，但当 Flex 容器有不足空间时，Flex 项目会收缩到其最小值，即 <code>min-content</code> 。</li></ul>",2),H=a("<ul><li><code>flex: auto</code> 和 <code>flex: 1 1 auto</code> 相同。Flex 项目会根据 <code>width</code>（或 <code>inline-size</code>），和 <code>height</code>（或 <code>block-size</code>）来决定大小，但是完全可以扩展 Flex 容器剩余的空间。</li></ul>",1),K=a("<ul><li><code>flex: none</code> 和 <code>flex: 0 0 auto</code> 相同。 Flex 项目会根据 <code>width</code>（或 <code>inline-size</code>） ，和 <code>height</code> (或 <code>block-size</code>) 来决定大小，但是完全不可伸缩。</li></ul>",1),P=a('<ul><li><code>flex: &lt;positive-number&gt;</code>（正数）和 <code>flex: 1 0px</code> 相同。Flex 项目可伸缩，并将 <code>flex-basis</code> 值设置为 <code>0</code> （需要带有效的 <code>&lt;length&gt;</code> 或 <code>&lt;percentage&gt;</code> 单位），导致 Flex 项目会根据设置的比例因子来计算 Flex 容器的剩余空间。Flex 项目按比例扩展或收缩。</li></ul><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6f6a10d6b68e40c48c0363e6474e63ca~tplv-k3u1fbpfcp-zoom-1.image" alt="img"><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c2f785d326d549189872b9132d40b907~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p>',2),U={href:"https://codepen.io/airen/full/vYjmENe",target:"_blank",rel:"noopener noreferrer"},X=n("h2",{id:"留个作业",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#留个作业","aria-hidden":"true"},"#"),e(" 留个作业")],-1),Z=n("p",null,[e("Flexbox 布局中，在所有 Flex 项目上显式设置 "),n("code",null,"flex:1"),e(" 实现均分列的布局效果。")],-1);function $(nn,en){const o=l("ExternalLinkIcon");return i(),p("div",null,[u,s(""),r,s(""),x,s(""),m,s(""),k,s(""),b,s(""),v,s(""),g,s(""),f,s(""),h,n("blockquote",null,[n("p",null,[e("有关于 Flex 容器的可用空间、剩余空间和不足空间相关的概念，可以查阅前面的课程《"),n("a",F,[e("03 | Flexbox 布局基础使用"),c(o)]),e(" 》。")])]),_,n("blockquote",null,[n("p",null,[e("Demo 地址： "),n("a",w,[e("https://codepen.io/airen/full/JjvWgar"),c(o)])])]),z,s(""),j,s(""),q,s(""),y,s(""),N,s(""),W,s(""),Y,s(""),D,s(""),S,n("blockquote",null,[n("p",null,[e("Demo 地址： "),n("a",V,[e("https://codepen.io/airen/full/eYrWOey"),c(o)])])]),E,n("blockquote",null,[n("p",null,[e("Demo 地址： "),n("a",J,[e("https://codepen.io/airen/full/zYjwYxy"),c(o)])])]),C,n("blockquote",null,[n("p",null,[e("Demo 地址： "),n("a",B,[e("https://codepen.io/airen/full/WNJjNod"),c(o)])])]),O,n("blockquote",null,[n("p",null,[e("Demo 地址： "),n("a",R,[e("https://codepen.io/airen/full/zYjwOWa"),c(o)])])]),I,n("blockquote",null,[n("p",null,[e("Demo 地址： "),n("a",L,[e("https://codepen.io/airen/full/oNdWvJR"),c(o)])])]),M,s(""),A,s(""),Q,n("blockquote",null,[n("p",null,[e("Demo 地址： "),n("a",T,[e("https://codepen.io/airen/full/oNdWvVr"),c(o)])])]),G,s(""),H,s(""),K,s(""),P,n("blockquote",null,[n("p",null,[e("Demo 地址："),n("a",U,[e("https://codepen.io/airen/full/vYjmENe"),c(o)])])]),X,Z])}const an=t(d,[["render",$],["__file","index-05.html.vue"]]);export{an as default};
