import{_ as l,p as i,q as a,a1 as e}from"./framework-e8cb8151.js";const h={},r=e('<h1 id="专为程序员设计的线性代数课程" tabindex="-1"><a class="header-anchor" href="#专为程序员设计的线性代数课程" aria-hidden="true">#</a> 专为程序员设计的线性代数课程</h1><h2 id="_1-欢迎大家来到《专给程序员设计的线性代数》" tabindex="-1"><a class="header-anchor" href="#_1-欢迎大家来到《专给程序员设计的线性代数》" aria-hidden="true">#</a> 1. 欢迎大家来到《专给程序员设计的线性代数》</h2><h3 id="_1-1-导学" tabindex="-1"><a class="header-anchor" href="#_1-1-导学" aria-hidden="true">#</a> 1.1 导学</h3><ol><li>为什么要学习线性代数 <ul><li>线性代数是高等教育中理工科学必学的数学</li><li>毫不夸张的说，线性代数是近现代科学发展过程中最重要的基础教学之一</li><li>比如：初中教育中的代数更多的是在研究一个数（分类：质数、偶数、自然数、有理数，以及函数等），线性代数则在研究“一组数”，即向量（空间，矩阵等）; 因为真实的世界是多维度的，单变量不足以描述真实世界，用单变量描述真实世界是不方便的，所以近乎所有的理工科教材中，都充斥着线性代数的公式或者符号；计算机；人工智能；经济；建筑；地址；宇宙；化学等等</li></ul></li><li>这门课程的目标 <ul><li>让大家对线性代数有更感性的认识</li><li>可以看懂大多数教材文献资料上的线性代数相关的公式或者符号</li></ul></li><li>其次 <ul><li>线性代数其实相对是容易的，因为在低维空间很容易“看”到线性代数的直观几何意义</li><li>对线性代数的直观理解，决定了对基础概念的认识深度，决定了能否理解高级概念</li></ul></li><li>这门课程的特点 <ul><li>讲明白 <ul><li>为什么引入这个概念</li><li>引入这个概念是为了解决什么问题</li><li>一些推论为什么是重要的等等</li></ul></li><li>辅助应用 <ul><li>图形学、推荐系统、人工智能、搜索引擎等</li></ul></li><li>编程实践： <ul><li>一边编程，一边学习课程，不是必须的 <ul><li>课程设计上，编程部分完全独立</li><li>跳过所有课程内容，也是一个完整的体系</li></ul></li><li>线性代数的知识，非常适合编程 <ul><li>向量、矩阵等数学对象</li><li>大量的算法过程</li></ul></li></ul></li></ul></li></ol><h3 id="_1-2-课程学习的注意事项" tabindex="-1"><a class="header-anchor" href="#_1-2-课程学习的注意事项" aria-hidden="true">#</a> 1.2 课程学习的注意事项</h3><ol><li>一般本科教育过于着重于计算，但没讲清楚怎么回事，但是不能抹杀数学计算训练的意义，本课题不以习题训练为主，所以不适合备战考试，不过理解数学概念背后的意义总是好的</li><li>课程个别章节之后，会提供一定的我以为有意义的练习题</li><li>关于证明 <ul><li>证明练习是数学学习的非常重要的一环</li><li>线性代数本身逻辑性很强，一环扣一环，每一个结论都可以严格证明</li><li>这个也用证？这个也可以证 ？</li></ul></li><li>避免抽象数学，理论数学 <ul><li>双刃剑 <ul><li>更简单的入门</li><li>比一般高校的线性代数树的内容会少“纯”数学的部分</li><li>尝试把理论数学的内容剥离出来</li></ul></li></ul></li><li>设计应用 <ul><li>这个课程的重点还是线性代理原理的学习</li><li>应用点到为止，不是应用课程</li></ul></li><li>关于编程实践 <ul><li>强调原理性：而非数值计算的最优</li><li>编程是为了辅助理解原理，对一些结论不编程，而直接使用现成的库函数</li></ul></li></ol><h3 id="_1-3-线性代数与机器学习" tabindex="-1"><a class="header-anchor" href="#_1-3-线性代数与机器学习" aria-hidden="true">#</a> 1.3 线性代数与机器学习</h3><blockquote><p>入门机器学习，不一定要把数学先学透</p><p>有基础的高数，线性代数，概率达到及格水平即可入门机器学习</p><p>入门机器学习后，有目的来补数学，效果更好！</p><p>每个人根据自己的实际情况，制定学习计划</p></blockquote><p>线性代数只是机器学习所涉及数学的一部分，还包括 高等数学，统计学-统计学习，凸优化，其他（组合数学等）</p><h3 id="_1-4-课程使用环境搭建" tabindex="-1"><a class="header-anchor" href="#_1-4-课程使用环境搭建" aria-hidden="true">#</a> 1.4 课程使用环境搭建</h3><ol><li>ANACONDA</li><li>pycharm</li></ol><h2 id="_2-一切从向量开始" tabindex="-1"><a class="header-anchor" href="#_2-一切从向量开始" aria-hidden="true">#</a> 2. 一切从向量开始</h2><h3 id="_2-1-什么是向量" tabindex="-1"><a class="header-anchor" href="#_2-1-什么是向量" aria-hidden="true">#</a> 2.1 什么是向量</h3><ol><li>向量 <ul><li>为什么线性代数这么重要？ <ul><li>从研究一个数拓展到研究一组数</li></ul></li><li>一组数的基本表示方法--向量（vector）</li><li>向量（Vector）是线性代数研究的基本元素，一个数 666 一组数：6，66，666</li><li>一组数有什么用？ <ul><li>最基本的出发点：表示方向</li><li>为了研究方便，我们定义的向量都是从原点开始，但是顺序是重要的。向量十一组有顺序的数</li><li>如果只是表示方向，最多三个维度就够了</li><li>更加的抽象：n 维向量</li><li>两个视角看似不同，但是可以相互转换</li><li>一个方向就是一个点</li><li>空间中的一个点，可以看做从原点指向这个点的一个方向</li><li>在学习初始，使用方向的视角，更直观，更形象</li><li>更重要的是，这两个视角，都不是简单的“一组数”</li><li>一个是有向线段，一个是空间中的点</li></ul></li></ul></li></ol><h3 id="_2-2-向量的更多术语和表示法" tabindex="-1"><a class="header-anchor" href="#_2-2-向量的更多术语和表示法" aria-hidden="true">#</a> 2.2 向量的更多术语和表示法</h3><ol><li>更严格的一些定义 <ul><li>和向量相对应，一个数字，称为<strong>标量</strong>。</li><li>代数：用符号代表数。和标量相区别，向量的符号画箭头</li><li>个别情况下，尤其是几何学中，我们会考虑向量的起始点</li></ul></li><li>行向量和列向量 <ul><li>通常教材中，论文中，提到的向量，都指的是列向量</li></ul></li></ol><h3 id="_2-3-实现属于我们自己的向量" tabindex="-1"><a class="header-anchor" href="#_2-3-实现属于我们自己的向量" aria-hidden="true">#</a> 2.3 实现属于我们自己的向量</h3><h3 id="_2-4-向量的基本运算" tabindex="-1"><a class="header-anchor" href="#_2-4-向量的基本运算" aria-hidden="true">#</a> 2.4 向量的基本运算</h3><h4 id="_2-4-1-向量的加法" tabindex="-1"><a class="header-anchor" href="#_2-4-1-向量的加法" aria-hidden="true">#</a> 2.4.1 向量的加法</h4><h4 id="_2-4-2-向量的数量乘法" tabindex="-1"><a class="header-anchor" href="#_2-4-2-向量的数量乘法" aria-hidden="true">#</a> 2.4.2 向量的数量乘法</h4><h2 id="_2-5-实现向量的基本运算" tabindex="-1"><a class="header-anchor" href="#_2-5-实现向量的基本运算" aria-hidden="true">#</a> 2.5 实现向量的基本运算</h2><h2 id="_2-6-向量基本运算的性质与数学大厦的建立" tabindex="-1"><a class="header-anchor" href="#_2-6-向量基本运算的性质与数学大厦的建立" aria-hidden="true">#</a> 2.6 向量基本运算的性质与数学大厦的建立</h2><h3 id="_2-6-1-向量运算的基本性质" tabindex="-1"><a class="header-anchor" href="#_2-6-1-向量运算的基本性质" aria-hidden="true">#</a> 2.6.1 向量运算的基本性质</h3><ol><li>回忆我们小学时学习的数的运算，我们也要先有数的运算的相关性质，之后才敢进行更加复杂的运算，比如：加法交换律，乘法交换律，加法结合律等等，对于向量预算，我们也要这么做</li></ol><h2 id="_2-7-零向量" tabindex="-1"><a class="header-anchor" href="#_2-7-零向量" aria-hidden="true">#</a> 2.7 零向量</h2><blockquote><p>我们不定义什么是零向量，我们从推导出一个性质出发</p><p>对于任意一个向量 U，都存在一个向量 O，满足 U + O = U</p><p>我们称这个向量 O 为零向量，注意：这个零向量 O 是没有箭头</p></blockquote>',26),d=[r];function n(u,t){return i(),a("div",null,d)}const o=l(h,[["render",n],["__file","linear-algebra.html.vue"]]);export{o as default};
