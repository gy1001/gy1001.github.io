import{_ as c,M as l,p as u,q as i,R as n,t as s,v as t,N as o,a1 as a}from"./framework-e8cb8151.js";const r={},k=a(`<h1 id="_14-compiler-编译器-深入编辑器处理逻辑-困难" tabindex="-1"><a class="header-anchor" href="#_14-compiler-编译器-深入编辑器处理逻辑-困难" aria-hidden="true">#</a> 14-compiler 编译器 - 深入编辑器处理逻辑（困难）</h1><h2 id="_01-前言" tabindex="-1"><a class="header-anchor" href="#_01-前言" aria-hidden="true">#</a> 01:前言</h2><p>上一章中，我们处理了基础的编译器，但是针对于一些复杂的场景</p><ol><li>响应性数据</li><li>多个子节点</li><li>指令</li></ol><p>我们还没有办法进行对应的处理</p><p>那么对于本章，我们将会深入编译器，来了解更加复杂的编译处理</p><p>因为我们前面已经查看很多的 vue 源码逻辑，多以对于本章节而言，我们不会再 从基础的源码逻辑进行跟踪查看，而是<strong>针对当前场景，查看负责部分的差异性处理</strong>，以此来让我们的整体节奏，变得更加清晰</p><p>那么明确好了以上问题之后，下面就让我们进入本章的学习吧</p><h2 id="_02-响应性数据的编译器处理-响应性数据的处理逻辑" tabindex="-1"><a class="header-anchor" href="#_02-响应性数据的编译器处理-响应性数据的处理逻辑" aria-hidden="true">#</a> 02：响应性数据的编译器处理：响应性数据的处理逻辑</h2><p>那么首先我们先来看响应性数据的编译器处理逻辑，具体指的事什么呢？我们来看如下测试实例，<code>pacakges/vue/example/compiler/compiler-reactive.html</code></p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">const</span> <span class="token punctuation">{</span> compile<span class="token punctuation">,</span> render<span class="token punctuation">,</span> h <span class="token punctuation">}</span> <span class="token operator">=</span> Vue
  <span class="token comment">// 创建 template，复合表达式</span>
  <span class="token keyword">const</span> template <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;div&gt;hello {{msg}}&lt;/div&gt;</span><span class="token template-punctuation string">\`</span></span>
  <span class="token comment">// 生成 render 函数</span>
  <span class="token keyword">const</span> renderFn <span class="token operator">=</span> <span class="token function">compile</span><span class="token punctuation">(</span>template<span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>renderFn<span class="token punctuation">)</span>
  <span class="token comment">// 创建组件</span>
  <span class="token keyword">const</span> component <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">render</span><span class="token operator">:</span> renderFn<span class="token punctuation">,</span>
    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">&#39;world&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 通过 h 函数，生成 vnode</span>
  <span class="token keyword">const</span> vnode <span class="token operator">=</span> <span class="token function">h</span><span class="token punctuation">(</span>component<span class="token punctuation">)</span>
  <span class="token comment">// 通过 render 函数渲染组件</span>
  <span class="token function">render</span><span class="token punctuation">(</span>vnode<span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),d=n("strong",null,"复合表达式",-1),v=a(`<p>我们可以在 vue 的源码 baseCompile 方法中分别查看 AST JavaScript AST 和 render 函数的值</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token comment">// AST</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
      <span class="token property">&quot;ns&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;div&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;tagType&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      <span class="token property">&quot;props&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token property">&quot;isSelfClosing&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
      <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
          <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
          <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;hello &quot;</span><span class="token punctuation">,</span>
          <span class="token property">&quot;loc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">5</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">11</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;hello &quot;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
          <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token comment">// NodeTypes.INTERPOLATION</span>
          <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token comment">// NodeTypes.SIMPLE_EXPRESSION</span>
            <span class="token property">&quot;isStatic&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
            <span class="token property">&quot;constType&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;msg&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;loc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
              <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">13</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
              <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">16</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
              <span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;msg&quot;</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token property">&quot;loc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">11</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">18</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{{msg}}&quot;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token property">&quot;loc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">24</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&lt;div&gt;hello {{msg}}&lt;/div&gt;&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;helpers&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;components&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;directives&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;hoists&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;imports&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;cached&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token property">&quot;temps&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token property">&quot;loc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">24</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&lt;div&gt;hello {{msg}}&lt;/div&gt;&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>打印的 <code>JavaScript AST</code> 类似如下结果</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token comment">// JavaScript AST</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
      <span class="token property">&quot;ns&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;div&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;tagType&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      <span class="token property">&quot;props&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token property">&quot;isSelfClosing&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
      <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
          <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>
          <span class="token property">&quot;loc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">5</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">11</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;hello &quot;</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
              <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
              <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;hello &quot;</span><span class="token punctuation">,</span>
              <span class="token property">&quot;loc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">5</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">11</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;hello &quot;</span>
              <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token string">&quot; + &quot;</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span>
              <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token comment">// NodeTypes.INTERPOLATION</span>
              <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token comment">// NodeTypes.SIMPLE_EXPRESSION</span>
                <span class="token property">&quot;isStatic&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
                <span class="token property">&quot;constType&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 这个需要加上，否则会报错误</span>
                <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;msg&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;loc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                  <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">13</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
                  <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">16</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
                  <span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;msg&quot;</span>
                <span class="token punctuation">}</span>
              <span class="token punctuation">}</span><span class="token punctuation">,</span>
              <span class="token property">&quot;loc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">11</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">18</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{{msg}}&quot;</span>
              <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token property">&quot;loc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">24</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&lt;div&gt;hello {{msg}}&lt;/div&gt;&quot;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token property">&quot;codegenNode&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">13</span><span class="token punctuation">,</span>
        <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\\&quot;div\\&quot;&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>
          <span class="token property">&quot;loc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">5</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">11</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;hello &quot;</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
              <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
              <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;hello &quot;</span><span class="token punctuation">,</span>
              <span class="token property">&quot;loc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">5</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">11</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;hello &quot;</span>
              <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token string">&quot; + &quot;</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span>
              <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
              <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
                <span class="token property">&quot;isStatic&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
                <span class="token property">&quot;constType&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
                <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;msg&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;loc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                  <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">13</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
                  <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">16</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
                  <span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;msg&quot;</span>
                <span class="token punctuation">}</span>
              <span class="token punctuation">}</span><span class="token punctuation">,</span>
              <span class="token property">&quot;loc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">11</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">18</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{{msg}}&quot;</span>
              <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">]</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;patchFlag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1 /* TEXT */&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;isBlock&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token property">&quot;disableTracking&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token property">&quot;isComponent&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token property">&quot;loc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">24</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&lt;div&gt;hello {{msg}}&lt;/div&gt;&quot;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;helpers&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token null keyword">null</span><span class="token punctuation">,</span> <span class="token null keyword">null</span><span class="token punctuation">,</span> <span class="token null keyword">null</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;components&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;directives&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;hoists&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;imports&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;cached&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token property">&quot;temps&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token property">&quot;codegenNode&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">13</span><span class="token punctuation">,</span>
    <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\\&quot;div\\&quot;&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>
      <span class="token property">&quot;loc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">5</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">11</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;hello &quot;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
          <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
          <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;hello &quot;</span><span class="token punctuation">,</span>
          <span class="token property">&quot;loc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">5</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">11</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;hello &quot;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token string">&quot; + &quot;</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
          <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
          <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
            <span class="token property">&quot;isStatic&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
            <span class="token property">&quot;constType&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;msg&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;loc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
              <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">13</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
              <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">16</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
              <span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;msg&quot;</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token property">&quot;loc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">11</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">18</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{{msg}}&quot;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;patchFlag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1 /* TEXT */&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;isBlock&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">&quot;disableTracking&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token property">&quot;isComponent&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token property">&quot;loc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">24</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&lt;div&gt;hello {{msg}}&lt;/div&gt;&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;loc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">24</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&lt;div&gt;hello {{msg}}&lt;/div&gt;&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>模板中生成的 <code>renderFn</code> 内容如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> _Vue <span class="token operator">=</span> Vue

<span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token parameter">_ctx<span class="token punctuation">,</span> _cache</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">with</span> <span class="token punctuation">(</span>_ctx<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">toDisplayString</span><span class="token operator">:</span> _toDisplayString<span class="token punctuation">,</span>
      <span class="token literal-property property">openBlock</span><span class="token operator">:</span> _openBlock<span class="token punctuation">,</span>
      <span class="token literal-property property">createElementBlock</span><span class="token operator">:</span> _createElementBlock<span class="token punctuation">,</span>
    <span class="token punctuation">}</span> <span class="token operator">=</span> _Vue

    <span class="token keyword">return</span> <span class="token punctuation">(</span>
      <span class="token function">_openBlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token function">_createElementBlock</span><span class="token punctuation">(</span>
        <span class="token string">&#39;div&#39;</span><span class="token punctuation">,</span>
        <span class="token keyword">null</span><span class="token punctuation">,</span>
        <span class="token string">&#39;hello &#39;</span> <span class="token operator">+</span> <span class="token function">_toDisplayString</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token number">1</span> <span class="token comment">/* TEXT */</span><span class="token punctuation">,</span>
      <span class="token punctuation">)</span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>由以上内容可以看出，当我们增加了复合表达式之后，<code>AST</code>、<code>JavaScript AST</code>和<code>render</code> 函数中多出了如下内容</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token comment">// AST</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token comment">// NodeTypes.INTERPOLATION</span>
  <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token comment">// NodeTypes.SIMPLE_EXPRESSION</span>
    <span class="token property">&quot;isStatic&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token property">&quot;constType&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;msg&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;loc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">13</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">16</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;msg&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;loc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">11</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">18</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{{msg}}&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token comment">// JavaScript AST</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>
  <span class="token property">&quot;loc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">5</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">11</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;hello &quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
      <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;hello &quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;loc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">5</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">11</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;hello &quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// --------------------------- 以下为多出来的 ---------------------------</span>
    <span class="token string">&quot; + &quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token comment">// NodeTypes.INTERPOLATION</span>
      <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token comment">// NodeTypes.SIMPLE_EXPRESSION</span>
        <span class="token property">&quot;isStatic&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token property">&quot;constType&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;msg&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;loc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">13</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">16</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;msg&quot;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token property">&quot;loc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">11</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">18</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{{msg}}&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token comment">// render</span>
<span class="token comment">// 增加了 toDisplayString  函数</span>
const _Vue = Vue

return function render(_ctx<span class="token punctuation">,</span> _cache) <span class="token punctuation">{</span>
  with (_ctx) <span class="token punctuation">{</span>
    const <span class="token punctuation">{</span> toDisplayString<span class="token operator">:</span> _toDisplayString<span class="token punctuation">,</span> openBlock<span class="token operator">:</span> _openBlock<span class="token punctuation">,</span> createElementBlock<span class="token operator">:</span> _createElementBlock <span class="token punctuation">}</span> = _Vue
    return (_openBlock()<span class="token punctuation">,</span> _createElementBlock(<span class="token string">&quot;div&quot;</span><span class="token punctuation">,</span> <span class="token null keyword">null</span><span class="token punctuation">,</span> <span class="token string">&quot;hello &quot;</span> + _toDisplayString(msg)<span class="token punctuation">,</span> <span class="token number">1</span> <span class="token comment">/* TEXT */</span>))
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>那么当我们处理符合表达式的编译时，同样也是需要从差异入手，我们<strong>只需要填充对应的数据差异</strong>。</p><h2 id="_03-响应性数据的编译器处理-ast-解析逻辑" tabindex="-1"><a class="header-anchor" href="#_03-响应性数据的编译器处理-ast-解析逻辑" aria-hidden="true">#</a> 03：响应性数据的编译器处理：AST 解析逻辑</h2><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token comment">// 需要新增的 AST 结构</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token comment">// NodeTypes.INTERPOLATION</span>
  <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token comment">// NodeTypes.SIMPLE_EXPRESSION</span>
    <span class="token property">&quot;isStatic&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token property">&quot;constType&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;msg&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;loc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">13</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">16</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;msg&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;loc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">11</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">18</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{{msg}}&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看<code>packages/compiler-core/src/parse.ts</code>中的代码逻辑，找到 <code>parseChildren</code> 方法</p><p>我们知道该方法主要是用来解析子节点，内部存在的 <code>if</code> 逻辑</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">startsWith</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token string">&#39;{{&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>我们再上述基础上增加以下逻辑处理</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">parseChildren</span><span class="token punctuation">(</span>context<span class="token operator">:</span> ParserContext<span class="token punctuation">,</span> ancestors<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">startsWith</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token string">&#39;{{&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    node <span class="token operator">=</span> <span class="token function">parseInterpolation</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


<span class="token keyword">function</span> <span class="token function">parseInterpolation</span><span class="token punctuation">(</span>context<span class="token operator">:</span> ParserContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// {{  }}</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>open<span class="token punctuation">,</span> close<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;{{&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;}}&#39;</span><span class="token punctuation">]</span>
  <span class="token function">advanceBy</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> open<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
  <span class="token keyword">const</span> closeIndex <span class="token operator">=</span> context<span class="token punctuation">.</span>source<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>close<span class="token punctuation">,</span> open<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
  <span class="token keyword">const</span> preTrimContent <span class="token operator">=</span> <span class="token function">parseTextData</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> closeIndex<span class="token punctuation">)</span>
  <span class="token function">advanceBy</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> close<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    type<span class="token operator">:</span> NodeTypes<span class="token punctuation">.</span><span class="token constant">INTERPOLATION</span><span class="token punctuation">,</span>
    content<span class="token operator">:</span> <span class="token punctuation">{</span>
      type<span class="token operator">:</span> NodeTypes<span class="token punctuation">.</span><span class="token constant">SIMPLE_EXPRESSION</span><span class="token punctuation">,</span>
      isStatic<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
      content<span class="token operator">:</span> preTrimContent<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token comment">// Set \`isConstant\` to false by default and will decide in transformExpression</span>
      constType<span class="token operator">:</span> <span class="token number">0</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后在<code>/packages/compiler-core/src/compile.ts</code> 中打印 生成的 <code>ast</code>，代码如下</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">baseCompile</span><span class="token punctuation">(</span>template<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> ast <span class="token operator">=</span> <span class="token function">baseParse</span><span class="token punctuation">(</span>template<span class="token punctuation">)</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>ast<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 打印生成的 ast</span>
  <span class="token function">transform</span><span class="token punctuation">(</span>
    ast<span class="token punctuation">,</span>
    <span class="token function">extend</span><span class="token punctuation">(</span>options<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      nodeTransforms<span class="token operator">:</span> <span class="token punctuation">[</span>transformElement<span class="token punctuation">,</span> transformText<span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token function">generate</span><span class="token punctuation">(</span>ast<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>打印后，结果如下</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token punctuation">{</span>
  type<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  children<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      type<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
      tag<span class="token operator">:</span> <span class="token string">&#39;div&#39;</span><span class="token punctuation">,</span>
      tagType<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      props<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      children<span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> content<span class="token operator">:</span> <span class="token string">&#39;hello &#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> content<span class="token operator">:</span> <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> isStatic<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> content<span class="token operator">:</span> <span class="token string">&#39;msg&#39;</span><span class="token punctuation">,</span> constType<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
      <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  loc<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们怎么测试一下这个接口是否在 <code>vue</code>源码中可以使用呢，找到<code>vue</code>源码项目，修改如下</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// /vue-next-3.2.37/packages/compiler-core/src/compile.ts</span>
<span class="token comment">// const ast = isString(template) ? baseParse(template, options) : template</span>
<span class="token keyword">const</span> ast <span class="token operator">=</span> <span class="token punctuation">{</span>
  type<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  children<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      type<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
      tag<span class="token operator">:</span> <span class="token string">&#39;div&#39;</span><span class="token punctuation">,</span>
      tagType<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      props<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      children<span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> content<span class="token operator">:</span> <span class="token string">&#39;hello &#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> content<span class="token operator">:</span> <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> isStatic<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> content<span class="token operator">:</span> <span class="token string">&#39;msg&#39;</span><span class="token punctuation">,</span> constType<span class="token operator">:</span> <span class="token number">0</span>  <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  loc<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在<code>vue-next-3.2.7</code>项目中，运行<code>npm run dev</code>并重新运行上一小节的测试示例</p><p>可以看到在浏览器中成功显示如下效果，说明我们的<code>ast</code>结构复合<code>vue</code>源码中的结构要求</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/76478725d0274c2e9d55e1293e9bdc6a~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p><h2 id="_04-响应性数据的编译器处理-javascript-ast-转化逻辑" tabindex="-1"><a class="header-anchor" href="#_04-响应性数据的编译器处理-javascript-ast-转化逻辑" aria-hidden="true">#</a> 04：响应性数据的编译器处理：JavaScript AST 转化逻辑</h2><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token comment">// 需要新增的 JavaScript AST 结构</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>
  <span class="token property">&quot;loc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">5</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">11</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;hello &quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
      <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;hello &quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;loc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">5</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">11</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;hello &quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// --------------------------- 以下为多出来的 ---------------------------</span>
    <span class="token string">&quot; + &quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token comment">// NodeTypes.INTERPOLATION</span>
      <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token comment">// NodeTypes.SIMPLE_EXPRESSION</span>
        <span class="token property">&quot;isStatic&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token property">&quot;constType&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;msg&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;loc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">13</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">16</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;msg&quot;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token property">&quot;loc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">11</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">18</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{{msg}}&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>针对于 <code>JavaScript AST</code> 差异性的处理，我们的代码<code>transformText</code>方法以及针对于 + 号做了处理，所以我们需要对<code>Notypes.INTERPOLATION</code> 这种类型的节点进行处理即可(由源码可知，他会利用一个叫做<code>toDisplayString</code> 这样的一个函数来进行处理)</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// transform.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token constant">TO_DISPLAY_STRING</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./runtimeHelpers&#39;</span>

<span class="token keyword">function</span> <span class="token function">traverseNode</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> context<span class="token operator">:</span> TransformContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    <span class="token keyword">case</span> NodeTypes<span class="token punctuation">.</span><span class="token constant">INTERPOLATION</span><span class="token operator">:</span>
      <span class="token comment">// ---------- 这里处理 INTERPOLATION ----------</span>
  		context<span class="token punctuation">.</span><span class="token function">helper</span><span class="token punctuation">(</span><span class="token constant">TO_DISPLAY_STRING</span><span class="token punctuation">)</span>
      <span class="token keyword">break</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// runtimeHelpers.ts,需要新增加一个 TO_DISPLAY_STRING</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">TO_DISPLAY_STRING</span> <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;toDisplayString&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> helperNameMap<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>
  <span class="token punctuation">[</span><span class="token constant">TO_DISPLAY_STRING</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">toDisplayString</span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后我们在<code>compile.ts</code> 中对于 <code>ast</code>进行打印</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">baseCompile</span><span class="token punctuation">(</span>template<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> ast <span class="token operator">=</span> <span class="token function">baseParse</span><span class="token punctuation">(</span>template<span class="token punctuation">)</span>
  <span class="token function">transform</span><span class="token punctuation">(</span>
    ast<span class="token punctuation">,</span>
    <span class="token function">extend</span><span class="token punctuation">(</span>options<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      nodeTransforms<span class="token operator">:</span> <span class="token punctuation">[</span>transformElement<span class="token punctuation">,</span> transformText<span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ast<span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token function">generate</span><span class="token punctuation">(</span>ast<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果如下</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5cfb615ca3014dbfa5b87053fc540586~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p><h2 id="_05-响应性数据的编译器处理-render-转化逻辑分析" tabindex="-1"><a class="header-anchor" href="#_05-响应性数据的编译器处理-render-转化逻辑分析" aria-hidden="true">#</a> 05：响应性数据的编译器处理：render 转化逻辑分析</h2><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token comment">// render 函数，内容进行了简化</span>
const _Vue = Vue

return function render(_ctx<span class="token punctuation">,</span> _cache) <span class="token punctuation">{</span>
  with (_ctx) <span class="token punctuation">{</span>
    const <span class="token punctuation">{</span> toDisplayString<span class="token operator">:</span> _toDisplayString<span class="token punctuation">,</span> createElementBlock<span class="token operator">:</span> _createElementBlock <span class="token punctuation">}</span> = _Vue
    return (_openBlock()<span class="token punctuation">,</span> _createElementBlock(<span class="token string">&quot;div&quot;</span><span class="token punctuation">,</span> <span class="token null keyword">null</span><span class="token punctuation">,</span> <span class="token string">&quot;hello &quot;</span> + _toDisplayString(msg)))
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>那么接下来我们就要处理 render 的转化逻辑了。由以上最终生成的方法克制，对于主要增加了以下两块代码</p>`,38),m=n("li",null,[n("code",null,"toDisplayString"),s("方法：该方法的作用非常简单，接收一个变量，返回对应的响应性数据。比如在以上代码和测试场景中，"),n("code",null,"_toDisplayString(msg)"),s("方法的调用代表着接收 "),n("code",null,"msg"),s(" 变量作为参数，返回 "),n("code",null,"world"),s(" 字符串")],-1),b=n("code",null,"with(_ctx)",-1),q=n("code",null,"_toDisplayString",-1),y=n("code",null,"msg",-1),g=n("code",null,"render",-1),f=n("code",null,"msg",-1),h={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Statements/with",target:"_blank",rel:"noopener noreferrer"},x=n("code",null,"msg",-1),w=a(`<p>所以根据以上两点，我们再去处理时，就需要关注以下内容</p><ol><li>在 <code>generate</code> 方法中，增加 <code>with</code> 的 <code>push</code> 和 <code>toDisplayStrign</code> 方法的调用</li><li>完成 <code>toDisplayStirng</code> 方法</li><li>因为<code>with</code>改变作用域，所以我们在<code>runtime</code>时，需要注意新的作用域会不会引发其他的错误</li></ol><h2 id="_06-响应性数据的编译器处理-generate-生成-render-函数" tabindex="-1"><a class="header-anchor" href="#_06-响应性数据的编译器处理-generate-生成-render-函数" aria-hidden="true">#</a> 06：响应性数据的编译器处理：generate 生成 render 函数</h2><p>这一小节，我们来完成<code>generate</code>的函数拼接</p><ol><li><p>修改<code>codegen.ts</code>文件，修改如下</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">generate</span><span class="token punctuation">(</span>ast<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> context <span class="token operator">=</span> <span class="token function">createCodegenContext</span><span class="token punctuation">(</span>ast<span class="token punctuation">)</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> push<span class="token punctuation">,</span> newline<span class="token punctuation">,</span> deindent<span class="token punctuation">,</span> indent <span class="token punctuation">}</span> <span class="token operator">=</span> context
  <span class="token function">getFunctionPreamble</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span>
  <span class="token keyword">const</span> functionName <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">render</span><span class="token template-punctuation string">\`</span></span>

  <span class="token keyword">const</span> args <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;_ctx&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;_cache&#39;</span><span class="token punctuation">]</span>
  <span class="token keyword">const</span> signature <span class="token operator">=</span> args<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;, &#39;</span><span class="token punctuation">)</span>
  <span class="token function">push</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">function </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>functionName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>signature<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">) {</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token function">indent</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token comment">// 新增加 with 函数 { 以及缩进</span>
  <span class="token function">push</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">with(_ctx) {</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token function">indent</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token keyword">const</span> hasHelpers <span class="token operator">=</span> ast<span class="token punctuation">.</span>helpers<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>hasHelpers<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">push</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">const { </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>ast<span class="token punctuation">.</span>helpers<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>aliasHelper<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;, &#39;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">} = _Vue</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token function">newline</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token function">push</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">return </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>ast<span class="token punctuation">.</span>codegenNode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">genNode</span><span class="token punctuation">(</span>ast<span class="token punctuation">.</span>codegenNode<span class="token punctuation">,</span> context<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function">push</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">null</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 同样的需要增加 对应的缩进以及 {</span>
  <span class="token function">deindent</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;}&#39;</span><span class="token punctuation">)</span>

  <span class="token function">deindent</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;}&#39;</span><span class="token punctuation">)</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span>code<span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    ast<span class="token punctuation">,</span>
    code<span class="token operator">:</span> context<span class="token punctuation">.</span>code<span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>在对表达式进行相应的处理</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token constant">TO_DISPLAY_STRING</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./runtimeHelpers&#39;</span>

<span class="token keyword">function</span> <span class="token function">genNode</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> NodeTypes<span class="token punctuation">.</span><span class="token constant">VNODE_CALL</span><span class="token operator">:</span>
      <span class="token function">genVNodeCall</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> context<span class="token punctuation">)</span>
      <span class="token keyword">break</span>
    <span class="token keyword">case</span> NodeTypes<span class="token punctuation">.</span><span class="token constant">TEXT</span><span class="token operator">:</span>
      <span class="token function">genText</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> context<span class="token punctuation">)</span>
      <span class="token keyword">break</span>
    <span class="token comment">// ------------ 新增加 ---------------</span>
    <span class="token keyword">case</span> NodeTypes<span class="token punctuation">.</span><span class="token constant">SIMPLE_EXPRESSION</span><span class="token operator">:</span>
      <span class="token function">genExpression</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> context<span class="token punctuation">)</span>
      <span class="token keyword">break</span>
    <span class="token keyword">case</span> NodeTypes<span class="token punctuation">.</span><span class="token constant">INTERPOLATION</span><span class="token operator">:</span>
      <span class="token function">genInterpolation</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> context<span class="token punctuation">)</span>
      <span class="token keyword">break</span>
    <span class="token keyword">case</span> NodeTypes<span class="token punctuation">.</span><span class="token constant">COMPOUND_EXPRESSION</span><span class="token operator">:</span>
      <span class="token function">genCompoundExpression</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> context<span class="token punctuation">)</span>
      <span class="token keyword">break</span>
    <span class="token comment">// ----------------------------------</span>
    <span class="token keyword">default</span><span class="token operator">:</span>
      <span class="token keyword">break</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">genCompoundExpression</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> node<span class="token punctuation">.</span>children<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> child <span class="token operator">=</span> node<span class="token punctuation">.</span>children<span class="token punctuation">[</span>index<span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isString</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      context<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">genNode</span><span class="token punctuation">(</span>child<span class="token punctuation">,</span> context<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">genExpression</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> content<span class="token punctuation">,</span> isStatic <span class="token punctuation">}</span> <span class="token operator">=</span> node
  context<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>isStatic <span class="token operator">?</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span> <span class="token operator">:</span> content<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">genInterpolation</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> push<span class="token punctuation">,</span> helper <span class="token punctuation">}</span> <span class="token operator">=</span> context
  <span class="token function">push</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">helper</span><span class="token punctuation">(</span><span class="token constant">TO_DISPLAY_STRING</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">(</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token function">genNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>content<span class="token punctuation">,</span> context<span class="token punctuation">)</span>
  <span class="token function">push</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">)</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>回到测试用例<code>compiler-reactive.html</code>中打印<code>renderFn</code>，可以看到如下结果</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> _Vue <span class="token operator">=</span> Vue
<span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">render</span><span class="token punctuation">(</span>_ctx<span class="token punctuation">,</span> _cache<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">with</span> <span class="token punctuation">(</span>_ctx<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span>
      toDisplayString<span class="token operator">:</span> _toDisplayString<span class="token punctuation">,</span>
      createElementVNode<span class="token operator">:</span> _createElementVNode<span class="token punctuation">,</span>
    <span class="token punctuation">}</span> <span class="token operator">=</span> _Vue
    <span class="token keyword">return</span> <span class="token function">_createElementVNode</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;hello &#39;</span> <span class="token operator">+</span> <span class="token function">_toDisplayString</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="_07-响应性数据的编译器处理-render-函数的执行逻辑" tabindex="-1"><a class="header-anchor" href="#_07-响应性数据的编译器处理-render-函数的执行逻辑" aria-hidden="true">#</a> 07：响应性数据的编译器处理：render 函数的执行逻辑</h2><p>现在我们已经成功地得到了 <code>render</code> 函数，但是也得到了一个错误</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/dc0feb7e5ae24d3d81bf171381ec13b9~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p><p>该错误指向 <code>componentRenderUtils.ts</code>模块中的<code>renderComponentRoor</code></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 解析 render 函数的返回值</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">renderComponentRoot</span><span class="token punctuation">(</span>instance<span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>那么出现该错误的原因是什么呢？</p><p>因为<code>with</code>的作用，到时内部函数的作用域指向了<code>_ctx</code>，而此时<code>_ctx</code>是<code>undefined</code></p><p>修改<code>renderComponentRoor</code>函数如下</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">renderComponentRoot</span><span class="token punctuation">(</span>instance<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>
  result <span class="token operator">=</span> <span class="token function">normalizeVNode</span><span class="token punctuation">(</span>render<span class="token operator">!</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 增加第二个参数 data</span>
  <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时再次运行，这个错误解决了，会出现另一个错误 <em>TypeError: _toDisplayString is not a function</em></p><p>新增加文件<code>packages/shared/src/toDisplayString.ts</code>,内容如下</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> toDisplayString <span class="token operator">=</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">String</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>进行导出</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// /packages/shared/src/index.ts</span>
<span class="token keyword">export</span> <span class="token punctuation">{</span> toDisplayString <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./toDisplayString&#39;</span>

<span class="token comment">// /packages/vue/src/index.ts</span>
<span class="token keyword">export</span> <span class="token punctuation">{</span> toDisplayString <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vue/shared&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>再次运行，我们会发现页面中正常渲染了</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/96defd5fd232409b9b8ee1a85c641bbd~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p><p>此时数据已经是具有响应性的，修改测试示例如下</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">const</span> <span class="token punctuation">{</span> compile<span class="token punctuation">,</span> render<span class="token punctuation">,</span> h <span class="token punctuation">}</span> <span class="token operator">=</span> Vue
  <span class="token comment">// 创建 template</span>
  <span class="token keyword">const</span> template <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;div&gt;hello {{msg}}&lt;/div&gt;</span><span class="token template-punctuation string">\`</span></span>
  <span class="token comment">// 生成 render 函数</span>
  <span class="token keyword">const</span> renderFn <span class="token operator">=</span> <span class="token function">compile</span><span class="token punctuation">(</span>template<span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>renderFn<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token comment">// 创建组件</span>
  <span class="token keyword">const</span> component <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">render</span><span class="token operator">:</span> renderFn<span class="token punctuation">,</span>
    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">&#39;world&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>msg <span class="token operator">=</span> <span class="token string">&#39;世界&#39;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 通过 h 函数，生成 vnode</span>
  <span class="token keyword">const</span> vnode <span class="token operator">=</span> <span class="token function">h</span><span class="token punctuation">(</span>component<span class="token punctuation">)</span>
  <span class="token comment">// 通过 render 函数渲染组件</span>
  <span class="token function">render</span><span class="token punctuation">(</span>vnode<span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行，2s 后数据更新了</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4afe6f1a1b514c54bd1884f41dae36e2~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p><h2 id="_08-多层级模板的编译器处理-多层级的处理逻辑" tabindex="-1"><a class="header-anchor" href="#_08-多层级模板的编译器处理-多层级的处理逻辑" aria-hidden="true">#</a> 08: 多层级模板的编译器处理：多层级的处理逻辑</h2><p>在我们处理好响应式的数据处理之后，接下来我们来看一下多层级的视图渲染</p><p>什么叫做多层级的视图渲染呢？我们来看下面的测试示例</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">const</span> <span class="token punctuation">{</span> compile<span class="token punctuation">,</span> render<span class="token punctuation">,</span> h <span class="token punctuation">}</span> <span class="token operator">=</span> Vue
  <span class="token comment">// 创建 template</span>
  <span class="token keyword">const</span> template <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;div&gt;&lt;h1&gt;hello {{msg}}&lt;h1&gt;&lt;/div&gt;</span><span class="token template-punctuation string">\`</span></span> <span class="token comment">// 多层级</span>
  <span class="token comment">// 生成 render 函数</span>
  <span class="token keyword">const</span> renderFn <span class="token operator">=</span> <span class="token function">compile</span><span class="token punctuation">(</span>template<span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>renderFn<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token comment">// 创建组件</span>
  <span class="token keyword">const</span> component <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">render</span><span class="token operator">:</span> renderFn<span class="token punctuation">,</span>
    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">&#39;world&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>msg <span class="token operator">=</span> <span class="token string">&#39;世界&#39;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 通过 h 函数，生成 vnode</span>
  <span class="token keyword">const</span> vnode <span class="token operator">=</span> <span class="token function">h</span><span class="token punctuation">(</span>component<span class="token punctuation">)</span>
  <span class="token comment">// 通过 render 函数渲染组件</span>
  <span class="token function">render</span><span class="token punctuation">(</span>vnode<span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在该测试示例中，我们的<code>template</code>包含了一个子节点<code>h1</code>元素，从现在的<code>vue-next-mini</code>中运行该测试示例，大家可以发现是无法运行的</p><p>那么如果想解析当前的子节点我们应该怎么做呢？</p><p>我们知道<code>compile</code>的作用就是把模板解析成<code>render</code>函数，我们现在看一下，现在解析出来的<code>render</code></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>function render(_ctx<span class="token punctuation">,</span> _cache) <span class="token punctuation">{</span>
 with(_ctx) <span class="token punctuation">{</span>
  const <span class="token punctuation">{</span> toDisplayString<span class="token operator">:</span> _toDisplayString<span class="token punctuation">,</span> createElementVNode<span class="token operator">:</span> _createElementVNode<span class="token punctuation">}</span> = _Vue
  return _createElementVNode(<span class="token string">&quot;div&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>)
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在以上代码中，我们可以发现，没有渲染出<code>h1</code>的原因，其实就非常简单了，就是因为第三个参数 <code>[]</code></p><p>如果想要渲染出<code>h1</code>,那么就需要提供出如下的<code>render</code></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>function render(_ctx<span class="token punctuation">,</span> _cache) <span class="token punctuation">{</span>
 with(_ctx) <span class="token punctuation">{</span>
  const <span class="token punctuation">{</span> toDisplayString<span class="token operator">:</span> _toDisplayString<span class="token punctuation">,</span> createElementVNode<span class="token operator">:</span> _createElementVNode<span class="token punctuation">}</span> = _Vue
  return _createElementVNode(<span class="token string">&quot;div&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot; &quot;</span><span class="token punctuation">,</span> _createElement(<span class="token string">&quot;h1&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">&quot;hello world&quot;</span><span class="token punctuation">]</span>)<span class="token punctuation">,</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">]</span>)
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>那么这样<code>render</code>函数如何实现呢？</p><p>对于我们现在的代码而言，解析<code>render</code>的代码位于<code>packages/compiler-core/src/codegen.ts</code>中，此时我们<code>ast</code>结构如下</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
      <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;div&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;tagType&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      <span class="token property">&quot;props&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
          <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
          <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;h1&quot;</span><span class="token punctuation">,</span>
          <span class="token property">&quot;tagType&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
          <span class="token property">&quot;props&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
          <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
              <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>
              <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                <span class="token punctuation">{</span>
                  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
                  <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;hello &quot;</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token string">&quot; + &quot;</span><span class="token punctuation">,</span>
                <span class="token punctuation">{</span>
                  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
                  <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;isStatic&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;msg&quot;</span>
                  <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
              <span class="token punctuation">]</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span>
              <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
              <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;h1&quot;</span><span class="token punctuation">,</span>
              <span class="token property">&quot;tagType&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
              <span class="token property">&quot;props&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
              <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
              <span class="token property">&quot;codegenNode&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">13</span><span class="token punctuation">,</span>
                <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\\&quot;h1\\&quot;&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;props&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
              <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">]</span><span class="token punctuation">,</span>
          <span class="token property">&quot;codegenNode&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">13</span><span class="token punctuation">,</span>
            <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\\&quot;h1\\&quot;&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;props&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
              <span class="token punctuation">{</span>
                <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>
                <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                  <span class="token punctuation">{</span>
                    <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;hello &quot;</span>
                  <span class="token punctuation">}</span><span class="token punctuation">,</span>
                  <span class="token string">&quot; + &quot;</span><span class="token punctuation">,</span>
                  <span class="token punctuation">{</span>
                    <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                      <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
                      <span class="token property">&quot;isStatic&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
                      <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;msg&quot;</span>
                    <span class="token punctuation">}</span>
                  <span class="token punctuation">}</span>
                <span class="token punctuation">]</span>
              <span class="token punctuation">}</span><span class="token punctuation">,</span>
              <span class="token punctuation">{</span>
                <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
                <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;h1&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;tagType&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
                <span class="token property">&quot;props&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                <span class="token property">&quot;codegenNode&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">13</span><span class="token punctuation">,</span>
                  <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\\&quot;h1\\&quot;&quot;</span><span class="token punctuation">,</span>
                  <span class="token property">&quot;props&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                  <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
                <span class="token punctuation">}</span>
              <span class="token punctuation">}</span>
            <span class="token punctuation">]</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token property">&quot;codegenNode&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">13</span><span class="token punctuation">,</span>
        <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\\&quot;div\\&quot;&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;props&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token punctuation">{</span>
            <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;h1&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;tagType&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            <span class="token property">&quot;props&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
              <span class="token punctuation">{</span>
                <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>
                <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                  <span class="token punctuation">{</span>
                    <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;hello &quot;</span>
                  <span class="token punctuation">}</span><span class="token punctuation">,</span>
                  <span class="token string">&quot; + &quot;</span><span class="token punctuation">,</span>
                  <span class="token punctuation">{</span>
                    <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                      <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
                      <span class="token property">&quot;isStatic&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
                      <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;msg&quot;</span>
                    <span class="token punctuation">}</span>
                  <span class="token punctuation">}</span>
                <span class="token punctuation">]</span>
              <span class="token punctuation">}</span><span class="token punctuation">,</span>
              <span class="token punctuation">{</span>
                <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
                <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;h1&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;tagType&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
                <span class="token property">&quot;props&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                <span class="token property">&quot;codegenNode&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">13</span><span class="token punctuation">,</span>
                  <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\\&quot;h1\\&quot;&quot;</span><span class="token punctuation">,</span>
                  <span class="token property">&quot;props&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                  <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
                <span class="token punctuation">}</span>
              <span class="token punctuation">}</span>
            <span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token property">&quot;codegenNode&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
              <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">13</span><span class="token punctuation">,</span>
              <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\\&quot;h1\\&quot;&quot;</span><span class="token punctuation">,</span>
              <span class="token property">&quot;props&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
              <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                <span class="token punctuation">{</span>
                  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>
                  <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                    <span class="token punctuation">{</span>
                      <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
                      <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;hello &quot;</span>
                    <span class="token punctuation">}</span><span class="token punctuation">,</span>
                    <span class="token string">&quot; + &quot;</span><span class="token punctuation">,</span>
                    <span class="token punctuation">{</span>
                      <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
                      <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                        <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
                        <span class="token property">&quot;isStatic&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
                        <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;msg&quot;</span>
                      <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                  <span class="token punctuation">]</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token punctuation">{</span>
                  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
                  <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;h1&quot;</span><span class="token punctuation">,</span>
                  <span class="token property">&quot;tagType&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
                  <span class="token property">&quot;props&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                  <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                  <span class="token property">&quot;codegenNode&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">13</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\\&quot;h1\\&quot;&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;props&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
                  <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
              <span class="token punctuation">]</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">]</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;loc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;codegenNode&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">13</span><span class="token punctuation">,</span>
    <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\\&quot;div\\&quot;&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;props&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;h1&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;tagType&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token property">&quot;props&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token punctuation">{</span>
            <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>
            <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
              <span class="token punctuation">{</span>
                <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
                <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;hello &quot;</span>
              <span class="token punctuation">}</span><span class="token punctuation">,</span>
              <span class="token string">&quot; + &quot;</span><span class="token punctuation">,</span>
              <span class="token punctuation">{</span>
                <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
                <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
                  <span class="token property">&quot;isStatic&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
                  <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;msg&quot;</span>
                <span class="token punctuation">}</span>
              <span class="token punctuation">}</span>
            <span class="token punctuation">]</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">{</span>
            <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;h1&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;tagType&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            <span class="token property">&quot;props&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token property">&quot;codegenNode&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
              <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">13</span><span class="token punctuation">,</span>
              <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\\&quot;h1\\&quot;&quot;</span><span class="token punctuation">,</span>
              <span class="token property">&quot;props&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
              <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token property">&quot;codegenNode&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">13</span><span class="token punctuation">,</span>
          <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\\&quot;h1\\&quot;&quot;</span><span class="token punctuation">,</span>
          <span class="token property">&quot;props&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
          <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
              <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>
              <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                <span class="token punctuation">{</span>
                  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
                  <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;hello &quot;</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token string">&quot; + &quot;</span><span class="token punctuation">,</span>
                <span class="token punctuation">{</span>
                  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
                  <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;isStatic&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;msg&quot;</span>
                  <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
              <span class="token punctuation">]</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span>
              <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
              <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;h1&quot;</span><span class="token punctuation">,</span>
              <span class="token property">&quot;tagType&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
              <span class="token property">&quot;props&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
              <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
              <span class="token property">&quot;codegenNode&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">13</span><span class="token punctuation">,</span>
                <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\\&quot;h1\\&quot;&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;props&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
              <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;helpers&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token null keyword">null</span><span class="token punctuation">,</span> <span class="token null keyword">null</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;components&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;directives&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;imports&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;hoists&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;temps&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;cached&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中的<code>h1</code>标签的<code>type</code>为 1，而 1 对应 <code>nodeTypes</code>中的<code>ELEMENT</code>类型</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">genNode</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>

  <span class="token comment">// 增加如下代码</span>
  <span class="token keyword">case</span> NodeTypes<span class="token punctuation">.</span><span class="token constant">ELEMENT</span><span class="token operator">:</span>
    <span class="token function">genNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>codegenNode<span class="token punctuation">,</span> context<span class="token punctuation">)</span>
    <span class="token keyword">break</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时再重新运行此时示例，可以发现正常渲染了</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4b0ca9a9c8424c58b83471f56ccfc914~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p><h2 id="_09-基于编译器的指令-v-xxx-处理-指令解析逻辑" tabindex="-1"><a class="header-anchor" href="#_09-基于编译器的指令-v-xxx-处理-指令解析逻辑" aria-hidden="true">#</a> 09: 基于编译器的指令(v-xxx)处理:指令解析逻辑</h2><p>在 vue 中，指令是一个非常重要的环节。vue 的指令主要集中在<code>compiler</code>编译器中。那么接下来我们来看一下<code>vue</code>中的指令处理逻辑</p>`,45),S={href:"https://cn.vuejs.org/api/built-in-directives.html",target:"_blank",rel:"noopener noreferrer"},T=n("code",null,"v-if",-1),N=a(`<p>我们创建如下测试示例<code>packages/vue/examples/mine/compiler/compiler-directive.html</code></p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">const</span> <span class="token punctuation">{</span> compile<span class="token punctuation">,</span> render<span class="token punctuation">,</span> h <span class="token punctuation">}</span> <span class="token operator">=</span> Vue
  <span class="token comment">// 创建 template</span>
  <span class="token keyword">const</span> template <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;div&gt;hello {{msg}}&lt;h1 v-if=&quot;isShow&quot;&gt;你好，世界&lt;/h1&gt;&lt;/div&gt;</span><span class="token template-punctuation string">\`</span></span>
  <span class="token comment">// 生成 render 函数</span>
  <span class="token keyword">const</span> renderFn <span class="token operator">=</span> <span class="token function">compile</span><span class="token punctuation">(</span>template<span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>renderFn<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token comment">// 创建组件</span>
  <span class="token keyword">const</span> component <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">render</span><span class="token operator">:</span> renderFn<span class="token punctuation">,</span>
    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">&#39;world&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">isShow</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>msg <span class="token operator">=</span> <span class="token string">&#39;世界&#39;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>isShow <span class="token operator">=</span> <span class="token boolean">true</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 通过 h 函数，生成 vnode</span>
  <span class="token keyword">const</span> vnode <span class="token operator">=</span> <span class="token function">h</span><span class="token punctuation">(</span>component<span class="token punctuation">)</span>
  <span class="token comment">// 通过 render 函数渲染组件</span>
  <span class="token function">render</span><span class="token punctuation">(</span>vnode<span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在源码项目运行该实例，可以看到生成的<code>render</code>函数如下</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>function render(_ctx<span class="token punctuation">,</span> _cache) <span class="token punctuation">{</span>
  with (_ctx) <span class="token punctuation">{</span>
    const <span class="token punctuation">{</span> toDisplayString<span class="token operator">:</span> _toDisplayString<span class="token punctuation">,</span> openBlock<span class="token operator">:</span> _openBlock<span class="token punctuation">,</span> createElementBlock<span class="token operator">:</span> _createElementBlock<span class="token punctuation">,</span> createCommentVNode<span class="token operator">:</span> _createCommentVNode<span class="token punctuation">,</span> createTextVNode<span class="token operator">:</span> _createTextVNode <span class="token punctuation">}</span> = _Vue

    return (_openBlock()<span class="token punctuation">,</span> _createElementBlock(<span class="token string">&quot;div&quot;</span><span class="token punctuation">,</span> <span class="token null keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
      _createTextVNode(<span class="token string">&quot;hello &quot;</span> + _toDisplayString(msg)<span class="token punctuation">,</span> <span class="token number">1</span> <span class="token comment">/* TEXT */</span>)<span class="token punctuation">,</span>
      isShow
        ? (_openBlock()<span class="token punctuation">,</span> _createElementBlock(<span class="token string">&quot;h1&quot;</span><span class="token punctuation">,</span> _hoisted_1<span class="token punctuation">,</span> <span class="token string">&quot;你好，世界&quot;</span>))
        <span class="token operator">:</span> _createCommentVNode(<span class="token string">&quot;v-if&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span>)
    <span class="token punctuation">]</span>))
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>根据之间的经验和上面的代码可知</p><ol><li><code>with(_ctx)</code>将改变作用域，使<code>isShow</code>指向<code>data</code>。即：<code>data.isShow</code></li><li><code>isShow ? xx : xx</code> 。这三个表达式是渲染的关键，我们<code>v-if</code>本质上就是一个<code>if</code>判断，满足条件则渲染，不满足则不渲染。</li></ol><p>那么明确好了对应的<code>render</code>逻辑之后，接下来我们就来看对应的<code>ast</code>和<code>JavaScript AST</code></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token comment">// ast</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
      <span class="token property">&quot;ns&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;div&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;tagType&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      <span class="token property">&quot;props&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token property">&quot;isSelfClosing&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
      <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
          <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
          <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;hello &quot;</span><span class="token punctuation">,</span>
          <span class="token property">&quot;loc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">5</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">11</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;hello &quot;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
          <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
          <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
            <span class="token property">&quot;isStatic&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
            <span class="token property">&quot;constType&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;msg&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;loc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
              <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">13</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
              <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">16</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
              <span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;msg&quot;</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token property">&quot;loc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">11</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">18</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{{msg}}&quot;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
          <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// NodeTypes.Element</span>
          <span class="token property">&quot;ns&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
          <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;h1&quot;</span><span class="token punctuation">,</span>
          <span class="token property">&quot;tagType&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
          <span class="token property">&quot;props&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
              <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token comment">// NodeTypes.DIRECTIVE</span>
              <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;if&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 指令名字</span>
              <span class="token property">&quot;exp&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token comment">// 表达式</span>
                <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token comment">// NodeTypes.SIMPLE_EXPRESSION</span>
                <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;isShow&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 值</span>
                <span class="token property">&quot;isStatic&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
                <span class="token property">&quot;constType&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
                <span class="token property">&quot;loc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                  <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">29</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">28</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
                  <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">34</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
                  <span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;isShow&quot;</span>
                <span class="token punctuation">}</span>
              <span class="token punctuation">}</span><span class="token punctuation">,</span>
              <span class="token property">&quot;modifiers&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
              <span class="token property">&quot;loc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">22</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">36</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">35</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;v-if=\\&quot;isShow\\&quot;&quot;</span>
              <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">]</span><span class="token punctuation">,</span>
          <span class="token property">&quot;isSelfClosing&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
          <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
              <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
              <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;你好，世界&quot;</span><span class="token punctuation">,</span>
              <span class="token property">&quot;loc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">37</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">36</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">41</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;你好，世界&quot;</span>
              <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">]</span><span class="token punctuation">,</span>
          <span class="token property">&quot;loc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">18</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">47</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">46</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&lt;h1 v-if=\\&quot;isShow\\&quot;&gt;你好，世界&lt;/h1&gt;&quot;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token property">&quot;loc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">53</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">52</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&lt;div&gt;hello {{msg}}&lt;h1 v-if=\\&quot;isShow\\&quot;&gt;你好，世界&lt;/h1&gt;&lt;/div&gt;&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;helpers&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;components&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;directives&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;hoists&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;imports&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;cached&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token property">&quot;temps&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token property">&quot;loc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">53</span><span class="token punctuation">,</span> <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">52</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&lt;div&gt;hello {{msg}}&lt;h1 v-if=\\&quot;isShow\\&quot;&gt;你好，世界&lt;/h1&gt;&lt;/div&gt;&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上的<code>AST</code>，主要看备注部分</p><p>由以上的<code>AST</code>可知，针对于指令的处理，主要集中在<code>props</code>选项中，所以针对于<code>AST</code>而言，我们<strong>只需要额外增加属性(props)的处理即可</strong></p><p>接下来我们来看<code>JavaScript AST</code></p><p><code>JavaScript AST</code>决定了最终的<code>render</code>渲染，它的处理更加复杂。我们之前创建过<code>transformElement</code>与<code>transformText</code>用来处理<code>element</code>和<code>text</code>的渲染，那么同样的道理，针对于指令的处理，我们也需要创建对应的<code>transformXXX</code>才可以进行处理</p><p>如果以<code>v-if</code>为例，那么我们需要增加对应的<code>vif.ts</code>模块</p><p><code>vif.ts</code>模块，需要为模块增加额外的<code>branches</code>属性，以此来处理对应的分支指令渲染逻辑</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token comment">// 部分的 JavaScript AST</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">9</span><span class="token punctuation">,</span>
  <span class="token comment">// 分支处理</span>
  <span class="token property">&quot;branches&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token comment">// NodeTypes.IF_BRANCH</span>
      <span class="token property">&quot;condition&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token comment">// NodeTypes.SIMPLE_EXPRESSION</span>
        <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;isShow&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;isStatic&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token property">&quot;constType&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
          <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
          <span class="token property">&quot;ns&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
          <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;h1&quot;</span><span class="token punctuation">,</span>
          <span class="token property">&quot;tagType&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
          <span class="token property">&quot;props&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
          <span class="token property">&quot;isSelfClosing&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
          <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
              <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
              <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;你好，世界&quot;</span><span class="token punctuation">,</span>
              <span class="token property">&quot;loc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                  <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">37</span><span class="token punctuation">,</span>
                  <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
                  <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">36</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                  <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
                  <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
                  <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">41</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;你好，世界&quot;</span>
              <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">]</span><span class="token punctuation">,</span>
          <span class="token property">&quot;codegenNode&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token comment">// NodeTypes.VNODE_CALL</span>
            <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\\&quot;h1\\&quot;&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;props&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
              <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
              <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;_hoisted_1&quot;</span><span class="token punctuation">,</span>
              <span class="token property">&quot;isStatic&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
              <span class="token property">&quot;constType&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
              <span class="token property">&quot;hoisted&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">15</span><span class="token punctuation">,</span>
                <span class="token property">&quot;properties&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                  <span class="token punctuation">{</span>
                    <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">16</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;key&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                      <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
                      <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;key&quot;</span><span class="token punctuation">,</span>
                      <span class="token property">&quot;isStatic&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
                      <span class="token property">&quot;constType&quot;</span><span class="token operator">:</span> <span class="token number">3</span>
                    <span class="token punctuation">}</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                      <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
                      <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span>
                      <span class="token property">&quot;isStatic&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
                      <span class="token property">&quot;constType&quot;</span><span class="token operator">:</span> <span class="token number">2</span>
                    <span class="token punctuation">}</span>
                  <span class="token punctuation">}</span>
                <span class="token punctuation">]</span>
              <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
              <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
              <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;你好，世界&quot;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token property">&quot;isBlock&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            <span class="token property">&quot;disableTracking&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
            <span class="token property">&quot;isComponent&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token property">&quot;isTemplateIf&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;codegenNode&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">19</span><span class="token punctuation">,</span>
    <span class="token property">&quot;test&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
      <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;isShow&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;isStatic&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
      <span class="token property">&quot;constType&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;consequent&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">13</span><span class="token punctuation">,</span>
      <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\\&quot;h1\\&quot;&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;props&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
        <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;_hoisted_1&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;isStatic&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token property">&quot;constType&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
        <span class="token property">&quot;hoisted&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">15</span><span class="token punctuation">,</span>
          <span class="token property">&quot;properties&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
              <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">16</span><span class="token punctuation">,</span>
              <span class="token property">&quot;loc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                  <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
                  <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
                  <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                  <span class="token property">&quot;line&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
                  <span class="token property">&quot;column&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
                  <span class="token property">&quot;offset&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
                <span class="token punctuation">}</span>
              <span class="token punctuation">}</span><span class="token punctuation">,</span>
              <span class="token property">&quot;key&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
                <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;key&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;isStatic&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
                <span class="token property">&quot;constType&quot;</span><span class="token operator">:</span> <span class="token number">3</span>
              <span class="token punctuation">}</span><span class="token punctuation">,</span>
              <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
                <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;isStatic&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
                <span class="token property">&quot;constType&quot;</span><span class="token operator">:</span> <span class="token number">2</span>
              <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
        <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;你好，世界&quot;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token property">&quot;isBlock&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token property">&quot;disableTracking&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
      <span class="token property">&quot;isComponent&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;alternate&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">14</span><span class="token punctuation">,</span>
      <span class="token property">&quot;arguments&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;\\&quot;v-if\\&quot;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;true&quot;</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;newline&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_10-基于编译器的指令-v-xxx-处理-ast-解析逻辑" tabindex="-1"><a class="header-anchor" href="#_10-基于编译器的指令-v-xxx-处理-ast-解析逻辑" aria-hidden="true">#</a> 10： 基于编译器的指令(v-xxx)处理：AST 解析逻辑</h2><p>那么首先我们先处理<code>AST</code>的解析逻辑</p><p>我们知道<code>AST</code>的解析，主要集中在<code>packages/compiler-core/src/parse.ts</code>中，在该模块下，存在<code>parseTag</code>方法，该方法主要用来<strong>解析标签</strong>。那么对于我们的属性解析，也需要在该方法下进行</p><p>该方法目前的标签解析，主要分成三部分</p><ol><li>标签开始</li><li>表签名</li><li>标签结束</li></ol><p>根据标签<code>&lt;div v-if=&quot;xxx&quot;&gt;</code>的结构，我们的指令处理，应该在<strong>标签名-标签结果</strong>中间进行处理：</p><ol><li><p>在<code>parseTag</code>增加属性处理逻辑</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">parseTag</span><span class="token punctuation">(</span>context<span class="token operator">:</span> ParserContext<span class="token punctuation">,</span> type<span class="token operator">:</span> TagType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> match<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^&lt;\\/?([a-z][^\\r\\n\\t\\f /&gt;]*)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span>source<span class="token punctuation">)</span>
  <span class="token keyword">const</span> tag <span class="token operator">=</span> match<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
  <span class="token function">advanceBy</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> match<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span>
  <span class="token comment">// -------------------- 属性和指令的处理 --------------------</span>
  <span class="token function">advanceSpaces</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span>
  <span class="token keyword">let</span> props <span class="token operator">=</span> <span class="token function">parseAttributes</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> type<span class="token punctuation">)</span>
  <span class="token comment">// ------------------------------------------------------------</span>
  <span class="token keyword">let</span> isSelfClosing <span class="token operator">=</span> <span class="token function">startsWith</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span>source<span class="token punctuation">,</span> <span class="token string">&#39;/&gt;&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 是否是自闭合标签</span>
  <span class="token function">advanceBy</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> isSelfClosing <span class="token operator">?</span> <span class="token number">2</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    type<span class="token operator">:</span> NodeTypes<span class="token punctuation">.</span><span class="token constant">ELEMENT</span><span class="token punctuation">,</span>
    tag<span class="token operator">:</span> tag<span class="token punctuation">,</span>
    tagType<span class="token operator">:</span> ElementTypes<span class="token punctuation">.</span><span class="token constant">ELEMENT</span><span class="token punctuation">,</span>
    props<span class="token operator">:</span> props<span class="token punctuation">,</span> <span class="token comment">// 注意：这里需要改为 props</span>
    children<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">parseAttributes</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> props<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">const</span> attributeNames <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>
    context<span class="token punctuation">.</span>source<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span>
    <span class="token operator">!</span><span class="token function">startsWith</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span>source<span class="token punctuation">,</span> <span class="token string">&#39;&gt;&#39;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
    <span class="token operator">!</span><span class="token function">startsWith</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span>source<span class="token punctuation">,</span> <span class="token string">&#39;/&gt;&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> attr <span class="token operator">=</span> <span class="token function">parseAttribute</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> attributeNames<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> TagType<span class="token punctuation">.</span>Start<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      props<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>attr<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token function">advanceSpaces</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> props
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">parseAttribute</span><span class="token punctuation">(</span>context<span class="token operator">:</span> ParserContext<span class="token punctuation">,</span> nameSet<span class="token operator">:</span> Set<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> match <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[^\\t\\r\\n\\f /&gt;][^\\t\\r\\n\\f /&gt;=]*</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span>source<span class="token punctuation">)</span><span class="token operator">!</span>
  <span class="token keyword">const</span> name <span class="token operator">=</span> match<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
  nameSet<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>
  <span class="token function">advanceBy</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> name<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
  <span class="token keyword">let</span> value<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">=</span> <span class="token keyword">undefined</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[\\t\\r\\n\\f ]*=</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span>source<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">advanceSpaces</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span>
    <span class="token function">advanceBy</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token function">advanceSpaces</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span>
    value <span class="token operator">=</span> <span class="token function">parseAttributeValue</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 属性中的指令处理</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(v-[A-Za-z0-9-]|:|\\.|@|#)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 正则匹配指令，</span>
    <span class="token keyword">const</span> match <span class="token operator">=</span>
      <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(?:^v-([a-z0-9-]+))?(?:(?::|^\\.|^@|^#)(\\[[^\\]]+\\]|[^\\.]+))?(.+)?$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>
        name<span class="token punctuation">,</span>
      <span class="token punctuation">)</span><span class="token operator">!</span>
    <span class="token comment">// 拿到指令名字</span>
    <span class="token keyword">let</span> dirname <span class="token operator">=</span> match<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      type<span class="token operator">:</span> NodeTypes<span class="token punctuation">.</span><span class="token constant">DIRECTIVE</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> dirname<span class="token punctuation">,</span>
      exp<span class="token operator">:</span> value <span class="token operator">&amp;&amp;</span> <span class="token punctuation">{</span>
        type<span class="token operator">:</span> NodeTypes<span class="token punctuation">.</span><span class="token constant">SIMPLE_EXPRESSION</span><span class="token punctuation">,</span>
        content<span class="token operator">:</span> value<span class="token punctuation">.</span>content<span class="token punctuation">,</span>
        isStatic<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        loc<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      arg<span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
      modifiers<span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
      loc<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    type<span class="token operator">:</span> NodeTypes<span class="token punctuation">.</span><span class="token constant">ATTRIBUTE</span><span class="token punctuation">,</span>
    name<span class="token punctuation">,</span>
    value<span class="token operator">:</span> value <span class="token operator">&amp;&amp;</span> <span class="token punctuation">{</span>
      type<span class="token operator">:</span> NodeTypes<span class="token punctuation">.</span><span class="token constant">TEXT</span><span class="token punctuation">,</span>
      content<span class="token operator">:</span> value<span class="token punctuation">.</span>context<span class="token punctuation">,</span>
      loc<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    loc<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">parseAttributeValue</span><span class="token punctuation">(</span>context<span class="token operator">:</span> ParserContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> content <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
  <span class="token keyword">const</span> quote <span class="token operator">=</span> context<span class="token punctuation">.</span>source<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token comment">// 这里有可能是 &#39;，也有可能是是 &quot;</span>
  <span class="token function">advanceBy</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> endIndex <span class="token operator">=</span> context<span class="token punctuation">.</span>source<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>quote<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>endIndex <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    content <span class="token operator">=</span> <span class="token function">parseTextData</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> context<span class="token punctuation">.</span>source<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    content <span class="token operator">=</span> <span class="token function">parseTextData</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> endIndex<span class="token punctuation">)</span>
    <span class="token function">advanceBy</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span> content<span class="token punctuation">,</span> loc<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> isQuoted<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">advanceSpaces</span><span class="token punctuation">(</span>context<span class="token operator">:</span> ParserContext<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> match <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[\\t\\r\\n\\f ]+</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span>source<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>match<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">advanceBy</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> match<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>这样，我们的指令 AST 转换处理就已经完成了，在<code>compile</code>函数中进行打印</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">baseCompile</span><span class="token punctuation">(</span>template<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> ast <span class="token operator">=</span> <span class="token function">baseParse</span><span class="token punctuation">(</span>template<span class="token punctuation">)</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>ast<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 打印</span>
  <span class="token function">transform</span><span class="token punctuation">(</span>
    ast<span class="token punctuation">,</span>
    <span class="token function">extend</span><span class="token punctuation">(</span>options<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      nodeTransforms<span class="token operator">:</span> <span class="token punctuation">[</span>transformElement<span class="token punctuation">,</span> transformText<span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span>

  <span class="token keyword">return</span> <span class="token function">generate</span><span class="token punctuation">(</span>ast<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>运行测试示例<code>compiler-directive.html</code></p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">const</span> <span class="token punctuation">{</span> compile<span class="token punctuation">,</span> render<span class="token punctuation">,</span> h <span class="token punctuation">}</span> <span class="token operator">=</span> Vue
  <span class="token comment">// 创建 template</span>
  <span class="token keyword">const</span> template <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;div&gt;hello {{msg}}&lt;h1 v-if=&quot;isShow&quot;&gt;你好，世界&lt;/h1&gt;&lt;/div&gt;</span><span class="token template-punctuation string">\`</span></span>
  <span class="token comment">// 生成 render 函数</span>
  <span class="token keyword">const</span> renderFn <span class="token operator">=</span> <span class="token function">compile</span><span class="token punctuation">(</span>template<span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>renderFn<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token comment">// 创建组件</span>
  <span class="token keyword">const</span> component <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">render</span><span class="token operator">:</span> renderFn<span class="token punctuation">,</span>
    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">isShow</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>isShow <span class="token operator">=</span> <span class="token boolean">true</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 通过 h 函数，生成 vnode</span>
  <span class="token keyword">const</span> vnode <span class="token operator">=</span> <span class="token function">h</span><span class="token punctuation">(</span>component<span class="token punctuation">)</span>
  <span class="token comment">// 通过 render 函数渲染组件</span>
  <span class="token function">render</span><span class="token punctuation">(</span>vnode<span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>得到<code>AST</code>打印结果如下</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  type<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  children<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      type<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
      tag<span class="token operator">:</span> &#39;div&#39;<span class="token punctuation">,</span>
      tagType<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      props<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      children<span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> content<span class="token operator">:</span> &#39;hello &#39; <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
          type<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
          content<span class="token operator">:</span> <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> isStatic<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> content<span class="token operator">:</span> &#39;msg&#39;<span class="token punctuation">,</span> constType<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
          type<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
          tag<span class="token operator">:</span> &#39;h1&#39;<span class="token punctuation">,</span>
          tagType<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
          props<span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
              type<span class="token operator">:</span> <span class="token number">7</span><span class="token punctuation">,</span>
              name<span class="token operator">:</span> &#39;if&#39;<span class="token punctuation">,</span>
              exp<span class="token operator">:</span> <span class="token punctuation">{</span>
                type<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
                content<span class="token operator">:</span> &#39;isShow&#39;<span class="token punctuation">,</span>
                isStatic<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
                loc<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                constType<span class="token operator">:</span> <span class="token number">0</span>
              <span class="token punctuation">}</span><span class="token punctuation">,</span>
              loc<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">]</span><span class="token punctuation">,</span>
          children<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> content<span class="token operator">:</span> &#39;你好，世界<span class="token number">11111</span>&#39; <span class="token punctuation">}</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  loc<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>把当前<code>AST</code>替换到<code>vue</code>源码中，发现指令可以被正常渲染</p></li></ol><h2 id="_11-基于编译器的指令-v-xxx-处理-javascript-ast-构建-v-if-转换模块" tabindex="-1"><a class="header-anchor" href="#_11-基于编译器的指令-v-xxx-处理-javascript-ast-构建-v-if-转换模块" aria-hidden="true">#</a> 11：基于编译器的指令(v-xxx)处理：JavaScript AST，构建 v-if 转换模块</h2><p><code>vue</code>内部具备非常多的指令，所以我们需要有一个统一的方法来对这些指令进行处理，在<code>packages/compiler-core/src/transform.ts</code>模块下，创建<code>createStrucaDirectiveTransform</code>方法，该方法返回一个闭包函数</p><ol><li><p><code>packages/compiler-core/src/compile.ts</code> 这里增加 transformIf.ts 方法</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> transformIf <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./transform/vif&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">baseCompile</span><span class="token punctuation">(</span>template<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> ast <span class="token operator">=</span> <span class="token function">baseParse</span><span class="token punctuation">(</span>template<span class="token punctuation">)</span>
  <span class="token function">transform</span><span class="token punctuation">(</span>
    ast<span class="token punctuation">,</span>
    <span class="token function">extend</span><span class="token punctuation">(</span>options<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      nodeTransforms<span class="token operator">:</span> <span class="token punctuation">[</span>transformElement<span class="token punctuation">,</span> transformText<span class="token punctuation">,</span> transformIf<span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ast<span class="token punctuation">)</span> <span class="token comment">// 这里最后查看打印结果</span>
  <span class="token keyword">return</span> <span class="token function">generate</span><span class="token punctuation">(</span>ast<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>在<code>packages/compiler-core/src/transform.ts</code>中增加<code>createStructuralDirectiveTransform</code>方法</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> isString <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vue/shared&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createStructuralDirectiveTransform</span><span class="token punctuation">(</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> RegExp<span class="token punctuation">,</span>
  fn<span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> matches <span class="token operator">=</span> <span class="token function">isString</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>
    <span class="token operator">?</span> <span class="token punctuation">(</span>n<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> n <span class="token operator">===</span> <span class="token function-variable function">name</span>
    <span class="token operator">:</span> <span class="token punctuation">(</span>n<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> name<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>node<span class="token punctuation">,</span> context<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>type <span class="token operator">===</span> NodeTypes<span class="token punctuation">.</span><span class="token constant">ELEMENT</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> exitFns<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span> props <span class="token punctuation">}</span> <span class="token operator">=</span> node
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> props<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> prop <span class="token operator">=</span> props<span class="token punctuation">[</span>index<span class="token punctuation">]</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>prop<span class="token punctuation">.</span>type <span class="token operator">===</span> NodeTypes<span class="token punctuation">.</span><span class="token constant">DIRECTIVE</span> <span class="token operator">&amp;&amp;</span> <span class="token function">matches</span><span class="token punctuation">(</span>prop<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          props<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
          index<span class="token operator">--</span>
          <span class="token keyword">const</span> onExit <span class="token operator">=</span> <span class="token function">fn</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> prop<span class="token punctuation">,</span> context<span class="token punctuation">)</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>onExit<span class="token punctuation">)</span> exitFns<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>onExit<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> exitFns
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>新建<code>/packages/compiler-core/src/transform/vif.ts</code>,内容如下</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>
  createStructuralDirectiveTransform<span class="token punctuation">,</span>
  TransformContext<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../transform&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> isString <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vue/shared&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token constant">CREATE_COMMENT</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../runtimeHelpers&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>
  NodeTypes<span class="token punctuation">,</span>
  createConditionalExpression<span class="token punctuation">,</span>
  createObjectProperty<span class="token punctuation">,</span>
  createSimpleExpression<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../ast&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> getMemoedVNodeCall <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../utils&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> transformIf <span class="token operator">=</span> <span class="token function">createStructuralDirectiveTransform</span><span class="token punctuation">(</span>
  <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(if|else|else-if)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span>node<span class="token punctuation">,</span> dir<span class="token punctuation">,</span> context<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">processIf</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> dir<span class="token punctuation">,</span> context<span class="token punctuation">,</span> <span class="token punctuation">(</span>ifNode<span class="token punctuation">,</span> branch<span class="token punctuation">,</span> isRoot<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> key <span class="token operator">=</span> <span class="token number">0</span>
      <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>isRoot<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          ifNode<span class="token punctuation">.</span>codegenNode <span class="token operator">=</span> <span class="token function">createCodegenNodeForBranch</span><span class="token punctuation">(</span>
            branch<span class="token punctuation">,</span>
            key<span class="token punctuation">,</span>
            context<span class="token punctuation">,</span>
          <span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">createCodegenNodeForBranch</span><span class="token punctuation">(</span>
  branch<span class="token punctuation">,</span>
  keyIndex<span class="token punctuation">,</span>
  context<span class="token operator">:</span> TransformContext<span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>branch<span class="token punctuation">.</span>condition<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">createConditionalExpression</span><span class="token punctuation">(</span>
      branch<span class="token punctuation">.</span>condition<span class="token punctuation">,</span>
      <span class="token function">createChildrenCodegenNode</span><span class="token punctuation">(</span>branch<span class="token punctuation">,</span> keyIndex<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token comment">// 第三个参数是替代方案，比如：v-if为false时候的渲染效果</span>
      <span class="token function">createCallExpression</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">helper</span><span class="token punctuation">(</span><span class="token constant">CREATE_COMMENT</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
        <span class="token string">&quot;&#39;v-if&#39;&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;true&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">createChildrenCodegenNode</span><span class="token punctuation">(</span>branch<span class="token punctuation">,</span> keyIndex<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createCallExpression</span><span class="token punctuation">(</span>callee<span class="token punctuation">,</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    type<span class="token operator">:</span> NodeTypes<span class="token punctuation">.</span><span class="token constant">JS_CALL_EXPRESSION</span><span class="token punctuation">,</span>
    loc<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    callee<span class="token punctuation">,</span>
    arguments<span class="token operator">:</span> args<span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// 创建指定子节点的 codegen</span>
<span class="token keyword">function</span> <span class="token function">createChildrenCodegenNode</span><span class="token punctuation">(</span>branch<span class="token punctuation">,</span> keyIndex<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> keyProperty <span class="token operator">=</span> <span class="token function">createObjectProperty</span><span class="token punctuation">(</span>
    <span class="token string">&#39;key&#39;</span><span class="token punctuation">,</span>
    <span class="token function">createSimpleExpression</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>keyIndex<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> children <span class="token punctuation">}</span> <span class="token operator">=</span> branch
  <span class="token keyword">const</span> firstChild <span class="token operator">=</span> children<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
  <span class="token keyword">const</span> ret <span class="token operator">=</span> firstChild<span class="token punctuation">.</span>codegenNode
  <span class="token keyword">const</span> vnodeCall <span class="token operator">=</span> <span class="token function">getMemoedVNodeCall</span><span class="token punctuation">(</span>ret<span class="token punctuation">)</span>
  <span class="token function">injectProp</span><span class="token punctuation">(</span>vnodeCall<span class="token punctuation">,</span> keyProperty<span class="token punctuation">)</span>
  <span class="token keyword">return</span> ret
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">injectProp</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> prop<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> propsWithInjection
  <span class="token keyword">let</span> props <span class="token operator">=</span>
    node<span class="token punctuation">.</span>type <span class="token operator">===</span> NodeTypes<span class="token punctuation">.</span><span class="token constant">VNODE_CALL</span> <span class="token operator">?</span> node<span class="token punctuation">.</span>props <span class="token operator">:</span> node<span class="token punctuation">.</span>arguments<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>props <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token function">isString</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    propsWithInjection <span class="token operator">=</span> <span class="token function">createObjectExpresssion</span><span class="token punctuation">(</span><span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  node<span class="token punctuation">.</span>props <span class="token operator">=</span> propsWithInjection
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createObjectExpresssion</span><span class="token punctuation">(</span>properties<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    type<span class="token operator">:</span> NodeTypes<span class="token punctuation">.</span><span class="token constant">JS_OBJECT_EXPRESSION</span><span class="token punctuation">,</span>
    loc<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    properties<span class="token operator">:</span> properties<span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">processIf</span><span class="token punctuation">(</span>
  node<span class="token punctuation">,</span>
  dir<span class="token punctuation">,</span>
  context<span class="token operator">:</span> TransformContext<span class="token punctuation">,</span>
  processCodegen<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>node<span class="token punctuation">,</span> branch<span class="token punctuation">,</span> isRoot<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>dir<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">&#39;if&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> branch <span class="token operator">=</span> <span class="token function">createIfBranch</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> dir<span class="token punctuation">)</span>
    <span class="token keyword">const</span> ifNode <span class="token operator">=</span> <span class="token punctuation">{</span>
      type<span class="token operator">:</span> NodeTypes<span class="token punctuation">.</span><span class="token constant">IF</span><span class="token punctuation">,</span>
      branches<span class="token operator">:</span> <span class="token punctuation">[</span>branch<span class="token punctuation">]</span><span class="token punctuation">,</span>
      loc<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 这里调用了 replaceNode方法，所以在 TransformContext 声明和实现中要进行增加方法的声明和实现</span>
    context<span class="token punctuation">.</span><span class="token function">replaceNode</span><span class="token punctuation">(</span>ifNode<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>processCodegen<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">processCodegen</span><span class="token punctuation">(</span>ifNode<span class="token punctuation">,</span> branch<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;processIf 中的 else 暂时不实现&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>在<code>runtimeHelpers.ts</code>中增加<code>CREATE_COMMENT</code></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">CREATE_COMMENT</span> <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;createCommentVNode&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> helperNameMap<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>
  <span class="token punctuation">[</span><span class="token constant">CREATE_COMMENT</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">createCommentVNode</span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>在</code>ast.ts<code>中增加</code>createConditionalExpression、createObjectProperty、createSimpleExpression \`方法</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> isString <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vue/shared&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createConditionalExpression</span><span class="token punctuation">(</span>
  test<span class="token punctuation">,</span>
  consequent<span class="token punctuation">,</span>
  alternate<span class="token punctuation">,</span>
  newline <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    type<span class="token operator">:</span> NodeTypes<span class="token punctuation">.</span><span class="token constant">JS_CONDITIONAL_EXPRESSION</span><span class="token punctuation">,</span>
    test<span class="token punctuation">,</span>
    consequent<span class="token punctuation">,</span>
    alternate<span class="token punctuation">,</span>
    newline<span class="token punctuation">,</span>
    loc<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createObjectProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    type<span class="token operator">:</span> NodeTypes<span class="token punctuation">.</span><span class="token constant">JS_PROPERTY</span><span class="token punctuation">,</span>
    loc<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token function">isString</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token function">createSimpleExpression</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token operator">:</span> key<span class="token punctuation">,</span>
    value<span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createSimpleExpression</span><span class="token punctuation">(</span>content<span class="token punctuation">,</span> isStatic<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    type<span class="token operator">:</span> NodeTypes<span class="token punctuation">.</span><span class="token constant">SIMPLE_EXPRESSION</span><span class="token punctuation">,</span>
    loc<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    content<span class="token punctuation">,</span>
    isStatic<span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>在<code>utils.ts</code>中增加<code>getMemoedVNodeCall</code>方法</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">getMemoedVNodeCall</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> node
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>在<code>packages/compiler-core/src/transform.ts</code>中修改代码如下</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> isArray <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vue/shared&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">TransformContext</span> <span class="token punctuation">{</span>
  <span class="token comment">// 新增 replaceNode 方法</span>
  <span class="token function">replaceNode</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createTransformContext</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> <span class="token punctuation">{</span> nodeTransforms <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> context<span class="token operator">:</span> TransformContext <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment">// 新增 replaceNode 的实现</span>
    <span class="token function">replaceNode</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>context<span class="token punctuation">.</span>parent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        context<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>children<span class="token punctuation">[</span>context<span class="token punctuation">.</span>childIndex<span class="token punctuation">]</span> <span class="token operator">=</span> context<span class="token punctuation">.</span>currentNode <span class="token operator">=</span>
          node
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> context
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">traverseNode</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> context<span class="token operator">:</span> TransformContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  context<span class="token punctuation">.</span>currentNode <span class="token operator">=</span> node
  <span class="token comment">// apply transform plugins</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> nodeTransforms <span class="token punctuation">}</span> <span class="token operator">=</span> context
  <span class="token keyword">const</span> exitFns<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> nodeTransforms<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> onExit <span class="token operator">=</span> nodeTransforms<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> context<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>onExit<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 增加判断是数组的处理逻辑</span>
      <span class="token comment">// 指令中的 transforms 返回为数组，需要解构</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isArray</span><span class="token punctuation">(</span>onExit<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        exitFns<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span>onExit<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        exitFns<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>onExit<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 因为触发了 replaceNode 可能会导致 context.currentNode  发生变化，所以需要在这里校正</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>context<span class="token punctuation">.</span>currentNode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 节点已删除</span>
      <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 节点更换</span>
    node <span class="token operator">=</span> context<span class="token punctuation">.</span>currentNode
  <span class="token punctuation">}</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 新增加 case 类型 NodeTypes.IF_BRANCH 的处理</span>
    <span class="token keyword">case</span> NodeTypes<span class="token punctuation">.</span><span class="token constant">IF_BRANCH</span><span class="token operator">:</span>
    <span class="token keyword">case</span> NodeTypes<span class="token punctuation">.</span><span class="token constant">ELEMENT</span><span class="token operator">:</span>
    <span class="token keyword">case</span> NodeTypes<span class="token punctuation">.</span><span class="token constant">ROOT</span><span class="token operator">:</span>
      <span class="token function">traversChildren</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> context<span class="token punctuation">)</span>
      <span class="token keyword">break</span>
    <span class="token keyword">case</span> NodeTypes<span class="token punctuation">.</span><span class="token constant">INTERPOLATION</span><span class="token operator">:</span>
      context<span class="token punctuation">.</span><span class="token function">helper</span><span class="token punctuation">(</span><span class="token constant">TO_DISPLAY_STRING</span><span class="token punctuation">)</span>
      <span class="token keyword">break</span>
    <span class="token comment">// 新增加 NodeTypes.IF 的处理</span>
    <span class="token keyword">case</span> NodeTypes<span class="token punctuation">.</span><span class="token constant">IF</span><span class="token operator">:</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;if&#39;</span><span class="token punctuation">)</span>
      <span class="token keyword">break</span>
  <span class="token punctuation">}</span>
  context<span class="token punctuation">.</span>currentNode <span class="token operator">=</span> node
  <span class="token keyword">let</span> i <span class="token operator">=</span> exitFns<span class="token punctuation">.</span>length
  <span class="token keyword">while</span> <span class="token punctuation">(</span>i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    exitFns<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>重新运行测试示例<code>packages/vue/examples/compiler/compiler-directive.html</code>，内容如下</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">const</span> <span class="token punctuation">{</span> compile<span class="token punctuation">,</span> render<span class="token punctuation">,</span> h <span class="token punctuation">}</span> <span class="token operator">=</span> Vue
  <span class="token comment">// 创建 template</span>
  <span class="token keyword">const</span> template <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;div&gt;hello {{msg}}&lt;h1 v-if=&quot;isShow&quot;&gt;你好，世界&lt;/h1&gt;&lt;/div&gt;</span><span class="token template-punctuation string">\`</span></span>
  <span class="token comment">// 生成 render 函数</span>
  <span class="token keyword">const</span> renderFn <span class="token operator">=</span> <span class="token function">compile</span><span class="token punctuation">(</span>template<span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>renderFn<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token comment">// 创建组件</span>
  <span class="token keyword">const</span> component <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">render</span><span class="token operator">:</span> renderFn<span class="token punctuation">,</span>
    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">&#39;world&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">isShow</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>msg <span class="token operator">=</span> <span class="token string">&#39;世界&#39;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>isShow <span class="token operator">=</span> <span class="token boolean">true</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 通过 h 函数，生成 vnode</span>
  <span class="token keyword">const</span> vnode <span class="token operator">=</span> <span class="token function">h</span><span class="token punctuation">(</span>component<span class="token punctuation">)</span>
  <span class="token comment">// 通过 render 函数渲染组件</span>
  <span class="token function">render</span><span class="token punctuation">(</span>vnode<span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>在控制台可以看到如下信息</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/136a9363e3214de49e40b7188d62e22d~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p></li></ol><h2 id="_12-基于编译器的指令-v-xxx-处理-javascript-ast-transform-的转换逻辑" tabindex="-1"><a class="header-anchor" href="#_12-基于编译器的指令-v-xxx-处理-javascript-ast-transform-的转换逻辑" aria-hidden="true">#</a> 12：基于编译器的指令(v-xxx)处理：JavaScript AST，transform 的转换逻辑</h2><p>当<code>vif</code>模块构建完成之后，接下来我们就只需要在<code>transform</code>中针对<code>IF</code>使用<code>vif</code>模块进行转化即可</p><p>我们知道转化的主要方法为<code>traverseNode</code>函数，所以我们需要在该函数内增加如下代码</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">traverseNode</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> context<span class="token operator">:</span> TransformContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token operator">...</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// v-if 指令处理</span>
    <span class="token keyword">case</span> NodeTypes<span class="token punctuation">.</span><span class="token constant">IF</span><span class="token operator">:</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;if&#39;</span><span class="token punctuation">)</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> node<span class="token punctuation">.</span>branches<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">traverseNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>branches<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> context<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">break</span>
  <span class="token punctuation">}</span>
  <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>至此，我们在<code>transform</code>中拥有了处理<code>if</code>的能力</p><p>运行测试实例<code>compiler-directive.html</code>,打印出<code>JavaScript AST</code>,(注意：因为 <code>Symbol</code> 不会再 <code>json</code> 字符串下打印，所以需要我们手动加上)</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>import <span class="token punctuation">{</span> CREATE_COMMENT<span class="token punctuation">,</span> CREATE_ELEMENT_VNODE<span class="token punctuation">,</span> TO_DISPLAY_STRING <span class="token punctuation">}</span> from &#39;./runtimeHelpers&#39; <span class="token comment">// 要引入</span>
<span class="token comment">// 以下是 JavaScript AST</span>
<span class="token punctuation">{</span>
  type<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  children<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      type<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
      tag<span class="token operator">:</span> &#39;div&#39;<span class="token punctuation">,</span>
      tagType<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      props<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      children<span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
          type<span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>
          children<span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> content<span class="token operator">:</span> &#39;hello &#39; <span class="token punctuation">}</span><span class="token punctuation">,</span>
            &#39; + &#39;<span class="token punctuation">,</span>
            <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> content<span class="token operator">:</span> <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> isStatic<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> content<span class="token operator">:</span> &#39;msg&#39;<span class="token punctuation">,</span> constType<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
          <span class="token punctuation">]</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
          type<span class="token operator">:</span> <span class="token number">9</span><span class="token punctuation">,</span>
          loc<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
          branches<span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
              type<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
              loc<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
              condition<span class="token operator">:</span> <span class="token punctuation">{</span>
                type<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
                content<span class="token operator">:</span> &#39;isShow&#39;<span class="token punctuation">,</span>
                isStatic<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
                loc<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                constType<span class="token operator">:</span> <span class="token number">0</span>
              <span class="token punctuation">}</span><span class="token punctuation">,</span>
              children<span class="token operator">:</span> <span class="token punctuation">[</span>
                <span class="token punctuation">{</span>
                  type<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
                  tag<span class="token operator">:</span> &#39;h1&#39;<span class="token punctuation">,</span>
                  tagType<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
                  props<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                  children<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> content<span class="token operator">:</span> &#39;你好，世界&#39; <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                  codegenNode<span class="token operator">:</span> <span class="token punctuation">{</span>
                    type<span class="token operator">:</span> <span class="token number">13</span><span class="token punctuation">,</span>
                    tag<span class="token operator">:</span> &#39;<span class="token string">&quot;h1&quot;</span>&#39;<span class="token punctuation">,</span>
                    children<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> content<span class="token operator">:</span> &#39;你好，世界&#39; <span class="token punctuation">}</span><span class="token punctuation">]</span>
                  <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
              <span class="token punctuation">]</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">]</span><span class="token punctuation">,</span>
          codegenNode<span class="token operator">:</span> <span class="token punctuation">{</span>
            type<span class="token operator">:</span> <span class="token number">19</span><span class="token punctuation">,</span>
            test<span class="token operator">:</span> <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> content<span class="token operator">:</span> &#39;isShow&#39;<span class="token punctuation">,</span> isStatic<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> loc<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> constType<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
            consequent<span class="token operator">:</span> <span class="token punctuation">{</span>
              type<span class="token operator">:</span> <span class="token number">13</span><span class="token punctuation">,</span>
              tag<span class="token operator">:</span> &#39;<span class="token string">&quot;h1&quot;</span>&#39;<span class="token punctuation">,</span>
              children<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> content<span class="token operator">:</span> &#39;你好，世界&#39; <span class="token punctuation">}</span><span class="token punctuation">]</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            alternate<span class="token operator">:</span> <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token number">14</span><span class="token punctuation">,</span> loc<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> arguments<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;&#39;v-if&#39;&quot;</span><span class="token punctuation">,</span> &#39;<span class="token boolean">true</span>&#39;<span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
            newline<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            loc<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
      codegenNode<span class="token operator">:</span> <span class="token punctuation">{</span>
        type<span class="token operator">:</span> <span class="token number">13</span><span class="token punctuation">,</span>
        tag<span class="token operator">:</span> &#39;<span class="token string">&quot;div&quot;</span>&#39;<span class="token punctuation">,</span>
        props<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        children<span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token punctuation">{</span>
            type<span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>
            children<span class="token operator">:</span> <span class="token punctuation">[</span>
              <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> content<span class="token operator">:</span> &#39;hello &#39; <span class="token punctuation">}</span><span class="token punctuation">,</span>
              &#39; + &#39;<span class="token punctuation">,</span>
              <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> content<span class="token operator">:</span> <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> isStatic<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> content<span class="token operator">:</span> &#39;msg&#39;<span class="token punctuation">,</span> constType<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
            <span class="token punctuation">]</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">{</span>
            type<span class="token operator">:</span> <span class="token number">9</span><span class="token punctuation">,</span>
            loc<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            branches<span class="token operator">:</span> <span class="token punctuation">[</span>
              <span class="token punctuation">{</span>
                type<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
                loc<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                condition<span class="token operator">:</span> <span class="token punctuation">{</span>
                  type<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
                  content<span class="token operator">:</span> &#39;isShow&#39;<span class="token punctuation">,</span>
                  isStatic<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
                  loc<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                  constType<span class="token operator">:</span> <span class="token number">0</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                children<span class="token operator">:</span> <span class="token punctuation">[</span>
                  <span class="token punctuation">{</span>
                    type<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
                    tag<span class="token operator">:</span> &#39;h1&#39;<span class="token punctuation">,</span>
                    tagType<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
                    props<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                    children<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> content<span class="token operator">:</span> &#39;你好，世界&#39; <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                    codegenNode<span class="token operator">:</span> <span class="token punctuation">{</span>
                      type<span class="token operator">:</span> <span class="token number">13</span><span class="token punctuation">,</span>
                      tag<span class="token operator">:</span> &#39;<span class="token string">&quot;h1&quot;</span>&#39;<span class="token punctuation">,</span>
                      children<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> content<span class="token operator">:</span> &#39;你好，世界&#39; <span class="token punctuation">}</span><span class="token punctuation">]</span>
                    <span class="token punctuation">}</span>
                  <span class="token punctuation">}</span>
                <span class="token punctuation">]</span>
              <span class="token punctuation">}</span>
            <span class="token punctuation">]</span><span class="token punctuation">,</span>
            codegenNode<span class="token operator">:</span> <span class="token punctuation">{</span>
              type<span class="token operator">:</span> <span class="token number">19</span><span class="token punctuation">,</span>
              test<span class="token operator">:</span> <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> content<span class="token operator">:</span> &#39;isShow&#39;<span class="token punctuation">,</span> isStatic<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> loc<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> constType<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
              consequent<span class="token operator">:</span> <span class="token punctuation">{</span>
                type<span class="token operator">:</span> <span class="token number">13</span><span class="token punctuation">,</span>
                tag<span class="token operator">:</span> &#39;<span class="token string">&quot;h1&quot;</span>&#39;<span class="token punctuation">,</span>
                children<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> content<span class="token operator">:</span> &#39;你好，世界&#39; <span class="token punctuation">}</span><span class="token punctuation">]</span>
              <span class="token punctuation">}</span><span class="token punctuation">,</span>
              alternate<span class="token operator">:</span> <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token number">14</span><span class="token punctuation">,</span> loc<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> arguments<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;&#39;v-if&#39;&quot;</span><span class="token punctuation">,</span> &#39;<span class="token boolean">true</span>&#39;<span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
              newline<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
              loc<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">]</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  loc<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  codegenNode<span class="token operator">:</span> <span class="token punctuation">{</span>
    type<span class="token operator">:</span> <span class="token number">13</span><span class="token punctuation">,</span>
    tag<span class="token operator">:</span> &#39;<span class="token string">&quot;div&quot;</span>&#39;<span class="token punctuation">,</span>
    props<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    children<span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        type<span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>
        children<span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> content<span class="token operator">:</span> &#39;hello &#39; <span class="token punctuation">}</span><span class="token punctuation">,</span>
          &#39; + &#39;<span class="token punctuation">,</span>
          <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> content<span class="token operator">:</span> <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> isStatic<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> content<span class="token operator">:</span> &#39;msg&#39;<span class="token punctuation">,</span> constType<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
        <span class="token punctuation">]</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        type<span class="token operator">:</span> <span class="token number">9</span><span class="token punctuation">,</span>
        loc<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        branches<span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token punctuation">{</span>
            type<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
            loc<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            condition<span class="token operator">:</span> <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> content<span class="token operator">:</span> &#39;isShow&#39;<span class="token punctuation">,</span> isStatic<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> loc<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> constType<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
            children<span class="token operator">:</span> <span class="token punctuation">[</span>
              <span class="token punctuation">{</span>
                type<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
                tag<span class="token operator">:</span> &#39;h1&#39;<span class="token punctuation">,</span>
                tagType<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
                props<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                children<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> content<span class="token operator">:</span> &#39;你好，世界&#39; <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                codegenNode<span class="token operator">:</span> <span class="token punctuation">{</span>
                  type<span class="token operator">:</span> <span class="token number">13</span><span class="token punctuation">,</span>
                  tag<span class="token operator">:</span> &#39;<span class="token string">&quot;h1&quot;</span>&#39;<span class="token punctuation">,</span>
                  children<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> content<span class="token operator">:</span> &#39;你好，世界&#39; <span class="token punctuation">}</span><span class="token punctuation">]</span>
                <span class="token punctuation">}</span>
              <span class="token punctuation">}</span>
            <span class="token punctuation">]</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
        codegenNode<span class="token operator">:</span> <span class="token punctuation">{</span>
          type<span class="token operator">:</span> <span class="token number">19</span><span class="token punctuation">,</span>
          test<span class="token operator">:</span> <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> content<span class="token operator">:</span> &#39;isShow&#39;<span class="token punctuation">,</span> isStatic<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> loc<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  constType<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
          consequent<span class="token operator">:</span> <span class="token punctuation">{</span>
            type<span class="token operator">:</span> <span class="token number">13</span><span class="token punctuation">,</span>
            tag<span class="token operator">:</span> &#39;<span class="token string">&quot;h1&quot;</span>&#39;<span class="token punctuation">,</span>
            children<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> content<span class="token operator">:</span> &#39;你好，世界&#39; <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          alternate<span class="token operator">:</span> <span class="token punctuation">{</span> 
            type<span class="token operator">:</span> <span class="token number">14</span><span class="token punctuation">,</span> 
            loc<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> 
            arguments<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;&#39;v-if&#39;&quot;</span><span class="token punctuation">,</span> &#39;<span class="token boolean">true</span>&#39;<span class="token punctuation">]</span><span class="token punctuation">,</span>
            callee<span class="token operator">:</span> CREATE_COMMENT <span class="token comment">// 这里 callee 也是symbol类型，json序列化后会消失，需要手动加上</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          newline<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
          loc<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  helpers<span class="token operator">:</span> <span class="token punctuation">[</span>CREATE_COMMENT<span class="token punctuation">,</span> CREATE_ELEMENT_VNODE<span class="token punctuation">,</span> TO_DISPLAY_STRING<span class="token punctuation">]</span><span class="token punctuation">,</span>
  components<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  directives<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  imports<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  hoists<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  temps<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  cached<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>直接把以上内容复制到<code>vue3</code>源码中的<code>generate</code>方法调用处(替换<code>ast</code>),页面可正常渲染，证明当前的<code>JavaScript AST</code> 处理完成</p><h2 id="_13-基于编译器的指令-v-xxx-处理-生成-render-函数" tabindex="-1"><a class="header-anchor" href="#_13-基于编译器的指令-v-xxx-处理-生成-render-函数" aria-hidden="true">#</a> 13：基于编译器的指令(v-xxx)处理：生成 render 函数</h2><p>当<code>JavaScript AST</code>构建完成之后，最后我们只需要生成对应的<code>render</code>函数即可</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>const _Vue = Vue
return function render(_ctx<span class="token punctuation">,</span>_cache)<span class="token punctuation">{</span>
  with(_ctx)<span class="token punctuation">{</span>
    const <span class="token punctuation">{</span>createElementVNode<span class="token operator">:</span> _createElementVNode<span class="token punctuation">,</span> createCommentVNode<span class="token operator">:</span>_createCommentVNode <span class="token punctuation">}</span> = _Vue
    return _createElementVNode(<span class="token string">&quot;div&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
      <span class="token string">&quot;hello world&quot;</span><span class="token punctuation">,</span>
      isShow ? _createElementVNode(<span class="token string">&quot;h1&quot;</span><span class="token punctuation">,</span> <span class="token null keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;你好，世界&quot;</span><span class="token punctuation">]</span>) <span class="token operator">:</span> _createCommentVNode(<span class="token string">&quot;v-if&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span>)
    <span class="token punctuation">]</span>)
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>依据以上模板，可以看出，<code>render</code>函数的核心是在于当前的三元表达式 { children } 处理</p><p>而对于<code>codegen</code>模板而言，解析当前参数的函数为<code>genNode</code>,所以我们需要在<code>genNode</code>中增加对应的节点处理</p><ol><li>在<code>packages/compiler-core/src/codegen.ts</code>中的<code>genNode</code>方法下增加节点处理</li></ol><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">genNode</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    <span class="token comment">// 条件表达式</span>
  	<span class="token keyword">case</span> NodeTypes<span class="token punctuation">.</span><span class="token constant">JS_CONDITIONAL_EXPRESSION</span><span class="token operator">:</span>
     <span class="token function">genConditionalExpression</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> context<span class="token punctuation">)</span>
     <span class="token keyword">break</span>
    <span class="token comment">// 调用表达式</span>
   	<span class="token keyword">case</span> NodeTypes<span class="token punctuation">.</span><span class="token constant">JS_CALL_EXPRESSION</span><span class="token operator">:</span>
      <span class="token function">genCallExpression</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> context<span class="token punctuation">)</span>
      <span class="token keyword">break</span>
    <span class="token keyword">case</span> NodeTypes<span class="token punctuation">.</span><span class="token constant">IF</span><span class="token operator">:</span>
      <span class="token function">genNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>codegenNode<span class="token punctuation">,</span> context<span class="token punctuation">)</span>
      <span class="token keyword">break</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">genCallExpression</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> push<span class="token punctuation">,</span> helper <span class="token punctuation">}</span> <span class="token operator">=</span> context
  <span class="token keyword">const</span> callee <span class="token operator">=</span> <span class="token function">isString</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>callee<span class="token punctuation">)</span> <span class="token operator">?</span> node<span class="token punctuation">.</span>callee <span class="token operator">:</span> <span class="token function">helper</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>callee<span class="token punctuation">)</span>
  <span class="token function">push</span><span class="token punctuation">(</span>callee <span class="token operator">+</span> <span class="token string">&#39;(&#39;</span><span class="token punctuation">)</span>
  <span class="token function">genNodeList</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>arguments<span class="token punctuation">,</span> context<span class="token punctuation">)</span>
  <span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;)&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// isShow ? _createElementVNode(&quot;h1&quot;, null, [&quot;你好，世界&quot;]) : _createCommentVNode(&quot;v-if&quot;, true)</span>
<span class="token keyword">function</span> <span class="token function">genConditionalExpression</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> test<span class="token punctuation">,</span> newline<span class="token operator">:</span> needNewLine<span class="token punctuation">,</span> consequent<span class="token punctuation">,</span> alternate <span class="token punctuation">}</span> <span class="token operator">=</span> node
  <span class="token keyword">const</span> <span class="token punctuation">{</span> push<span class="token punctuation">,</span> indent<span class="token punctuation">,</span> deindent<span class="token punctuation">,</span> newline <span class="token punctuation">}</span> <span class="token operator">=</span> context

  <span class="token keyword">if</span> <span class="token punctuation">(</span>test<span class="token punctuation">.</span>type <span class="token operator">===</span> NodeTypes<span class="token punctuation">.</span><span class="token constant">SIMPLE_EXPRESSION</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">genExpression</span><span class="token punctuation">(</span>test<span class="token punctuation">,</span> context<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 换行</span>
  needNewLine <span class="token operator">&amp;&amp;</span> <span class="token function">indent</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  context<span class="token punctuation">.</span>indentLevel<span class="token operator">++</span>
  needNewLine <span class="token operator">||</span> <span class="token function">push</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"> </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;?&#39;</span><span class="token punctuation">)</span>
  <span class="token function">genNode</span><span class="token punctuation">(</span>consequent<span class="token punctuation">,</span> context<span class="token punctuation">)</span>
  context<span class="token punctuation">.</span>indentLevel<span class="token operator">--</span>
  needNewLine <span class="token operator">&amp;&amp;</span> <span class="token function">newline</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  needNewLine <span class="token operator">||</span> <span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span>
  <span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;: &#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> isNested <span class="token operator">=</span> alternate<span class="token punctuation">.</span>type <span class="token operator">===</span> NodeTypes<span class="token punctuation">.</span><span class="token constant">JS_CONDITIONAL_EXPRESSION</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isNested<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    context<span class="token punctuation">.</span>indentLevel<span class="token operator">++</span>
  <span class="token punctuation">}</span>
  <span class="token function">genNode</span><span class="token punctuation">(</span>alternate<span class="token punctuation">,</span> context<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isNested<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    context<span class="token punctuation">.</span>indentLevel<span class="token operator">--</span>
  <span class="token punctuation">}</span>
  needNewLine <span class="token operator">&amp;&amp;</span> <span class="token function">deindent</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>再次运行测试示例<code>compiler-directive.html</code>，内容如下</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">const</span> <span class="token punctuation">{</span> compile<span class="token punctuation">,</span> render<span class="token punctuation">,</span> h <span class="token punctuation">}</span> <span class="token operator">=</span> Vue
  <span class="token comment">// 创建 template</span>
  <span class="token keyword">const</span> template <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;div&gt;hello {{msg}}&lt;h1 v-if=&quot;isShow&quot;&gt;你好，世界&lt;/h1&gt;&lt;/div&gt;</span><span class="token template-punctuation string">\`</span></span>
  <span class="token comment">// 生成 render 函数</span>
  <span class="token keyword">const</span> renderFn <span class="token operator">=</span> <span class="token function">compile</span><span class="token punctuation">(</span>template<span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>renderFn<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token comment">// 创建组件</span>
  <span class="token keyword">const</span> component <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">render</span><span class="token operator">:</span> renderFn<span class="token punctuation">,</span>
    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">isShow</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">&#39;world&#39;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>isShow <span class="token operator">=</span> <span class="token boolean">true</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 通过 h 函数，生成 vnode</span>
  <span class="token keyword">const</span> vnode <span class="token operator">=</span> <span class="token function">h</span><span class="token punctuation">(</span>component<span class="token punctuation">)</span>
  <span class="token comment">// 通过 render 函数渲染组件</span>
  <span class="token function">render</span><span class="token punctuation">(</span>vnode<span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到生成的<code>renderFn.toSring()</code>结果如下</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>function render(_ctx<span class="token punctuation">,</span> _cache) <span class="token punctuation">{</span>
 with(_ctx) <span class="token punctuation">{</span>
  const <span class="token punctuation">{</span> toDisplayString<span class="token operator">:</span> _toDisplayString<span class="token punctuation">,</span> createElementVNode<span class="token operator">:</span> _createElementVNode<span class="token punctuation">,</span> createCommentVNode<span class="token operator">:</span> _createCommentVNode<span class="token punctuation">}</span> = _Vue
  return _createElementVNode(<span class="token string">&quot;div&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;hello &quot;</span> + _toDisplayString(msg)<span class="token punctuation">,</span> isShow
   ?_createElementVNode(<span class="token string">&quot;h1&quot;</span><span class="token punctuation">,</span> <span class="token null keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;你好，世界&quot;</span><span class="token punctuation">]</span>)
   <span class="token operator">:</span> _createCommentVNode(&#39;v-if&#39;<span class="token punctuation">,</span> <span class="token boolean">true</span>)
  <span class="token punctuation">]</span>)
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>同时页面报错（显然是因为<code>_createCommentVNode</code>我们没有创建并导出）</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/762b032af4294929b7b26a56a27ba43a~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p><p>在<code>packages/runtime-core/src/vnode.ts</code>中创建<code>createCommentVNode</code>函数</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createCommentVNode</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">createVNode</span><span class="token punctuation">(</span>Comment<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> text<span class="token punctuation">)</span> <span class="token comment">// 注意第一个参数代表 Comment 类型</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>分别进行导出</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// /packages/runtime-core/src/index.ts</span>
<span class="token keyword">export</span> <span class="token punctuation">{</span> createCommentVNode <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./vnode&#39;</span>

<span class="token comment">// /packages/vue/src/index.ts</span>
<span class="token keyword">export</span> <span class="token punctuation">{</span> createCommentVNode <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vue/runtime-core&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>再次刷新页面，报错就会消失了</p><h2 id="_14-总结" tabindex="-1"><a class="header-anchor" href="#_14-总结" aria-hidden="true">#</a> 14：总结</h2><p>那么到这里，咱们的编译器处理，就已经全部完成了。</p><p>在本章中我们对编译器进行了一些深入的了解，对于编译器而言，本质上就是把<code>template</code>转换为<code>render</code>函数</p><p>对于指令或者<code>{{}}</code>而言，本质只是模板解析的一部分，所以这部分的核心处理逻辑都是在编译器中进行的</p><p>而对于指令而言，每一个指令的处理都会对应一个<code>transformXXX</code>函数，这个函数的存在本质上就是为了生成一个对应的<strong>属性节点</strong>，以便在<code>genrate</code>时，进行对应的解析。</p>`,56);function _(e,E){const p=l("ExternalLinkIcon");return u(),i("div",null,[k,n("p",null,[s("在上面代码中，我们通过 data 声明了一个响应式数据，然后在 template 中通过 "+t()+" 进行使用，从而得到 hello "+t(e.msg)+" 这样的一个表达式，这样的表达式我们把它叫做",1),d]),v,n("ol",null,[m,n("li",null,[b,s(" 由刚才的代码我们可知：在使用 "),q,s(" 时，我们用到了一个 "),y,s(" 变量。但是在整个的 "),g,s(" 代码中却没有 "),f,s(" 变量的存在。那么为什么没抛出对应的错误呢？这是以为"),n("a",h,[s("with"),o(p)]),s("的作用，它会改变语句的作用域链，从而找到 "),x,s(" 变量")])]),w,n("p",null,[s("vue 中提供的指令非常多，大家可以点击"),n("a",S,[s("这里来查看所有的内置指令"),o(p)]),s(",针对于这么多的指令，我们不可能全部进行讲解实现逻辑，所以我们在这里以"),T,s("为例子，为大家讲解指令的解析与处理方案")]),N])}const I=c(r,[["render",_],["__file","index-14.html.vue"]]);export{I as default};
