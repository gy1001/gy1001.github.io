const l=JSON.parse('{"key":"v-3f979105","path":"/zh/other/class/crack-js/index-04.html","title":"04-运算符的妙用以及部分机理解析","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"01: 运算符的诡异现象","slug":"_01-运算符的诡异现象","link":"#_01-运算符的诡异现象","children":[{"level":3,"title":"函数基础知识","slug":"函数基础知识","link":"#函数基础知识","children":[]},{"level":3,"title":"let const 声明的变量不会挂载在 windows 上","slug":"let-const-声明的变量不会挂载在-windows-上","link":"#let-const-声明的变量不会挂载在-windows-上","children":[]},{"level":3,"title":"赋值","slug":"赋值","link":"#赋值","children":[]},{"level":3,"title":"其他赋值操作","slug":"其他赋值操作","link":"#其他赋值操作","children":[]},{"level":3,"title":"typeof 未声明变量为什么不报错(非严格模式)","slug":"typeof-未声明变量为什么不报错-非严格模式","link":"#typeof-未声明变量为什么不报错-非严格模式","children":[]},{"level":3,"title":"思考题","slug":"思考题","link":"#思考题","children":[]}]},{"level":2,"title":"02：窥视delete语法的本质","slug":"_02-窥视delete语法的本质","link":"#_02-窥视delete语法的本质","children":[{"level":3,"title":"delete 的返回值是什么","slug":"delete-的返回值是什么","link":"#delete-的返回值是什么","children":[]},{"level":3,"title":"delete 不能删除那些属性","slug":"delete-不能删除那些属性","link":"#delete-不能删除那些属性","children":[]},{"level":3,"title":"delete 删除原型属性","slug":"delete-删除原型属性","link":"#delete-删除原型属性","children":[]},{"level":3,"title":"delete 到底删除的是什么","slug":"delete-到底删除的是什么","link":"#delete-到底删除的是什么","children":[]},{"level":3,"title":"思考题","slug":"思考题-1","link":"#思考题-1","children":[]}]},{"level":2,"title":"03: 位运算符的妙用：奇偶数，色值换算，换值， 编码等","slug":"_03-位运算符的妙用-奇偶数-色值换算-换值-编码等","link":"#_03-位运算符的妙用-奇偶数-色值换算-换值-编码等","children":[{"level":3,"title":"位运算的基础知识","slug":"位运算的基础知识","link":"#位运算的基础知识","children":[]},{"level":3,"title":"按位与 &","slug":"按位与","link":"#按位与","children":[]},{"level":3,"title":"按位或 |","slug":"按位或","link":"#按位或","children":[]},{"level":3,"title":"按位非 ~","slug":"按位非","link":"#按位非","children":[]},{"level":3,"title":"按位异或^","slug":"按位异或","link":"#按位异或","children":[]},{"level":3,"title":"RGB 和 16进制颜色值的转换","slug":"rgb-和-16进制颜色值的转换","link":"#rgb-和-16进制颜色值的转换","children":[]},{"level":3,"title":"base64 源码","slug":"base64-源码","link":"#base64-源码","children":[]},{"level":3,"title":"实现简单加密","slug":"实现简单加密","link":"#实现简单加密","children":[]},{"level":3,"title":"小结","slug":"小结","link":"#小结","children":[]}]},{"level":2,"title":"04: 计算机是怎样进行数字相加的","slug":"_04-计算机是怎样进行数字相加的","link":"#_04-计算机是怎样进行数字相加的","children":[{"level":3,"title":"0.1 + 0.2 = 0.30000000000000004","slug":"_0-1-0-2-0-30000000000000004","link":"#_0-1-0-2-0-30000000000000004","children":[]},{"level":3,"title":"进制转换-十进制转换二进制","slug":"进制转换-十进制转换二进制","link":"#进制转换-十进制转换二进制","children":[]},{"level":3,"title":"进制转换-二进制转十进制","slug":"进制转换-二进制转十进制","link":"#进制转换-二进制转十进制","children":[]},{"level":3,"title":"IEEE 754 二进制浮点数算术标准","slug":"ieee-754-二进制浮点数算术标准","link":"#ieee-754-二进制浮点数算术标准","children":[]},{"level":3,"title":"浮点数运算","slug":"浮点数运算","link":"#浮点数运算","children":[]}]},{"level":2,"title":"05：why 0.1 + 0.2 !=0.3 揭秘！","slug":"_05-why-0-1-0-2-0-3-揭秘","link":"#_05-why-0-1-0-2-0-3-揭秘","children":[{"level":3,"title":"换算成 IEEE 754 标准二进制结构","slug":"换算成-ieee-754-标准二进制结构","link":"#换算成-ieee-754-标准二进制结构","children":[]},{"level":3,"title":"0.1+0.2=0.30000000000000004的运算过程","slug":"_0-1-0-2-0-30000000000000004的运算过程","link":"#_0-1-0-2-0-30000000000000004的运算过程","children":[]}]}],"git":{"updatedTime":1684944802000},"filePathRelative":"zh/other/class/crack-js/index-04.md"}');export{l as data};
