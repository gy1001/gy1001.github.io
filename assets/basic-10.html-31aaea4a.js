import{_ as a,p as s,q as e,a1 as n}from"./framework-e8cb8151.js";const t={},i=n(`<h1 id="js-web-api-存储" tabindex="-1"><a class="header-anchor" href="#js-web-api-存储" aria-hidden="true">#</a> JS-Web-API-存储</h1><h2 id="知识点" tabindex="-1"><a class="header-anchor" href="#知识点" aria-hidden="true">#</a> 知识点</h2><h3 id="_1-cookie" tabindex="-1"><a class="header-anchor" href="#_1-cookie" aria-hidden="true">#</a> 1. cookie</h3><ul><li>本身用于浏览器和 server 通讯</li><li>被“借用”到本地存储来</li><li>可用 document.cookie=xxxx 来修改</li></ul><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cb5ce55f165f41f1bacaad050891c7c8~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9acc174e32304012a369bcad79a0b140~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p><h4 id="_1-1-cookie-的缺点" tabindex="-1"><a class="header-anchor" href="#_1-1-cookie-的缺点" aria-hidden="true">#</a> 1.1 cookie 的缺点</h4><ul><li>存储大小，最大 4kb</li><li>http 请求时会发送到服务端，增加请求数据量</li><li>只能用 document.cookie=xxx 来修改，太过简陋</li></ul><h3 id="_2-localstorage-和-sessionstorage" tabindex="-1"><a class="header-anchor" href="#_2-localstorage-和-sessionstorage" aria-hidden="true">#</a> 2. localStorage 和 sessionStorage</h3><ul><li>HTML5 专门为存储而设计的，最大可存 5M</li><li>API 简单易用，使用 setItem getItem</li><li>不会随着 http 请求被发送出去</li></ul><h4 id="_2-1-区别" tabindex="-1"><a class="header-anchor" href="#_2-1-区别" aria-hidden="true">#</a> 2.1 区别</h4><ul><li>localStorage 数据会永久存储，除非代码或者手动删除</li><li>sessionStorage 数据这会存在于当前会话，浏览器关闭则清空</li><li>一般用 localStorage 会更多一些</li></ul><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cbb2175f94234aa8830eea8ec0345abd~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span> <span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span>
localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span>

sessionStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span>
sessionStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="题目" tabindex="-1"><a class="header-anchor" href="#题目" aria-hidden="true">#</a> 题目</h2><h3 id="_1-描述-cookie-localstorage-sessionstorage-区别" tabindex="-1"><a class="header-anchor" href="#_1-描述-cookie-localstorage-sessionstorage-区别" aria-hidden="true">#</a> 1. 描述 cookie localStorage sessionStorage 区别</h3><ul><li>容量</li><li>API 易用性</li><li>是否跟随 HTTP 发送到服务器端</li></ul>`,17),o=[i];function c(l,p){return s(),e("div",null,o)}const u=a(t,[["render",c],["__file","basic-10.html.vue"]]);export{u as default};
