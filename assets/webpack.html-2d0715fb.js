const e=JSON.parse('{"key":"v-49e9e39a","path":"/zh/skill/front/about/webpack.html","title":"webpack","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"1、 webpack 初探","slug":"_1、-webpack-初探","link":"#_1、-webpack-初探","children":[{"level":3,"title":"1.1 webpack 究竟是什么","slug":"_1-1-webpack-究竟是什么","link":"#_1-1-webpack-究竟是什么","children":[]},{"level":3,"title":"1.2 什么是模块打包工具","slug":"_1-2-什么是模块打包工具","link":"#_1-2-什么是模块打包工具","children":[]},{"level":3,"title":"1.3 webpack 的环境搭建","slug":"_1-3-webpack-的环境搭建","link":"#_1-3-webpack-的环境搭建","children":[]},{"level":3,"title":"1.4 webpack 的配置文件","slug":"_1-4-webpack-的配置文件","link":"#_1-4-webpack-的配置文件","children":[]},{"level":3,"title":"1.5 浅谈 Webpack 打包知识点","slug":"_1-5-浅谈-webpack-打包知识点","link":"#_1-5-浅谈-webpack-打包知识点","children":[]},{"level":3,"title":"1.6 小结","slug":"_1-6-小结","link":"#_1-6-小结","children":[]}]},{"level":2,"title":"2、 核心观念","slug":"_2、-核心观念","link":"#_2、-核心观念","children":[{"level":3,"title":"2.1 什么是 loader","slug":"_2-1-什么是-loader","link":"#_2-1-什么是-loader","children":[]},{"level":3,"title":"2.2 使用 Loader 打包静态资源（图片篇）","slug":"_2-2-使用-loader-打包静态资源-图片篇","link":"#_2-2-使用-loader-打包静态资源-图片篇","children":[]},{"level":3,"title":"2.3 使用 Loader 打包静态资源（样式篇）","slug":"_2-3-使用-loader-打包静态资源-样式篇","link":"#_2-3-使用-loader-打包静态资源-样式篇","children":[]},{"level":3,"title":"2.4 使用 plugins 让打包更便捷","slug":"_2-4-使用-plugins-让打包更便捷","link":"#_2-4-使用-plugins-让打包更便捷","children":[]},{"level":3,"title":"2.5 Entry 与 Output 的基本配置","slug":"_2-5-entry-与-output-的基本配置","link":"#_2-5-entry-与-output-的基本配置","children":[]},{"level":3,"title":"2.6 SourceMap 的配置","slug":"_2-6-sourcemap-的配置","link":"#_2-6-sourcemap-的配置","children":[]},{"level":3,"title":"2.7 使用 WebpackDevServer 提升开发效率","slug":"_2-7-使用-webpackdevserver-提升开发效率","link":"#_2-7-使用-webpackdevserver-提升开发效率","children":[]},{"level":3,"title":"2.8 Hot Module Replacement 热模块替换","slug":"_2-8-hot-module-replacement-热模块替换","link":"#_2-8-hot-module-replacement-热模块替换","children":[]},{"level":3,"title":"2.9 使用 babel 处理 ES6 函数","slug":"_2-9-使用-babel-处理-es6-函数","link":"#_2-9-使用-babel-处理-es6-函数","children":[]}]},{"level":2,"title":"3、高级概念","slug":"_3、高级概念","link":"#_3、高级概念","children":[{"level":3,"title":"3.1 Tree Shaking 概念详解","slug":"_3-1-tree-shaking-概念详解","link":"#_3-1-tree-shaking-概念详解","children":[]},{"level":3,"title":"3.2 Develoment 和 Production 模式的区分打包","slug":"_3-2-develoment-和-production-模式的区分打包","link":"#_3-2-develoment-和-production-模式的区分打包","children":[]},{"level":3,"title":"3.3 Webpack 和 Code Splitting","slug":"_3-3-webpack-和-code-splitting","link":"#_3-3-webpack-和-code-splitting","children":[]},{"level":3,"title":"3.4 SplitChunksPlugin 配置参数详解","slug":"_3-4-splitchunksplugin-配置参数详解","link":"#_3-4-splitchunksplugin-配置参数详解","children":[]},{"level":3,"title":"3.5 Lazy Loading 懒加载，Chunk 是什么？","slug":"_3-5-lazy-loading-懒加载-chunk-是什么","link":"#_3-5-lazy-loading-懒加载-chunk-是什么","children":[]},{"level":3,"title":"3.6 打包分析，Preloading, Prefetching","slug":"_3-6-打包分析-preloading-prefetching","link":"#_3-6-打包分析-preloading-prefetching","children":[]},{"level":3,"title":"3.7 CSS 文件的分割","slug":"_3-7-css-文件的分割","link":"#_3-7-css-文件的分割","children":[]},{"level":3,"title":"3.8 Webpack 与浏览器缓存( Caching )","slug":"_3-8-webpack-与浏览器缓存-caching","link":"#_3-8-webpack-与浏览器缓存-caching","children":[]},{"level":3,"title":"3.9 Shimming 的作用","slug":"_3-9-shimming-的作用","link":"#_3-9-shimming-的作用","children":[]},{"level":3,"title":"3.10 环境变量的使用方法","slug":"_3-10-环境变量的使用方法","link":"#_3-10-环境变量的使用方法","children":[]}]},{"level":2,"title":"4、实战配置案例讲解","slug":"_4、实战配置案例讲解","link":"#_4、实战配置案例讲解","children":[{"level":3,"title":"4.1 Library 的打包","slug":"_4-1-library-的打包","link":"#_4-1-library-的打包","children":[]},{"level":3,"title":"4.2 PWA: Progressive Web Application","slug":"_4-2-pwa-progressive-web-application","link":"#_4-2-pwa-progressive-web-application","children":[]},{"level":3,"title":"4.3 TypeScript 的打包配置","slug":"_4-3-typescript-的打包配置","link":"#_4-3-typescript-的打包配置","children":[]},{"level":3,"title":"4.4 使用 WebpackDevServer 实现请求转发","slug":"_4-4-使用-webpackdevserver-实现请求转发","link":"#_4-4-使用-webpackdevserver-实现请求转发","children":[]},{"level":3,"title":"4.5 WebpackDevServer 解决单页面应用路由问题","slug":"_4-5-webpackdevserver-解决单页面应用路由问题","link":"#_4-5-webpackdevserver-解决单页面应用路由问题","children":[]},{"level":3,"title":"4.6 EsLint 在 Webpack 中的配置","slug":"_4-6-eslint-在-webpack-中的配置","link":"#_4-6-eslint-在-webpack-中的配置","children":[]},{"level":3,"title":"4.7 webpack 性能优化","slug":"_4-7-webpack-性能优化","link":"#_4-7-webpack-性能优化","children":[]},{"level":3,"title":"4.8 多页面打包配置","slug":"_4-8-多页面打包配置","link":"#_4-8-多页面打包配置","children":[]}]},{"level":2,"title":"5、底层原理及脚手架工具分析","slug":"_5、底层原理及脚手架工具分析","link":"#_5、底层原理及脚手架工具分析","children":[{"level":3,"title":"5.1 如何编写一个 loader","slug":"_5-1-如何编写一个-loader","link":"#_5-1-如何编写一个-loader","children":[]},{"level":3,"title":"5.2 编写一个 plugin","slug":"_5-2-编写一个-plugin","link":"#_5-2-编写一个-plugin","children":[]},{"level":3,"title":"5.3 Bundler 源码编写","slug":"_5-3-bundler-源码编写","link":"#_5-3-bundler-源码编写","children":[]}]},{"level":2,"title":"6、CRA 和 VCli 3.0 脚手架配置分析","slug":"_6、cra-和-vcli-3-0-脚手架配置分析","link":"#_6、cra-和-vcli-3-0-脚手架配置分析","children":[{"level":3,"title":"6.1 通过 CRA 深入 Webpack 配置","slug":"_6-1-通过-cra-深入-webpack-配置","link":"#_6-1-通过-cra-深入-webpack-配置","children":[]},{"level":3,"title":"6.2 Vue-Cli 脚手架工具","slug":"_6-2-vue-cli-脚手架工具","link":"#_6-2-vue-cli-脚手架工具","children":[]}]}],"git":{"updatedTime":1658975540000},"filePathRelative":"zh/skill/front/about/webpack.md"}');export{e as data};
