const l=JSON.parse('{"key":"v-01c03713","path":"/zh/other/class/vue3-learn-practice.html","title":"Vue3 从入门到实战","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"1. Vue 语法初探","slug":"_1-vue-语法初探","link":"#_1-vue-语法初探","children":[{"level":3,"title":"1.1 课前须知，这里有你需要了解的一切","slug":"_1-1-课前须知-这里有你需要了解的一切","link":"#_1-1-课前须知-这里有你需要了解的一切","children":[]},{"level":3,"title":"1.2 初学编写 HelloWorld 和 Counter","slug":"_1-2-初学编写-helloworld-和-counter","link":"#_1-2-初学编写-helloworld-和-counter","children":[]},{"level":3,"title":"1.3 编写字符串反转和内容隐藏小功能","slug":"_1-3-编写字符串反转和内容隐藏小功能","link":"#_1-3-编写字符串反转和内容隐藏小功能","children":[]},{"level":3,"title":"1.4 编写 TodoList 小功能，了解循环和双向绑定","slug":"_1-4-编写-todolist-小功能-了解循环和双向绑定","link":"#_1-4-编写-todolist-小功能-了解循环和双向绑定","children":[]},{"level":3,"title":"1.5 组件概念初探，对 TodoList 进行组件代码拆分","slug":"_1-5-组件概念初探-对-todolist-进行组件代码拆分","link":"#_1-5-组件概念初探-对-todolist-进行组件代码拆分","children":[]}]},{"level":2,"title":"2. Vue 基础语法","slug":"_2-vue-基础语法","link":"#_2-vue-基础语法","children":[{"level":3,"title":"2.1 Vue 中应用和组件的基础概念","slug":"_2-1-vue-中应用和组件的基础概念","link":"#_2-1-vue-中应用和组件的基础概念","children":[]},{"level":3,"title":"2.2 理解 Vue 中的生命周期函数","slug":"_2-2-理解-vue-中的生命周期函数","link":"#_2-2-理解-vue-中的生命周期函数","children":[]},{"level":3,"title":"2.3 常用模版语法讲解","slug":"_2-3-常用模版语法讲解","link":"#_2-3-常用模版语法讲解","children":[]},{"level":3,"title":"2.4 数据，方法，计算属性和侦听器","slug":"_2-4-数据-方法-计算属性和侦听器","link":"#_2-4-数据-方法-计算属性和侦听器","children":[]},{"level":3,"title":"2.5 样式绑定语法","slug":"_2-5-样式绑定语法","link":"#_2-5-样式绑定语法","children":[]},{"level":3,"title":"2.6 条件渲染","slug":"_2-6-条件渲染","link":"#_2-6-条件渲染","children":[]},{"level":3,"title":"2.7 列表渲染","slug":"_2-7-列表渲染","link":"#_2-7-列表渲染","children":[]},{"level":3,"title":"2.8 事件处理","slug":"_2-8-事件处理","link":"#_2-8-事件处理","children":[]},{"level":3,"title":"2.9 表单输入绑定","slug":"_2-9-表单输入绑定","link":"#_2-9-表单输入绑定","children":[]}]},{"level":2,"title":"3. 探索组件的理念","slug":"_3-探索组件的理念","link":"#_3-探索组件的理念","children":[{"level":3,"title":"3.1 组件的定义及复用性，局部组件和全局组件","slug":"_3-1-组件的定义及复用性-局部组件和全局组件","link":"#_3-1-组件的定义及复用性-局部组件和全局组件","children":[]},{"level":3,"title":"3.2 组件间传值及传值校验","slug":"_3-2-组件间传值及传值校验","link":"#_3-2-组件间传值及传值校验","children":[]},{"level":3,"title":"3.3 单项数据流的理解","slug":"_3-3-单项数据流的理解","link":"#_3-3-单项数据流的理解","children":[]},{"level":3,"title":"3.4 Non-Props 属性是什么","slug":"_3-4-non-props-属性是什么","link":"#_3-4-non-props-属性是什么","children":[]},{"level":3,"title":"3.5 父子组件间如何通过事件进行通信","slug":"_3-5-父子组件间如何通过事件进行通信","link":"#_3-5-父子组件间如何通过事件进行通信","children":[]},{"level":3,"title":"3.6 组件间双向绑定高级内容","slug":"_3-6-组件间双向绑定高级内容","link":"#_3-6-组件间双向绑定高级内容","children":[]},{"level":3,"title":"3.7 使用插槽和具名插槽解决组件内容传递问题","slug":"_3-7-使用插槽和具名插槽解决组件内容传递问题","link":"#_3-7-使用插槽和具名插槽解决组件内容传递问题","children":[]},{"level":3,"title":"3.8 作用域插槽","slug":"_3-8-作用域插槽","link":"#_3-8-作用域插槽","children":[]},{"level":3,"title":"3.9 动态组件和异步组件","slug":"_3-9-动态组件和异步组件","link":"#_3-9-动态组件和异步组件","children":[]},{"level":3,"title":"3.10 基础语法知识点查缺补漏","slug":"_3-10-基础语法知识点查缺补漏","link":"#_3-10-基础语法知识点查缺补漏","children":[]}]},{"level":2,"title":"4. Vue 中的动画","slug":"_4-vue-中的动画","link":"#_4-vue-中的动画","children":[{"level":3,"title":"4.1 使用 Vue 实现基础的 CSS 过渡与动画效果","slug":"_4-1-使用-vue-实现基础的-css-过渡与动画效果","link":"#_4-1-使用-vue-实现基础的-css-过渡与动画效果","children":[]},{"level":3,"title":"4.2 使用 transition 标签实现单元素组件的过渡和动画效果","slug":"_4-2-使用-transition-标签实现单元素组件的过渡和动画效果","link":"#_4-2-使用-transition-标签实现单元素组件的过渡和动画效果","children":[]},{"level":3,"title":"4.3 组件和元素切换动画的实现","slug":"_4-3-组件和元素切换动画的实现","link":"#_4-3-组件和元素切换动画的实现","children":[]},{"level":3,"title":"4.4 列表动画","slug":"_4-4-列表动画","link":"#_4-4-列表动画","children":[]},{"level":3,"title":"4.5 状态动画","slug":"_4-5-状态动画","link":"#_4-5-状态动画","children":[]}]},{"level":2,"title":"5. Vue 中的高级语法","slug":"_5-vue-中的高级语法","link":"#_5-vue-中的高级语法","children":[{"level":3,"title":"5.1 Mixin 混入的基础语法","slug":"_5-1-mixin-混入的基础语法","link":"#_5-1-mixin-混入的基础语法","children":[]},{"level":3,"title":"5.2 开发实现 Vue 中的自定义指令","slug":"_5-2-开发实现-vue-中的自定义指令","link":"#_5-2-开发实现-vue-中的自定义指令","children":[]},{"level":3,"title":"5.3 teleport 传送门功能","slug":"_5-3-teleport-传送门功能","link":"#_5-3-teleport-传送门功能","children":[]},{"level":3,"title":"5.4 更加底层的 render 函数","slug":"_5-4-更加底层的-render-函数","link":"#_5-4-更加底层的-render-函数","children":[]},{"level":3,"title":"5.5 插件的定义和使用","slug":"_5-5-插件的定义和使用","link":"#_5-5-插件的定义和使用","children":[]},{"level":3,"title":"5.6 数据校验插件开发实例","slug":"_5-6-数据校验插件开发实例","link":"#_5-6-数据校验插件开发实例","children":[]}]},{"level":2,"title":"6. Composition API","slug":"_6-composition-api","link":"#_6-composition-api","children":[{"level":3,"title":"6.1 setup 函数的使用","slug":"_6-1-setup-函数的使用","link":"#_6-1-setup-函数的使用","children":[]},{"level":3,"title":"6.2 ref，reactive 响应式引用的用法和原理","slug":"_6-2-ref-reactive-响应式引用的用法和原理","link":"#_6-2-ref-reactive-响应式引用的用法和原理","children":[]},{"level":3,"title":"6.3 toRef 以及 context 参数","slug":"_6-3-toref-以及-context-参数","link":"#_6-3-toref-以及-context-参数","children":[]},{"level":3,"title":"6.4 使用 Composition API 开发 TodoList","slug":"_6-4-使用-composition-api-开发-todolist","link":"#_6-4-使用-composition-api-开发-todolist","children":[]},{"level":3,"title":"6.5 computed 方法生成计算属性","slug":"_6-5-computed-方法生成计算属性","link":"#_6-5-computed-方法生成计算属性","children":[]},{"level":3,"title":"6.6 watch 和 watchEffect 的使用和差异性","slug":"_6-6-watch-和-watcheffect-的使用和差异性","link":"#_6-6-watch-和-watcheffect-的使用和差异性","children":[]},{"level":3,"title":"6.7 生命周期函数的新写法","slug":"_6-7-生命周期函数的新写法","link":"#_6-7-生命周期函数的新写法","children":[]},{"level":3,"title":"6.12 Provide,Inject,模版 Ref 的用法","slug":"_6-12-provide-inject-模版-ref-的用法","link":"#_6-12-provide-inject-模版-ref-的用法","children":[]}]},{"level":2,"title":"7. Vue 项目开发配套工具讲解","slug":"_7-vue-项目开发配套工具讲解","link":"#_7-vue-项目开发配套工具讲解","children":[{"level":3,"title":"7.1 VueCLI 的使用和单文件组件","slug":"_7-1-vuecli-的使用和单文件组件","link":"#_7-1-vuecli-的使用和单文件组件","children":[]},{"level":3,"title":"7.2 使用单文件组件编写 TodoList","slug":"_7-2-使用单文件组件编写-todolist","link":"#_7-2-使用单文件组件编写-todolist","children":[]},{"level":3,"title":"7.3 Vue-Router 路由的理解和使用","slug":"_7-3-vue-router-路由的理解和使用","link":"#_7-3-vue-router-路由的理解和使用","children":[]},{"level":3,"title":"7.4 VueX 的语法详解","slug":"_7-4-vuex-的语法详解","link":"#_7-4-vuex-的语法详解","children":[]},{"level":3,"title":"7.5 compositionAPI 中如何使用 VueX","slug":"_7-5-compositionapi-中如何使用-vuex","link":"#_7-5-compositionapi-中如何使用-vuex","children":[]},{"level":3,"title":"7.6 使用 axios 发送 ajax 请求","slug":"_7-6-使用-axios-发送-ajax-请求","link":"#_7-6-使用-axios-发送-ajax-请求","children":[]}]},{"level":2,"title":"8. 京东到家 项目首页开发","slug":"_8-京东到家-项目首页开发","link":"#_8-京东到家-项目首页开发","children":[{"level":3,"title":"8.1 工程初始化","slug":"_8-1-工程初始化","link":"#_8-1-工程初始化","children":[]},{"level":3,"title":"8.2 工程目录代码简介及整理","slug":"_8-2-工程目录代码简介及整理","link":"#_8-2-工程目录代码简介及整理","children":[]},{"level":3,"title":"8.3 基础样式集成及开发模拟器的使用","slug":"_8-3-基础样式集成及开发模拟器的使用","link":"#_8-3-基础样式集成及开发模拟器的使用","children":[]},{"level":3,"title":"8.4 flex + iconfont 完成首页 docker 样式编写","slug":"_8-4-flex-iconfont-完成首页-docker-样式编写","link":"#_8-4-flex-iconfont-完成首页-docker-样式编写","children":[]},{"level":3,"title":"8.5 使用 Scss 组织地址区域布局","slug":"_8-5-使用-scss-组织地址区域布局","link":"#_8-5-使用-scss-组织地址区域布局","children":[]},{"level":3,"title":"8.6 利用 CSS 技巧实现搜索及 banner 区域布局","slug":"_8-6-利用-css-技巧实现搜索及-banner-区域布局","link":"#_8-6-利用-css-技巧实现搜索及-banner-区域布局","children":[]},{"level":3,"title":"8.7 使用 flex 布局实现图标列表布局","slug":"_8-7-使用-flex-布局实现图标列表布局","link":"#_8-7-使用-flex-布局实现图标列表布局","children":[]},{"level":3,"title":"8.8 首页布局收尾","slug":"_8-8-首页布局收尾","link":"#_8-8-首页布局收尾","children":[]},{"level":3,"title":"8.9 首页组件的合理拆分","slug":"_8-9-首页组件的合理拆分","link":"#_8-9-首页组件的合理拆分","children":[]},{"level":3,"title":"8.10 使用 v-for, v-html 指令精简页面代码","slug":"_8-10-使用-v-for-v-html-指令精简页面代码","link":"#_8-10-使用-v-for-v-html-指令精简页面代码","children":[]},{"level":3,"title":"8.11 CSS 作用域约束以及 Vue 开发者工具的安装使用","slug":"_8-11-css-作用域约束以及-vue-开发者工具的安装使用","link":"#_8-11-css-作用域约束以及-vue-开发者工具的安装使用","children":[]}]},{"level":2,"title":"9. 登陆功能开发","slug":"_9-登陆功能开发","link":"#_9-登陆功能开发","children":[{"level":3,"title":"9.1 登陆页面布局开发","slug":"_9-1-登陆页面布局开发","link":"#_9-1-登陆页面布局开发","children":[]},{"level":3,"title":"9.2 路由守卫实现基础登陆校验功能","slug":"_9-2-路由守卫实现基础登陆校验功能","link":"#_9-2-路由守卫实现基础登陆校验功能","children":[]},{"level":3,"title":"9.3 注册页面开发及路由串联复习","slug":"_9-3-注册页面开发及路由串联复习","link":"#_9-3-注册页面开发及路由串联复习","children":[]},{"level":3,"title":"9.4 使用 axios 发送登陆 Mock 请求","slug":"_9-4-使用-axios-发送登陆-mock-请求","link":"#_9-4-使用-axios-发送登陆-mock-请求","children":[]},{"level":3,"title":"9.5 请求函数的封装","slug":"_9-5-请求函数的封装","link":"#_9-5-请求函数的封装","children":[]},{"level":3,"title":"9.6 Toast 弹窗组件的开发","slug":"_9-6-toast-弹窗组件的开发","link":"#_9-6-toast-弹窗组件的开发","children":[]},{"level":3,"title":"9.7 通过代码拆分增加逻辑可维护性","slug":"_9-7-通过代码拆分增加逻辑可维护性","link":"#_9-7-通过代码拆分增加逻辑可维护性","children":[]},{"level":3,"title":"9.8 Setup 函数的职责以及注册功能的实现","slug":"_9-8-setup-函数的职责以及注册功能的实现","link":"#_9-8-setup-函数的职责以及注册功能的实现","children":[]}]},{"level":2,"title":"10. 商家展示功能开发(上)","slug":"_10-商家展示功能开发-上","link":"#_10-商家展示功能开发-上","children":[{"level":3,"title":"10.1 首页附近店铺数据动态化-详情页准备","slug":"_10-1-首页附近店铺数据动态化-详情页准备","link":"#_10-1-首页附近店铺数据动态化-详情页准备","children":[]},{"level":3,"title":"10.2 动态路由，异步路由与组件拆分复用","slug":"_10-2-动态路由-异步路由与组件拆分复用","link":"#_10-2-动态路由-异步路由与组件拆分复用","children":[]},{"level":3,"title":"10.3 搜索布局及路由跳转","slug":"_10-3-搜索布局及路由跳转","link":"#_10-3-搜索布局及路由跳转","children":[]},{"level":3,"title":"10.4 路由参数的传递以及商家详情的获取","slug":"_10-4-路由参数的传递以及商家详情的获取","link":"#_10-4-路由参数的传递以及商家详情的获取","children":[]},{"level":3,"title":"10.5 商家页面核心样式开发","slug":"_10-5-商家页面核心样式开发","link":"#_10-5-商家页面核心样式开发","children":[]},{"level":3,"title":"10.6 样式的优化与代码复用","slug":"_10-6-样式的优化与代码复用","link":"#_10-6-样式的优化与代码复用","children":[]},{"level":3,"title":"10.7 商家详情页分类及内容联动的实现","slug":"_10-7-商家详情页分类及内容联动的实现","link":"#_10-7-商家详情页分类及内容联动的实现","children":[]},{"level":3,"title":"10.8 使用 watchEffect 巧妙的进行代码拆分","slug":"_10-8-使用-watcheffect-巧妙的进行代码拆分","link":"#_10-8-使用-watcheffect-巧妙的进行代码拆分","children":[]}]},{"level":2,"title":"11. 商家展示功能开发（下）","slug":"_11-商家展示功能开发-下","link":"#_11-商家展示功能开发-下","children":[{"level":3,"title":"11.1 购物车的样式开发","slug":"_11-1-购物车的样式开发","link":"#_11-1-购物车的样式开发","children":[]},{"level":3,"title":"11.2 Vuex 中购物车数据结构的设计","slug":"_11-2-vuex-中购物车数据结构的设计","link":"#_11-2-vuex-中购物车数据结构的设计","children":[]},{"level":3,"title":"11.3 使用 computed 完成订单价格计算","slug":"_11-3-使用-computed-完成订单价格计算","link":"#_11-3-使用-computed-完成订单价格计算","children":[]},{"level":3,"title":"11.4 购物车及列表双向数据同步功能开发","slug":"_11-4-购物车及列表双向数据同步功能开发","link":"#_11-4-购物车及列表双向数据同步功能开发","children":[]},{"level":3,"title":"11.5 根据购物车选中状态计算订单金额","slug":"_11-5-根据购物车选中状态计算订单金额","link":"#_11-5-根据购物车选中状态计算订单金额","children":[]},{"level":3,"title":"11.6 全选及清空购物车的功能实现","slug":"_11-6-全选及清空购物车的功能实现","link":"#_11-6-全选及清空购物车的功能实现","children":[]},{"level":3,"title":"11.7 商家详情页面代码优化","slug":"_11-7-商家详情页面代码优化","link":"#_11-7-商家详情页面代码优化","children":[]},{"level":3,"title":"11.8 购物车数据结构的变更","slug":"_11-8-购物车数据结构的变更","link":"#_11-8-购物车数据结构的变更","children":[]},{"level":3,"title":"11.9 通过 LocalStorage 实现购物车信息持久存储","slug":"_11-9-通过-localstorage-实现购物车信息持久存储","link":"#_11-9-通过-localstorage-实现购物车信息持久存储","children":[]}]},{"level":2,"title":"12. 核心购物链路开发","slug":"_12-核心购物链路开发","link":"#_12-核心购物链路开发","children":[{"level":3,"title":"12.1 确认订单页面创建及顶部布局","slug":"_12-1-确认订单页面创建及顶部布局","link":"#_12-1-确认订单页面创建及顶部布局","children":[]},{"level":3,"title":"12.2 订单商品列表数据获取与布局","slug":"_12-2-订单商品列表数据获取与布局","link":"#_12-2-订单商品列表数据获取与布局","children":[]},{"level":3,"title":"12.3 页面布局及展示逻辑开发","slug":"_12-3-页面布局及展示逻辑开发","link":"#_12-3-页面布局及展示逻辑开发","children":[]},{"level":3,"title":"12.4 确认订单页面组件拆分及弹框布局制作","slug":"_12-4-确认订单页面组件拆分及弹框布局制作","link":"#_12-4-确认订单页面组件拆分及弹框布局制作","children":[]},{"level":3,"title":"12.5 购物流程开发完成","slug":"_12-5-购物流程开发完成","link":"#_12-5-购物流程开发完成","children":[]},{"level":3,"title":"12.6 下单流程开发优化","slug":"_12-6-下单流程开发优化","link":"#_12-6-下单流程开发优化","children":[]},{"level":3,"title":"12.7 订单列表页布局开发","slug":"_12-7-订单列表页布局开发","link":"#_12-7-订单列表页布局开发","children":[]},{"level":3,"title":"12.8 订单列表逻辑开发","slug":"_12-8-订单列表逻辑开发","link":"#_12-8-订单列表逻辑开发","children":[]},{"level":3,"title":"12.9 订单列表页布局开发","slug":"_12-9-订单列表页布局开发","link":"#_12-9-订单列表页布局开发","children":[]}]},{"level":2,"title":"13. 真机调试及工程发布流程","slug":"_13-真机调试及工程发布流程","link":"#_13-真机调试及工程发布流程","children":[{"level":3,"title":"13.1 如何进行真机调试","slug":"_13-1-如何进行真机调试","link":"#_13-1-如何进行真机调试","children":[]},{"level":3,"title":"13.2 解决真机调试过程中的展示问题","slug":"_13-2-解决真机调试过程中的展示问题","link":"#_13-2-解决真机调试过程中的展示问题","children":[]},{"level":3,"title":"13.3 实现项目对不同设备的展示适配","slug":"_13-3-实现项目对不同设备的展示适配","link":"#_13-3-实现项目对不同设备的展示适配","children":[]},{"level":3,"title":"13.4 项目上线和课程总结","slug":"_13-4-项目上线和课程总结","link":"#_13-4-项目上线和课程总结","children":[]}]}],"git":{"updatedTime":1655794768000},"filePathRelative":"zh/other/class/vue3-learn-practice.md"}');export{l as data};
