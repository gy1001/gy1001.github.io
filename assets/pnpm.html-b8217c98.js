import{_ as e,M as i,p,q as l,R as n,t as a,N as d,a1 as c}from"./framework-e8cb8151.js";const t={},o=n("h1",{id:"pnpm",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#pnpm","aria-hidden":"true"},"#"),a(" pnpm")],-1),r={href:"https://www.pnpm.cn/",target:"_blank",rel:"noopener noreferrer"},m=c(`<h2 id="_1-特点-官网介绍" tabindex="-1"><a class="header-anchor" href="#_1-特点-官网介绍" aria-hidden="true">#</a> 1. 特点（官网介绍）</h2><ul><li>快速：pnpm 是同类工具速度的将近 2 倍</li><li>高效：node_modules 中的所有文件均克隆或硬链接自单一存储位置</li><li>支持单体仓库：pnpm 内置了对单个源码仓库中包含多个软件包的支持</li><li>权限严格：pnpm 创建的 node_modules 默认并非扁平结构，因此代码无法对任意软件包进行访问</li></ul><p><strong>创建非扁平化的 node_module 目录</strong><img src="https://www.pnpm.cn/assets/images/node-modules-structure-8ab301ddaed3b7530858b233f5b3be57.jpg" alt="img"></p><h2 id="_2-安装-pnpm" tabindex="-1"><a class="header-anchor" href="#_2-安装-pnpm" aria-hidden="true">#</a> 2. 安装 pnpm</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 通过 npm 安装 pnpm</span>
<span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> <span class="token function">pnpm</span>
<span class="token comment"># 通过 Homebrew 安装 pnpm</span>
brew <span class="token function">install</span> <span class="token function">pnpm</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-常用命令" tabindex="-1"><a class="header-anchor" href="#_3-常用命令" aria-hidden="true">#</a> 3. 常用命令</h2><h3 id="_3-1-安装依赖包" tabindex="-1"><a class="header-anchor" href="#_3-1-安装依赖包" aria-hidden="true">#</a> 3.1 安装依赖包</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> <span class="token function">add</span> pkg <span class="token comment"># 保存到 dependencies 配置项下</span>
<span class="token function">pnpm</span> <span class="token function">add</span> <span class="token parameter variable">-D</span> pkg <span class="token comment"># 保存到 dependencies 配置项下</span>
<span class="token function">pnpm</span> <span class="token function">add</span> <span class="token parameter variable">-O</span> pkg <span class="token comment"># 保存到 optionalDependencies 配置项下</span>
<span class="token function">pnpm</span> <span class="token function">add</span> <span class="token parameter variable">-g</span> pkg <span class="token comment"># 安装软件包到全局环境中</span>
<span class="token function">pnpm</span> <span class="token function">add</span> pkg@next	<span class="token comment"># 安装标记为 next 的版本</span>
<span class="token function">pnpm</span> <span class="token function">add</span> pkg@3.0.0 <span class="token comment"># 安装指定版本 3.0.0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-安装所有依赖项" tabindex="-1"><a class="header-anchor" href="#_3-2-安装所有依赖项" aria-hidden="true">#</a> 3.2 安装所有依赖项</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> <span class="token function">install</span>
<span class="token comment"># 或者</span>
<span class="token function">pnpm</span> i
<span class="token function">pnpm</span> i <span class="token parameter variable">--offline</span>	<span class="token comment"># Install offline from the store only</span>
<span class="token function">pnpm</span> i --frozen-lockfile	<span class="token comment"># pnpm-lock.yaml is not updated</span>
<span class="token function">pnpm</span> i --lockfile-only	<span class="token comment"># Only pnpm-lock.yaml is updated</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-更新依赖项" tabindex="-1"><a class="header-anchor" href="#_3-3-更新依赖项" aria-hidden="true">#</a> 3.3 更新依赖项</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> update
<span class="token function">pnpm</span> up	
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-4-删除依赖项" tabindex="-1"><a class="header-anchor" href="#_3-4-删除依赖项" aria-hidden="true">#</a> 3.4 删除依赖项</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> remove 
<span class="token function">pnpm</span> <span class="token function">rm</span> 
<span class="token function">pnpm</span> uninstall 
<span class="token function">pnpm</span> un

<span class="token comment"># 可以增加如下参数，代表不同的含义</span>
--global: 从全局环境中删除指定的软件包。
--save-dev, -D: 仅删除 devDependencies 中列出的依赖包。
--save-optional, -O: 仅删除 optionalDependencies 中列出的依赖包。
--save-prod, -P: 仅删除 dependencies 中列出的依赖包。
--recursive, -r: 当在 workspace 下使用时，将从 workspace 下的每个软件包中删除指定的一个或多个依赖包。当不在 workspace 下使用时，将在 子目录下寻找所有软件包并删除指定的一个或多个依赖包。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-5-运行脚本" tabindex="-1"><a class="header-anchor" href="#_3-5-运行脚本" aria-hidden="true">#</a> 3.5 运行脚本</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> run xxx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>其他的可以参考官方地址</strong></p>`,17);function u(v,h){const s=i("ExternalLinkIcon");return p(),l("div",null,[o,n("blockquote",null,[n("p",null,[a("pnpm - performant npm, 速度快、节省磁盘空间的软件包管理器,"),n("a",r,[a("pnpm官网地址"),d(s)])])]),m])}const k=e(t,[["render",u],["__file","pnpm.html.vue"]]);export{k as default};
