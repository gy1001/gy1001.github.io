import{_ as c,M as o,p as l,q as i,R as n,N as s,t as e,a1 as a}from"./framework-e8cb8151.js";const u={},r=a('<h1 id="_13-通关-前端工程化脚手架设计" tabindex="-1"><a class="header-anchor" href="#_13-通关-前端工程化脚手架设计" aria-hidden="true">#</a> 13-通关：前端工程化脚手架设计</h1><h2 id="_01-为什么需要前端工程化脚手架" tabindex="-1"><a class="header-anchor" href="#_01-为什么需要前端工程化脚手架" aria-hidden="true">#</a> 01: 为什么需要前端工程化脚手架？</h2><h3 id="背景" tabindex="-1"><a class="header-anchor" href="#背景" aria-hidden="true">#</a> 背景</h3><p>思考下面几个问题</p>',4),k=a("<li><p>前端项目为什么需要使用脚手架</p><ul><li>提供：创建项目、项目运行、项目框架、项目打包、项目发布等一系列能力，提升研发效率，简化复杂流程</li><li>如果我们没有脚手架时怎么使用 vue？ <ul><li>创建项目：拷贝或者下载项目模板 VS <strong>交互式项目创建</strong>（询问自主选择）</li><li>项目运行和打包：编写 webpack 配置、启动和启动脚本 VS <strong>项目脚手架自动启动和打包命令</strong></li><li>项目框架：手动完成 VUe 全家桶引入和框架搭建 VS <strong>自动生成框架模板代码</strong></li></ul></li></ul></li><li><p>Vue-Cli 和 CRA（Create-React-App）有什么局限</p><ul><li>只能解决本技术域的问题，不同技术域就需要生产不同的脚手架</li></ul></li>",2),d=n("p",null,"如果解决大前端团队底层工程链路的统一问题",-1),v=n("p",null,"技术栈",-1),m=n("p",null,"需要生产统一的工程化脚手架，解决项目创建、运行、打包、项目模板代码等问题",-1),b=a(`<h2 id="_02-深入脚手架的实现原理" tabindex="-1"><a class="header-anchor" href="#_02-深入脚手架的实现原理" aria-hidden="true">#</a> 02：深入脚手架的实现原理</h2><h3 id="什么是脚手架" tabindex="-1"><a class="header-anchor" href="#什么是脚手架" aria-hidden="true">#</a> 什么是脚手架</h3><ul><li>操作系统的可执行文件，可以通过 <code>C、C++、Java、JavaScript（Node.js）、Python、Ruby</code> 等各种语言编写</li></ul><h3 id="脚手架执行流程" tabindex="-1"><a class="header-anchor" href="#脚手架执行流程" aria-hidden="true">#</a> 脚手架执行流程</h3><ol><li><p>人工输入：<code>vue create vue-test-app </code></p></li><li><p>在环境变量 <code>$path</code>中查询 <code>vue</code> 命令（相当于执行<code>which vue</code>）</p></li><li><p>查询实际链接文件</p></li><li><p>通过<code>/usr/bin/env node</code> 执行文件</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token hashbang comment">#!/usr/bin/env node</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><p>这里需要理解几个基本概念</p><ul><li>环境变量（相当于操作系统级别的全局变量）</li><li>软连接（相当于 windows 系统的快捷方式）</li><li>这里：<code>vue、which、env、node</code>本质都是脚手架</li></ul><h3 id="脚手架的执行原理如下" tabindex="-1"><a class="header-anchor" href="#脚手架的执行原理如下" aria-hidden="true">#</a> 脚手架的执行原理如下</h3><ol><li>在终端中输入<code>vue create vue-test-app</code></li><li>终端解析出<code>vue</code>命令</li><li>终端在环境变量中找到<code>vue</code>命令</li><li>终端根据<code>vue</code>命令连接到实际文件<code>vue.js</code></li><li>终端利用<code>node</code>执行<code>vue.js</code></li><li><code>vue.js</code>解析<code>commmand/options</code></li><li><code>vue.js</code>执行<code>command</code></li><li>执行完毕，退出执行</li></ol><h2 id="_03-脚手架开发流程介绍" tabindex="-1"><a class="header-anchor" href="#_03-脚手架开发流程介绍" aria-hidden="true">#</a> 03：脚手架开发流程介绍</h2><h3 id="脚手架开发流程" tabindex="-1"><a class="header-anchor" href="#脚手架开发流程" aria-hidden="true">#</a> 脚手架开发流程</h3><ul><li><p>创建<code>npm</code>项目</p></li><li><p>创建脚手架入口文件，最上方添加</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/usr/bin/env node</span>
//（如果是 python 环境，node 改为 python 即可）
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>配置<code>package.json</code>，添加<code>bin</code>属性</p></li><li><p>编写脚手架代码</p></li><li><p>将脚手架发布到<code>npm</code></p></li></ul><h3 id="脚手架开发实例" tabindex="-1"><a class="header-anchor" href="#脚手架开发实例" aria-hidden="true">#</a> 脚手架开发实例</h3><ul><li><code>imooc-ls</code>文件浏览器</li><li><code>imooc-ls</code>信息打印</li></ul><h2 id="_04-快速搭建脚手架和脚手架本地调试方法" tabindex="-1"><a class="header-anchor" href="#_04-快速搭建脚手架和脚手架本地调试方法" aria-hidden="true">#</a> 04: 快速搭建脚手架和脚手架本地调试方法</h2><ol><li><p>创建文件夹<code>imooc-ls</code></p></li><li><p>执行初始化命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> init <span class="token parameter variable">-y</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>在<code>package.json</code>中增加<code>bin</code>属性</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token string-property property">&quot;bin&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;imooc-ls&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./bin/index.js&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>创建<code>bin/index.js</code>文件，内容如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token hashbang comment">#!/usr/bin/env node</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>我们此时执行<code>node bin/index.js</code>执行结果</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>hello
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>我们此时如果执行以下命令呢？</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./bin/index.js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ ./bin/index.js
zsh: permission denied: ./bin/index.js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>此时执行命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">link</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>创建成功后，我们可以进入</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>执行 <span class="token function">which</span> <span class="token function">node</span>
得到：/usr/local/bin/node
再次执行 <span class="token builtin class-name">cd</span> /usr/local/bin
得到 xx xxx xxx
再次执行 ll
就可以看到当前目录的链接，可以找到 imooc-ls

imooc-ls -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/lib/node_modules/imooc-ls/bin/index.js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>如果想删除这个链接</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> unlikn imooc-ls <span class="token parameter variable">-g</span>
// 可能需要 <span class="token function">sudo</span> 命令
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="_05-脚手架参数解析方法封装-1" tabindex="-1"><a class="header-anchor" href="#_05-脚手架参数解析方法封装-1" aria-hidden="true">#</a> 05：脚手架参数解析方法封装 1</h2><blockquote><p>比如 vue create hello-test，vue 命令后面有两个参数，那么我们该如何获取呢？</p></blockquote><ol><li><p>我们可以通过以下方式进行获取<code>process.argv</code></p></li><li><p>我们修改<code>bin/index.js</code>文件如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token hashbang comment">#!/usr/bin/env node</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>argv<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>我们执行<code>imooc-ls</code>,获取结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ imooc-ls
<span class="token punctuation">[</span> <span class="token string">&#39;/usr/local/bin/node&#39;</span>, <span class="token string">&#39;/usr/local/bin/imooc-ls&#39;</span> <span class="token punctuation">]</span> // 输出结果
$ imooc-ls <span class="token parameter variable">-a</span> <span class="token parameter variable">-l</span>
<span class="token punctuation">[</span> <span class="token string">&#39;/usr/local/bin/node&#39;</span>, <span class="token string">&#39;/usr/local/bin/imooc-ls&#39;</span>, <span class="token string">&#39;-a&#39;</span>, <span class="token string">&#39;-l&#39;</span> <span class="token punctuation">]</span> // 输出结果
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>我们继续修改<code>bin/index.js</code>,修改如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token hashbang comment">#!/usr/bin/env node</span>
<span class="token keyword">let</span> isAll <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token comment">// 对应 -a</span>
<span class="token keyword">let</span> isList <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token comment">// 对应 -l</span>
<span class="token keyword">const</span> args <span class="token operator">=</span> process<span class="token punctuation">.</span>argv<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
args<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">arg</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>arg<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    isAll <span class="token operator">=</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>arg<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;l&#39;</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    isList <span class="token operator">=</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>args<span class="token punctuation">,</span> isAll<span class="token punctuation">,</span> isList<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>这样我们执行以下过程，均可以获得相应的值</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ imooc-ls <span class="token parameter variable">-al</span>
<span class="token punctuation">[</span> <span class="token string">&#39;-al&#39;</span> <span class="token punctuation">]</span> <span class="token boolean">true</span> <span class="token boolean">true</span>

$ imooc-ls <span class="token parameter variable">-l</span> <span class="token parameter variable">-a</span>
<span class="token punctuation">[</span> <span class="token string">&#39;-l&#39;</span>, <span class="token string">&#39;-a&#39;</span> <span class="token punctuation">]</span> <span class="token boolean">true</span> <span class="token boolean">true</span>

$ imooc-ls <span class="token parameter variable">-l</span>
<span class="token punctuation">[</span> <span class="token string">&#39;-l&#39;</span> <span class="token punctuation">]</span> <span class="token boolean">false</span> <span class="token boolean">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>然后我们把这段代码封装为一个函数，以供扩展使用，新建<code>parseArgs.js</code>文件</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> isAll <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token comment">// 对应 -a</span>
  <span class="token keyword">let</span> isList <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token comment">// 对应 -l</span>
  <span class="token keyword">const</span> args <span class="token operator">=</span> process<span class="token punctuation">.</span>argv<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
  args<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">arg</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>arg<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      isAll <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>arg<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;l&#39;</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      isList <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    args<span class="token punctuation">,</span>
    isAll<span class="token punctuation">,</span>
    isList<span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>修改<code>index.js</code>如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token hashbang comment">#!/usr/bin/env node</span>
<span class="token keyword">const</span> parse <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./parseArgs.js&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> args<span class="token punctuation">,</span> isAll<span class="token punctuation">,</span> isList <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>args<span class="token punctuation">,</span> isAll<span class="token punctuation">,</span> isList<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>再次执行以下命令，结果如常</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ imooc-ls <span class="token parameter variable">-al</span>
<span class="token punctuation">[</span> <span class="token string">&#39;-al&#39;</span> <span class="token punctuation">]</span> <span class="token boolean">true</span> <span class="token boolean">true</span>

$ imooc-ls <span class="token parameter variable">-l</span> <span class="token parameter variable">-a</span>
<span class="token punctuation">[</span> <span class="token string">&#39;-l&#39;</span>, <span class="token string">&#39;-a&#39;</span> <span class="token punctuation">]</span> <span class="token boolean">true</span> <span class="token boolean">true</span>

$ imooc-ls <span class="token parameter variable">-l</span>
<span class="token punctuation">[</span> <span class="token string">&#39;-l&#39;</span> <span class="token punctuation">]</span> <span class="token boolean">false</span> <span class="token boolean">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="_06-imooc-ls-脚手架遍历文件功能实现" tabindex="-1"><a class="header-anchor" href="#_06-imooc-ls-脚手架遍历文件功能实现" aria-hidden="true">#</a> 06: imooc-ls 脚手架遍历文件功能实现</h2><ol><li><p>修改<code>index.js</code>内容如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token hashbang comment">#!/usr/bin/env node</span>
<span class="token keyword">const</span> parse <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./parseArgs.js&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 引入 fs 模块</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> args<span class="token punctuation">,</span> isAll<span class="token punctuation">,</span> isList <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> dir <span class="token operator">=</span> process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>args<span class="token punctuation">,</span> isAll<span class="token punctuation">,</span> isList<span class="token punctuation">)</span>
<span class="token comment">// 增加以下内容</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isAll <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>isList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> files <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readdirSync</span><span class="token punctuation">(</span>dir<span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>此时在<code>imooc-ls</code>文件夹中执行<code>imooc-ls</code>就会出现以下内容</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yuangao at yuandeMac-mini <span class="token keyword">in</span> ~/Desktop/imooc-ls  // 这是所在目录
$ imooc-ls // 执行这个命令
<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token boolean">false</span> <span class="token boolean">false</span> // 得到的打印结果 console.log<span class="token punctuation">(</span>args, isAll, isList<span class="token punctuation">)</span>
<span class="token punctuation">[</span> <span class="token string">&#39;bin&#39;</span>, <span class="token string">&#39;package-lock.json&#39;</span>, <span class="token string">&#39;package.json&#39;</span> <span class="token punctuation">]</span> // 得到的打印结果  console.log<span class="token punctuation">(</span>files<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>继续修改<code>index.js</code>过滤掉，以.开头的隐藏文件</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token hashbang comment">#!/usr/bin/env node</span>
<span class="token keyword">const</span> parse <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./parseArgs.js&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 引入 fs 模块</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> args<span class="token punctuation">,</span> isAll<span class="token punctuation">,</span> isList <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> dir <span class="token operator">=</span> process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// 增加以下内容</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isAll <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>isList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">//  遍历当前文件夹下的所有文件（这里并没有判断它是文件还是文件夹，后续会处理，并排除以.开头的文件或者文件夹）</span>
  <span class="token keyword">let</span> files <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readdirSync</span><span class="token punctuation">(</span>dir<span class="token punctuation">)</span>
  files <span class="token operator">=</span> files<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> file<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token keyword">let</span> output <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
  files<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>output <span class="token operator">+=</span> file <span class="token operator">+</span> <span class="token string">&#39;              &#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>再次执行命令,我们就实现了和<code>ls</code>一样的效果，如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yuangao at yuandeMac-mini <span class="token keyword">in</span> ~/Desktop/imooc-ls
$ <span class="token function">ls</span>
bin               package-lock.json package.json

yuangao at yuandeMac-mini <span class="token keyword">in</span> ~/Desktop/imooc-ls
$ imooc-ls
package-lock.json              package.json
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="_07-imooc-ls支持查询全部文件和列表渲染模式" tabindex="-1"><a class="header-anchor" href="#_07-imooc-ls支持查询全部文件和列表渲染模式" aria-hidden="true">#</a> 07： imooc-ls支持查询全部文件和列表渲染模式</h2><blockquote><p>下面实现第二种模式：ls -a 显示包含以.开头的隐藏文件</p><p>gaoyuan@gaoyuandeMac bin % ls -a</p><p>. .. index.js parseArgs.js</p></blockquote><ol><li><p>修改<code>index.js</code>内容如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> output <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
<span class="token keyword">let</span> files <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readdirSync</span><span class="token punctuation">(</span>dir<span class="token punctuation">)</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>isAll <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>isList<span class="token punctuation">)</span><span class="token punctuation">{</span>
  
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>isAll <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>isList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  files<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>output <span class="token operator">+=</span> file <span class="token operator">+</span> <span class="token string">&#39;              &#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>目前我们没有隐藏文件，可以新建一个<code>.prettierrc.json</code>，内容如下</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;singleQuote&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;semi&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>再次执行以下命令，查看差异</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gaoyuan@gaoyuandeMac imooc-ls % <span class="token function">ls</span>   
bin		package.json
gaoyuan@gaoyuandeMac imooc-ls % <span class="token function">ls</span> <span class="token parameter variable">-a</span>
<span class="token builtin class-name">.</span>			.DS_Store		bin
<span class="token punctuation">..</span>			.prettierrc.json	package.json


gaoyuan@gaoyuandeMac imooc-ls % imooc-ls
package.json              
gaoyuan@gaoyuandeMac imooc-ls % imooc-ls <span class="token parameter variable">-a</span>
.DS_Store              .prettierrc.json              bin              package.json              
gaoyuan@gaoyuandeMac imooc-ls % 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><blockquote><p>接着我们来实现 ls -l 的功能</p><p>gaoyuan@gaoyuandeMac imooc-ls % ls -l</p><p>total 8</p><p>drwxr-xr-x 4 gaoyuan staff 128 4 21 10:07 bin</p><p>-rwxr-xr-x 1 gaoyuan staff 250 4 21 10:10 package.json</p></blockquote><ol><li><p>对于目前<code>index.js</code>中的内容，我们可以做如下抽象优化，最终代码如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> parse <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./parseArgs.js&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> args<span class="token punctuation">,</span> isAll<span class="token punctuation">,</span> isList <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> dir <span class="token operator">=</span> process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> output <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
<span class="token keyword">let</span> files <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readdirSync</span><span class="token punctuation">(</span>dir<span class="token punctuation">)</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isAll<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  files <span class="token operator">=</span> files<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> file<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  files<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>output <span class="token operator">+=</span> file <span class="token operator">+</span> <span class="token string">&#39;              &#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  files<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">file<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    output <span class="token operator">+=</span> file <span class="token operator">+</span> <span class="token punctuation">(</span>index <span class="token operator">===</span> files<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token string">&#39;&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>再次执行以下命令，可以得到下面结果</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gaoyuan@gaoyuandeMac imooc-ls % imooc-ls <span class="token parameter variable">-al</span>
.DS_Store
.prettierrc.json
bin
package.json

// 系统的
gaoyuan@gaoyuandeMac imooc-ls % <span class="token function">ls</span> <span class="token parameter variable">-al</span>
total <span class="token number">32</span>
drwxr-xr-x@  <span class="token number">6</span> gaoyuan  staff   <span class="token number">192</span>  <span class="token number">4</span> <span class="token number">21</span> <span class="token number">10</span>:18 <span class="token builtin class-name">.</span>
drwx------@ <span class="token number">24</span> gaoyuan  staff   <span class="token number">768</span>  <span class="token number">4</span> <span class="token number">21</span> 09:26 <span class="token punctuation">..</span>
-rwxr-xr-x@  <span class="token number">1</span> gaoyuan  staff  <span class="token number">6148</span>  <span class="token number">4</span> <span class="token number">21</span> <span class="token number">10</span>:16 .DS_Store
-rw-r--r--   <span class="token number">1</span> gaoyuan  staff    <span class="token number">42</span>  <span class="token number">4</span> <span class="token number">21</span> <span class="token number">10</span>:18 .prettierrc.json
drwxr-xr-x   <span class="token number">4</span> gaoyuan  staff   <span class="token number">128</span>  <span class="token number">4</span> <span class="token number">21</span> <span class="token number">10</span>:07 bin
-rwxr-xr-x   <span class="token number">1</span> gaoyuan  staff   <span class="token number">250</span>  <span class="token number">4</span> <span class="token number">21</span> <span class="token number">10</span>:10 package.json
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>上述可以看到，我们系统<code>ls- al</code>和<code>imooc-ls -al</code>结果上还是有一定差异的</p></li></ol><h2 id="_08-深入讲解macos-含linux-文件权限体系" tabindex="-1"><a class="header-anchor" href="#_08-深入讲解macos-含linux-文件权限体系" aria-hidden="true">#</a> 08: 深入讲解MacOS（含Linux）文件权限体系</h2><p>推荐阅读</p>`,28),g={href:"https://zhuanlan.zhihu.com/p/64008541",target:"_blank",rel:"noopener noreferrer"},f={href:"https://blog.csdn.net/weixin_44824500/article/details/109370750",target:"_blank",rel:"noopener noreferrer"},y=a(`<blockquote><p>unix、Linux、MacOs 文件权限体系</p><p>drwxr-xr-x 4 gaoyuan staff 128 4 21 10:07 bin 这是 bin 目录的一个权限</p><p>-rwxr-xr-x 1 gaoyuan staff 250 4 21 10:10 package.json</p><p>r: 访问 w: 编辑 x：执行</p><p>u: 当前登录用户（user），g:当前登录用户所在分组(group)，o：其他分组/用户(other)</p><p>drwxr-xr-- 2 root root 6 Mar 9 01:37 test #讲解：第一个d是文件类型，后面9位3个为一组</p></blockquote><p><img src="https://pic2.zhimg.com/80/v2-4939f396ef7ed364d6ba6c812accd941_720w.webp" alt="img"></p><p>如：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>-rwxr-xr-x   <span class="token number">1</span> gaoyuan  staff   <span class="token number">250</span>  <span class="token number">4</span> <span class="token number">21</span> <span class="token number">10</span>:10 package.json
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>我们可以看到当前用户，有 rwx三个功能，执行以下操作可以加减权限</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>// 减去 当前用户的访问权限
gaoyuan@gaoyuandeMac imooc-ls % <span class="token function">chmod</span> <span class="token parameter variable">-r</span> package.json 
gaoyuan@gaoyuandeMac imooc-ls % <span class="token function">ls</span> <span class="token parameter variable">-al</span>
total <span class="token number">32</span>
drwxr-xr-x@  <span class="token number">6</span> gaoyuan  staff   <span class="token number">192</span>  <span class="token number">4</span> <span class="token number">21</span> <span class="token number">10</span>:18 <span class="token builtin class-name">.</span>
drwx------@ <span class="token number">24</span> gaoyuan  staff   <span class="token number">768</span>  <span class="token number">4</span> <span class="token number">21</span> 09:26 <span class="token punctuation">..</span>
-rwxr-xr-x@  <span class="token number">1</span> gaoyuan  staff  <span class="token number">6148</span>  <span class="token number">4</span> <span class="token number">21</span> <span class="token number">10</span>:16 .DS_Store
-rw-r--r--   <span class="token number">1</span> gaoyuan  staff    <span class="token number">42</span>  <span class="token number">4</span> <span class="token number">21</span> <span class="token number">10</span>:18 .prettierrc.json
drwxr-xr-x   <span class="token number">4</span> gaoyuan  staff   <span class="token number">128</span>  <span class="token number">4</span> <span class="token number">21</span> <span class="token number">10</span>:07 bin
--wx--x--x   <span class="token number">1</span> gaoyuan  staff   <span class="token number">250</span>  <span class="token number">4</span> <span class="token number">21</span> <span class="token number">10</span>:10 package.json

// 查看这个文件就会报错：权限不足
gaoyuan@gaoyuandeMac imooc-ls % <span class="token function">cat</span> package.json 
cat: package.json: Permission denied

// 增加阅读权限
gaoyuan@gaoyuandeMac imooc-ls % <span class="token function">chmod</span> +r package.json
gaoyuan@gaoyuandeMac imooc-ls % <span class="token function">ls</span> <span class="token parameter variable">-al</span>               
total <span class="token number">32</span>
drwxr-xr-x@  <span class="token number">6</span> gaoyuan  staff   <span class="token number">192</span>  <span class="token number">4</span> <span class="token number">21</span> <span class="token number">10</span>:18 <span class="token builtin class-name">.</span>
drwx------@ <span class="token number">24</span> gaoyuan  staff   <span class="token number">768</span>  <span class="token number">4</span> <span class="token number">21</span> 09:26 <span class="token punctuation">..</span>
-rwxr-xr-x@  <span class="token number">1</span> gaoyuan  staff  <span class="token number">6148</span>  <span class="token number">4</span> <span class="token number">21</span> <span class="token number">10</span>:16 .DS_Store
-rw-r--r--   <span class="token number">1</span> gaoyuan  staff    <span class="token number">42</span>  <span class="token number">4</span> <span class="token number">21</span> <span class="token number">10</span>:18 .prettierrc.json
drwxr-xr-x   <span class="token number">4</span> gaoyuan  staff   <span class="token number">128</span>  <span class="token number">4</span> <span class="token number">21</span> <span class="token number">10</span>:07 bin
-rwxr-xr-x   <span class="token number">1</span> gaoyuan  staff   <span class="token number">250</span>  <span class="token number">4</span> <span class="token number">21</span> <span class="token number">10</span>:10 package.json
// 执行查看文件，可以正常查看
gaoyuan@gaoyuandeMac imooc-ls % <span class="token function">cat</span> package.json 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>那么<code>Node.js</code>如何获取文件类型和权限呢？</p><h2 id="_09-解析macos-含linux-文件类型和权限存储原理" tabindex="-1"><a class="header-anchor" href="#_09-解析macos-含linux-文件类型和权限存储原理" aria-hidden="true">#</a> 09：解析MacOS（含Linux）文件类型和权限存储原理</h2><ul><li>Unix 使用 32位二进制数存储文件类型和权限 <ul><li>在 UNIX 文件系统中，文件类型和权限被编码为一个 32 位的二进制数，其中前 16 位表示文件类型，后 16 位表示文件权限。下面是这个 32 位数的详细解释：</li><li>文件类型： <ul><li>前 4 位（高位）表示文件类型，例如：普通文件、目录、符号链接等等。</li><li>中间 12 位表示一些特定的文件类型和子类型，例如：字符设备、块设备、套接字等等。</li><li>后 4 位（低位）保留。</li></ul></li><li>文件权限： <ul><li>前 9 位表示文件的访问权限，分别为读、写、执行权限，其中每一位为 1 表示允许该操作，为 0 表示禁止该操作。</li><li>后 7 位表示其他一些特殊的权限标志，例如：设置用户 ID、设置组 ID、粘着位等等。</li></ul></li></ul></li></ul><h2 id="参考链接" tabindex="-1"><a class="header-anchor" href="#参考链接" aria-hidden="true">#</a> 参考链接</h2>`,10),h={href:"https://juejin.cn/post/6844903668504854535",target:"_blank",rel:"noopener noreferrer"},w=a(`<h2 id="_10-应用fs-stat的mode属性获取文件类型" tabindex="-1"><a class="header-anchor" href="#_10-应用fs-stat的mode属性获取文件类型" aria-hidden="true">#</a> 10：应用fs.Stat的mode属性获取文件类型</h2><ol><li><p>修改<code>index.js</code>文件内容如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// index.js</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  
<span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
  files<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">file<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>  
    <span class="token comment">// 增加这一行</span>
    <span class="token keyword">const</span> stat <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">statSync</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span>
  	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> stat<span class="token punctuation">)</span>
    <span class="token operator">...</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>我们重新运行<code>imooc-ls</code>试试，查看打印结果</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>// 这里文件较多，我们只复制 package.json 的信息如下：
package.json Stats <span class="token punctuation">{</span>
  dev: <span class="token number">16777220</span>,
  mode: <span class="token number">33261</span>,
  nlink: <span class="token number">1</span>,
  uid: <span class="token number">501</span>,
  gid: <span class="token number">20</span>,
  rdev: <span class="token number">0</span>,
  blksize: <span class="token number">4096</span>,
  ino: <span class="token number">12895078648</span>,
  size: <span class="token number">250</span>,
  blocks: <span class="token number">8</span>,
  atimeMs: <span class="token number">1682043018304.4077</span>,
  mtimeMs: <span class="token number">1682043017983.716</span>,
  ctimeMs: <span class="token number">1682047502675.9448</span>,
  birthtimeMs: <span class="token number">1682040419303.1807</span>,
  atime: <span class="token number">2023</span>-04-21T02:10:18.304Z,
  mtime: <span class="token number">2023</span>-04-21T02:10:17.984Z,
  ctime: <span class="token number">2023</span>-04-21T03:25:02.676Z,
  birthtime: <span class="token number">2023</span>-04-21T01:26:59.303Z
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>这里我们着重关注其中的<code>mode</code>属性</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>packages.json mode: <span class="token number">33261</span> 转换为二近制数是：1000 0001 <span class="token number">1110</span> <span class="token number">1101</span>
bin mode: <span class="token number">16877</span> <span class="token operator">=</span><span class="token operator">&gt;</span> 转换为二进制数是：0100 0001 <span class="token number">1110</span> <span class="token number">1101</span>

我们可以用 stat.isDirectory<span class="token punctuation">(</span><span class="token punctuation">)</span> 来进行判断是否是一个文件夹
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>我们继续修改<code>index.js</code>,内容如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// index.js</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  
<span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
  files<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">file<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>  
    <span class="token comment">// 增加这一行</span>
    <span class="token keyword">const</span> stat <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">statSync</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span>
    <span class="token operator">...</span><span class="token keyword">const</span> mode <span class="token operator">=</span> stat<span class="token punctuation">.</span>mode
    <span class="token keyword">const</span> isDir <span class="token operator">=</span> mode <span class="token operator">&amp;</span> fs<span class="token punctuation">.</span>constants<span class="token punctuation">.</span><span class="token constant">S_IFDIR</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> mode<span class="token punctuation">,</span> stat<span class="token punctuation">.</span><span class="token function">isDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> isDir <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">,</span> fs<span class="token punctuation">.</span>constants<span class="token punctuation">.</span><span class="token constant">S_IFDIR</span><span class="token punctuation">)</span>
    output <span class="token operator">+=</span> file <span class="token operator">+</span> <span class="token punctuation">(</span>index <span class="token operator">===</span> files<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token string">&#39;&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>再次执行<code>imoooc-ls -la</code>，结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gaoyuan@gaoyuandeMac imooc-ls % imooc-ls <span class="token parameter variable">-la</span>
.DS_Store <span class="token number">33261</span> <span class="token boolean">false</span> <span class="token boolean">false</span> <span class="token number">16384</span>
.prettierrc.json <span class="token number">33188</span> <span class="token boolean">false</span> <span class="token boolean">false</span> <span class="token number">16384</span>
bin <span class="token number">16877</span> <span class="token boolean">true</span> <span class="token boolean">true</span> <span class="token number">16384</span>
package.json <span class="token number">33261</span> <span class="token boolean">false</span> <span class="token boolean">false</span> <span class="token number">16384</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>这里稍微解释下 16384 这个值</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token number">16384</span> 转换为二进制就是：<span class="token number">0100</span> <span class="token number">0000</span> <span class="token number">0000</span> <span class="token number">0000</span>
<span class="token comment">// 同样的还是有 isFile 判断</span>
<span class="token keyword">const</span> isFile <span class="token operator">=</span> mode <span class="token operator">&amp;</span> fs<span class="token punctuation">.</span>constants<span class="token punctuation">.</span><span class="token constant">S_IFREG</span>

fs<span class="token punctuation">.</span>constants<span class="token punctuation">.</span><span class="token constant">S_IFREG</span><span class="token operator">:</span> <span class="token number">32768</span> 转换为二进制是：<span class="token number">1000</span> <span class="token number">0000</span> <span class="token number">0000</span> <span class="token number">0000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="_11-使用与运算-获取文件权限" tabindex="-1"><a class="header-anchor" href="#_11-使用与运算-获取文件权限" aria-hidden="true">#</a> 11： 使用与运算（&amp;）获取文件权限</h2><p>我们分析，</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>packages<span class="token punctuation">.</span>json mode<span class="token operator">:</span> <span class="token number">33261</span> 转换为二近制数是：<span class="token number">1000</span> <span class="token number">0001</span> <span class="token number">1110</span> <span class="token number">1101</span>
bin mode<span class="token operator">:</span> <span class="token number">16877</span> <span class="token operator">=&gt;</span> 转换为二进制数是：<span class="token number">0100</span> <span class="token number">0001</span> <span class="token number">1110</span> <span class="token number">1101</span>

packages<span class="token punctuation">.</span>json 最后九位分为三组分别是：<span class="token number">1000</span> <span class="token number">000</span> <span class="token number">111</span> <span class="token number">101</span> <span class="token number">101</span>：（<span class="token number">111</span> <span class="token number">101</span> <span class="token number">101</span>）文件权限主要看后三组，那么分别对应rwx的能力那就是：rwx r<span class="token operator">-</span>x r<span class="token operator">-</span>x
同理，bin 对应的后三组是 <span class="token number">111</span> <span class="token number">101</span> <span class="token number">101</span> rwx r<span class="token operator">-</span>x r<span class="token operator">-</span>x

我们在终端中执行 ls <span class="token operator">-</span>la 查看结果：文件权限结果对应一致
drwxr<span class="token operator">-</span>xr<span class="token operator">-</span>x   <span class="token number">4</span> gaoyuan  staff   <span class="token number">128</span>  <span class="token number">4</span> <span class="token number">21</span> <span class="token number">10</span><span class="token operator">:</span><span class="token number">07</span> bin
<span class="token operator">-</span>rwxr<span class="token operator">-</span>xr<span class="token operator">-</span>x   <span class="token number">1</span> gaoyuan  staff   <span class="token number">250</span>  <span class="token number">4</span> <span class="token number">21</span> <span class="token number">10</span><span class="token operator">:</span><span class="token number">10</span> <span class="token keyword">package</span><span class="token punctuation">.</span>json
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>那么，我们就可以根据以上原理在代码中增加响应逻辑，如下</p><ol><li><p>新建 <code>bin/getFileType.js</code> 文件，负责输出文件类型的字符串，内容如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>
module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">getFileType</span><span class="token punctuation">(</span><span class="token parameter">mode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// console.log(fs.constants.S_IFLNK) // 40960</span>
	<span class="token comment">// console.log(fs.constants.S_IFREG) // 32768</span>
	<span class="token comment">// console.log(fs.constants.S_IFDIR) // 16384</span>
  <span class="token keyword">const</span> isDirectory <span class="token operator">=</span> <span class="token punctuation">(</span>mode <span class="token operator">&amp;</span> fs<span class="token punctuation">.</span>constants<span class="token punctuation">.</span><span class="token constant">S_IFDIR</span><span class="token punctuation">)</span> <span class="token operator">===</span> fs<span class="token punctuation">.</span>constants<span class="token punctuation">.</span><span class="token constant">S_IFDIR</span>
  <span class="token keyword">const</span> isFile <span class="token operator">=</span> <span class="token punctuation">(</span>mode <span class="token operator">&amp;</span> fs<span class="token punctuation">.</span>constants<span class="token punctuation">.</span><span class="token constant">S_IFREG</span><span class="token punctuation">)</span> <span class="token operator">===</span> fs<span class="token punctuation">.</span>constants<span class="token punctuation">.</span><span class="token constant">S_IFREG</span>
  <span class="token keyword">const</span> isLink <span class="token operator">=</span> <span class="token punctuation">(</span>mode <span class="token operator">&amp;</span> fs<span class="token punctuation">.</span>constants<span class="token punctuation">.</span><span class="token constant">S_IFLNK</span><span class="token punctuation">)</span> <span class="token operator">===</span> fs<span class="token punctuation">.</span>constants<span class="token punctuation">.</span><span class="token constant">S_IFLNK</span>
	<span class="token comment">// 注意：这里 link 类型的也是一个文件，所以 link 类型要先进行判断返回</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>isDirectory<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&#39;d&#39;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>isLink<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&#39;l&#39;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>isFile<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&#39;-&#39;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&#39;-&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>新建<code>bin/auth.js</code>文件，负责输出文件权限相关字符串，内容如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// 这个函数根据 mode 获得 权限组</span>
module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">auth</span><span class="token punctuation">(</span><span class="token parameter">mode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> authString <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
  <span class="token comment">// 先判断 user 的权限 r w x</span>
  <span class="token keyword">const</span> canUsrRead <span class="token operator">=</span> mode <span class="token operator">&amp;</span> fs<span class="token punctuation">.</span>constants<span class="token punctuation">.</span><span class="token constant">S_IRUSR</span>
  <span class="token keyword">const</span> canUsrWrite <span class="token operator">=</span> mode <span class="token operator">&amp;</span> fs<span class="token punctuation">.</span>constants<span class="token punctuation">.</span><span class="token constant">S_IWUSR</span>
  <span class="token keyword">const</span> canUsrExecute <span class="token operator">=</span> mode <span class="token operator">&amp;</span> fs<span class="token punctuation">.</span>constants<span class="token punctuation">.</span><span class="token constant">S_IXUSR</span>
  canUsrRead <span class="token operator">?</span> <span class="token punctuation">(</span>authString <span class="token operator">+=</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>authString <span class="token operator">+=</span> <span class="token string">&#39;-&#39;</span><span class="token punctuation">)</span>
  canUsrWrite <span class="token operator">?</span> <span class="token punctuation">(</span>authString <span class="token operator">+=</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>authString <span class="token operator">+=</span> <span class="token string">&#39;-&#39;</span><span class="token punctuation">)</span>
  canUsrExecute <span class="token operator">?</span> <span class="token punctuation">(</span>authString <span class="token operator">+=</span> <span class="token string">&#39;x&#39;</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>authString <span class="token operator">+=</span> <span class="token string">&#39;-&#39;</span><span class="token punctuation">)</span>
  <span class="token comment">// 接着判断 group 的权限 r w x</span>
  <span class="token keyword">const</span> canGroupRead <span class="token operator">=</span> mode <span class="token operator">&amp;</span> fs<span class="token punctuation">.</span>constants<span class="token punctuation">.</span><span class="token constant">S_IRGRP</span>
  <span class="token keyword">const</span> canGroupWrite <span class="token operator">=</span> mode <span class="token operator">&amp;</span> fs<span class="token punctuation">.</span>constants<span class="token punctuation">.</span><span class="token constant">S_IWGRP</span>
  <span class="token keyword">const</span> canGroupExecute <span class="token operator">=</span> mode <span class="token operator">&amp;</span> fs<span class="token punctuation">.</span>constants<span class="token punctuation">.</span><span class="token constant">S_IXGRP</span>
  canGroupRead <span class="token operator">?</span> <span class="token punctuation">(</span>authString <span class="token operator">+=</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>authString <span class="token operator">+=</span> <span class="token string">&#39;-&#39;</span><span class="token punctuation">)</span>
  canGroupWrite <span class="token operator">?</span> <span class="token punctuation">(</span>authString <span class="token operator">+=</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>authString <span class="token operator">+=</span> <span class="token string">&#39;-&#39;</span><span class="token punctuation">)</span>
  canGroupExecute <span class="token operator">?</span> <span class="token punctuation">(</span>authString <span class="token operator">+=</span> <span class="token string">&#39;x&#39;</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>authString <span class="token operator">+=</span> <span class="token string">&#39;-&#39;</span><span class="token punctuation">)</span>
  <span class="token comment">// 接着判断 other 的权限 r w x</span>
  <span class="token keyword">const</span> canOtherRead <span class="token operator">=</span> mode <span class="token operator">&amp;</span> fs<span class="token punctuation">.</span>constants<span class="token punctuation">.</span><span class="token constant">S_IROTH</span>
  <span class="token keyword">const</span> canOtherWrite <span class="token operator">=</span> mode <span class="token operator">&amp;</span> fs<span class="token punctuation">.</span>constants<span class="token punctuation">.</span><span class="token constant">S_IWOTH</span>
  <span class="token keyword">const</span> canOtherExecute <span class="token operator">=</span> mode <span class="token operator">&amp;</span> fs<span class="token punctuation">.</span>constants<span class="token punctuation">.</span><span class="token constant">S_IXOTH</span>
  canOtherRead <span class="token operator">?</span> <span class="token punctuation">(</span>authString <span class="token operator">+=</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>authString <span class="token operator">+=</span> <span class="token string">&#39;-&#39;</span><span class="token punctuation">)</span>
  canOtherWrite <span class="token operator">?</span> <span class="token punctuation">(</span>authString <span class="token operator">+=</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>authString <span class="token operator">+=</span> <span class="token string">&#39;-&#39;</span><span class="token punctuation">)</span>
  canOtherExecute <span class="token operator">?</span> <span class="token punctuation">(</span>authString <span class="token operator">+=</span> <span class="token string">&#39;x&#39;</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>authString <span class="token operator">+=</span> <span class="token string">&#39;-&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> authString
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>index.js</code>引入以上文件，最终结果如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token hashbang comment">#!/usr/bin/env node</span>
<span class="token keyword">const</span> parse <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./parseArgs.js&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// 引入 auth、getFileType</span>
<span class="token keyword">const</span> auth <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./auth.js&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> getFileType <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./getFileType.js&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> args<span class="token punctuation">,</span> isAll<span class="token punctuation">,</span> isList <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> dir <span class="token operator">=</span> process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> output <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
<span class="token keyword">let</span> files <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readdirSync</span><span class="token punctuation">(</span>dir<span class="token punctuation">)</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isAll<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  files <span class="token operator">=</span> files<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> file<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  files<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>output <span class="token operator">+=</span> file <span class="token operator">+</span> <span class="token string">&#39;              &#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  files<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">file<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> stat <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">statSync</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span>
    <span class="token keyword">const</span> mode <span class="token operator">=</span> stat<span class="token punctuation">.</span>mode
    <span class="token keyword">const</span> authString <span class="token operator">=</span> <span class="token function">auth</span><span class="token punctuation">(</span>mode<span class="token punctuation">)</span>
    <span class="token keyword">const</span> fileType <span class="token operator">=</span> <span class="token function">getFileType</span><span class="token punctuation">(</span>mode<span class="token punctuation">)</span>
    output <span class="token operator">+=</span>
      fileType <span class="token operator">+</span>
      authString <span class="token operator">+</span>
      <span class="token string">&#39;\\t&#39;</span> <span class="token operator">+</span>
      file <span class="token operator">+</span>
      <span class="token punctuation">(</span>index <span class="token operator">===</span> files<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token string">&#39;&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>回到终端中我们输入命令，可以得到以下结果</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>// 先用 系统命令，得到如下结果，方便后续作对比
gaoyuan@gaoyuandeMac imooc-ls % <span class="token function">ls</span> <span class="token parameter variable">-la</span>
total <span class="token number">32</span>
drwxr-xr-x@  <span class="token number">6</span> gaoyuan  staff   <span class="token number">192</span>  <span class="token number">4</span> <span class="token number">21</span> <span class="token number">10</span>:18 <span class="token builtin class-name">.</span>
drwx------@ <span class="token number">24</span> gaoyuan  staff   <span class="token number">768</span>  <span class="token number">4</span> <span class="token number">21</span> 09:26 <span class="token punctuation">..</span>
-rwxr-xr-x@  <span class="token number">1</span> gaoyuan  staff  <span class="token number">6148</span>  <span class="token number">4</span> <span class="token number">21</span> <span class="token number">10</span>:16 .DS_Store
-rw-r--r--   <span class="token number">1</span> gaoyuan  staff    <span class="token number">42</span>  <span class="token number">4</span> <span class="token number">21</span> <span class="token number">10</span>:18 .prettierrc.json
drwxr-xr-x   <span class="token number">6</span> gaoyuan  staff   <span class="token number">192</span>  <span class="token number">4</span> <span class="token number">21</span> <span class="token number">14</span>:39 bin
-rwxr-xr-x   <span class="token number">1</span> gaoyuan  staff   <span class="token number">250</span>  <span class="token number">4</span> <span class="token number">21</span> <span class="token number">10</span>:10 package.json

// 执行我们自己的命令
gaoyuan@gaoyuandeMac imooc-ls % imooc-ls <span class="token parameter variable">-la</span>
-rwxr-xr-x	.DS_Store
-rw-r--r--	.prettierrc.json
drwxr-xr-x	bin
-rwxr-xr-x	package.json

可以看到权限列表一一对应无误
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="_12-应用id命令获取用户信息" tabindex="-1"><a class="header-anchor" href="#_12-应用id命令获取用户信息" aria-hidden="true">#</a> 12：应用id命令获取用户信息</h2><ol><li><p>这里我们需要用到 <code>id</code> 这个命令</p></li><li><p>我们可以在终端执行以下代码获取相关信息</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gaoyuan@gaoyuandeMac imooc-ls % <span class="token function">which</span> <span class="token function">id</span>
/usr/bin/id

gaoyuan@gaoyuandeMac imooc-ls % <span class="token function">id</span> 
<span class="token assign-left variable">uid</span><span class="token operator">=</span><span class="token number">501</span><span class="token punctuation">(</span>gaoyuan<span class="token punctuation">)</span> <span class="token assign-left variable">gid</span><span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">(</span>staff<span class="token punctuation">)</span> <span class="token assign-left variable">groups</span><span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">(</span>staff<span class="token punctuation">)</span>,12<span class="token punctuation">(</span>everyone<span class="token punctuation">)</span>,61<span class="token punctuation">(</span>localaccounts<span class="token punctuation">)</span>,79<span class="token punctuation">(</span>_appserverusr<span class="token punctuation">)</span>,80<span class="token punctuation">(</span>admin<span class="token punctuation">)</span>,81<span class="token punctuation">(</span>_appserveradm<span class="token punctuation">)</span>,98<span class="token punctuation">(</span>_lpadmin<span class="token punctuation">)</span>,33<span class="token punctuation">(</span>_appstore<span class="token punctuation">)</span>,100<span class="token punctuation">(</span>_lpoperator<span class="token punctuation">)</span>,204<span class="token punctuation">(</span>_developer<span class="token punctuation">)</span>,250<span class="token punctuation">(</span>_analyticsusers<span class="token punctuation">)</span>,395<span class="token punctuation">(</span>com.apple.access_ftp<span class="token punctuation">)</span>,398<span class="token punctuation">(</span>com.apple.access_screensharing<span class="token punctuation">)</span>,399<span class="token punctuation">(</span>com.apple.access_ssh<span class="token punctuation">)</span>,400<span class="token punctuation">(</span>com.apple.access_remote_ae<span class="token punctuation">)</span>,701<span class="token punctuation">(</span>com.apple.sharepoint.group.1<span class="token punctuation">)</span>

gaoyuan@gaoyuandeMac imooc-ls % <span class="token function">id</span> <span class="token parameter variable">-un</span> <span class="token number">501</span>
gaoyuan

gaoyuan@gaoyuandeMac imooc-ls % <span class="token function">id</span> <span class="token parameter variable">-gn</span> <span class="token number">501</span>
staff
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>这里我们需要重新开一个进程开运行 <code>id</code> 命令以便获取用户名称等</p></li><li><p>接着我们新建<code>bin/getFileUser.js</code>文件，内容如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> cp <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;child_process&#39;</span><span class="token punctuation">)</span>

module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">getFileUser</span><span class="token punctuation">(</span><span class="token parameter">stat</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> uid<span class="token punctuation">,</span> gid <span class="token punctuation">}</span> <span class="token operator">=</span> stat
  <span class="token keyword">const</span> userName <span class="token operator">=</span> cp
    <span class="token punctuation">.</span><span class="token function">execSync</span><span class="token punctuation">(</span><span class="token string">&#39;id -un &#39;</span> <span class="token operator">+</span> uid<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> groupIdsStr <span class="token operator">=</span> cp
    <span class="token punctuation">.</span><span class="token function">execSync</span><span class="token punctuation">(</span><span class="token string">&#39;id -G &#39;</span> <span class="token operator">+</span> uid<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> groupIds <span class="token operator">=</span> groupIdsStr<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> groupIdsNameStr <span class="token operator">=</span> cp
    <span class="token punctuation">.</span><span class="token function">execSync</span><span class="token punctuation">(</span><span class="token string">&#39;id -Gn &#39;</span> <span class="token operator">+</span> uid<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token keyword">const</span> groupIdsName <span class="token operator">=</span> groupIdsNameStr<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> index <span class="token operator">=</span> groupIds<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">+</span>id <span class="token operator">===</span> <span class="token operator">+</span>gid<span class="token punctuation">)</span>
  <span class="token keyword">const</span> groupName <span class="token operator">=</span> groupIdsName<span class="token punctuation">[</span>index<span class="token punctuation">]</span>

  <span class="token keyword">return</span> userName <span class="token operator">+</span> <span class="token string">&#39;\\t&#39;</span> <span class="token operator">+</span> groupName
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>index.js</code>中进行引用</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token hashbang comment">#!/usr/bin/env node</span>
<span class="token keyword">const</span> parse <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./parseArgs.js&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> auth <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./auth.js&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> getFileType <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./getFileType.js&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// 引用 getFuleUser</span>
<span class="token keyword">const</span> getFileUser <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./getFileUser.js&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> args<span class="token punctuation">,</span> isAll<span class="token punctuation">,</span> isList <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> dir <span class="token operator">=</span> process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> output <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
<span class="token keyword">let</span> files <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readdirSync</span><span class="token punctuation">(</span>dir<span class="token punctuation">)</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isAll<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  files <span class="token operator">=</span> files<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> file<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  files<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>output <span class="token operator">+=</span> file <span class="token operator">+</span> <span class="token string">&#39;              &#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  files<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">file<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> stat <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">statSync</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span>
    <span class="token keyword">const</span> mode <span class="token operator">=</span> stat<span class="token punctuation">.</span>mode
    <span class="token keyword">const</span> authString <span class="token operator">=</span> <span class="token function">auth</span><span class="token punctuation">(</span>mode<span class="token punctuation">)</span>
    <span class="token keyword">const</span> fileType <span class="token operator">=</span> <span class="token function">getFileType</span><span class="token punctuation">(</span>mode<span class="token punctuation">)</span>
    <span class="token comment">// 获取 fileUser</span>
    <span class="token keyword">const</span> fileUser <span class="token operator">=</span> <span class="token function">getFileUser</span><span class="token punctuation">(</span>stat<span class="token punctuation">)</span>
    output <span class="token operator">+=</span>
      fileType <span class="token operator">+</span>
      authString <span class="token operator">+</span>
      <span class="token string">&#39;\\t&#39;</span> <span class="token operator">+</span>
      fileUser <span class="token operator">+</span>
      <span class="token string">&#39;\\t&#39;</span> <span class="token operator">+</span>
      file <span class="token operator">+</span>
      <span class="token punctuation">(</span>index <span class="token operator">===</span> files<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token string">&#39;&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>打开终端执行命令,输入<code>imooc-ls -la</code>结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gaoyuan@gaoyuandeMac imooc-ls % imooc-ls <span class="token parameter variable">-la</span>
-rwxr-xr-x	gaoyuan	staff	.DS_Store
-rw-r--r--	gaoyuan	staff	.prettierrc.json
drwxr-xr-x	gaoyuan	staff	bin
-rwxr-xr-x	gaoyuan	staff	package.json
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="_13-文件容量和创建时间的获取" tabindex="-1"><a class="header-anchor" href="#_13-文件容量和创建时间的获取" aria-hidden="true">#</a> 13：文件容量和创建时间的获取</h2><ol><li><p>新建<code>getFileSizeAndDate.js</code>文件，内容如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">getFileSizeAndDate</span><span class="token punctuation">(</span><span class="token parameter">stat</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> mtime<span class="token punctuation">,</span> size <span class="token punctuation">}</span> <span class="token operator">=</span> stat
  <span class="token keyword">const</span> mtimes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>mtime<span class="token punctuation">)</span>
  <span class="token keyword">const</span> month <span class="token operator">=</span> mtimes<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>
  <span class="token keyword">const</span> date <span class="token operator">=</span> mtimes<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> hour <span class="token operator">=</span> mtimes<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> minute <span class="token operator">=</span> mtimes<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> size <span class="token operator">+</span> <span class="token string">&#39;\\t&#39;</span> <span class="token operator">+</span> month <span class="token operator">+</span> <span class="token string">&#39;月&#39;</span> <span class="token operator">+</span> date <span class="token operator">+</span> <span class="token string">&#39;日&#39;</span> <span class="token operator">+</span> hour <span class="token operator">+</span> <span class="token string">&#39;:&#39;</span> <span class="token operator">+</span> minute
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>index.js</code>文件进行引入</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token hashbang comment">#!/usr/bin/env node</span>
<span class="token keyword">const</span> parse <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./parseArgs.js&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> auth <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./auth.js&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> getFileType <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./getFileType.js&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> getFileUser <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./getFileUser.js&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// 引入 getFileSizeAndDate</span>
<span class="token keyword">const</span> getFileSizeAndDate <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./getFileSizeAndDate.js&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> args<span class="token punctuation">,</span> isAll<span class="token punctuation">,</span> isList <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> dir <span class="token operator">=</span> process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> output <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
<span class="token keyword">let</span> files <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readdirSync</span><span class="token punctuation">(</span>dir<span class="token punctuation">)</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isAll<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  files <span class="token operator">=</span> files<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> file<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  files<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>output <span class="token operator">+=</span> file <span class="token operator">+</span> <span class="token string">&#39;              &#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  files<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">file<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> stat <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">statSync</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span>
    <span class="token keyword">const</span> mode <span class="token operator">=</span> stat<span class="token punctuation">.</span>mode
    <span class="token keyword">const</span> authString <span class="token operator">=</span> <span class="token function">auth</span><span class="token punctuation">(</span>mode<span class="token punctuation">)</span>
    <span class="token keyword">const</span> fileType <span class="token operator">=</span> <span class="token function">getFileType</span><span class="token punctuation">(</span>mode<span class="token punctuation">)</span>
    <span class="token keyword">const</span> fileUser <span class="token operator">=</span> <span class="token function">getFileUser</span><span class="token punctuation">(</span>stat<span class="token punctuation">)</span>
    <span class="token comment">// 获取文件时间、大小</span>
    <span class="token keyword">const</span> fileSizeAndDate <span class="token operator">=</span> <span class="token function">getFileSizeAndDate</span><span class="token punctuation">(</span>stat<span class="token punctuation">)</span>
    output <span class="token operator">+=</span>
      fileType <span class="token operator">+</span>
      authString <span class="token operator">+</span>
      <span class="token string">&#39;\\t&#39;</span> <span class="token operator">+</span>
      fileUser <span class="token operator">+</span>
      <span class="token string">&#39;\\t&#39;</span> <span class="token operator">+</span>
      fileSizeAndDate <span class="token operator">+</span>
      <span class="token string">&#39;\\t&#39;</span> <span class="token operator">+</span>
      file <span class="token operator">+</span>
      <span class="token punctuation">(</span>index <span class="token operator">===</span> files<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token string">&#39;&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>打开终端执行命令,输入<code>imooc-ls -la</code>结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>// imooc-ls <span class="token parameter variable">-la</span> 命令
gaoyuan@gaoyuandeMac imooc-ls % imooc-ls <span class="token parameter variable">-la</span>
-rwxr-xr-x	gaoyuan	staff	<span class="token number">6148</span>	<span class="token number">4</span>月21日10:16	.DS_Store
-rw-r--r--	gaoyuan	staff	<span class="token number">42</span>	<span class="token number">4</span>月21日10:18	.prettierrc.json
drwxr-xr-x	gaoyuan	staff	<span class="token number">256</span>	<span class="token number">4</span>月21日16:24	bin
-rwxr-xr-x	gaoyuan	staff	<span class="token number">250</span>	<span class="token number">4</span>月21日10:10	package.json

// 系统命令
gaoyuan@gaoyuandeMac imooc-ls % <span class="token function">ls</span> <span class="token parameter variable">-la</span>
total <span class="token number">32</span>
drwxr-xr-x@  <span class="token number">6</span> gaoyuan  staff   <span class="token number">192</span>  <span class="token number">4</span> <span class="token number">21</span> <span class="token number">10</span>:18 <span class="token builtin class-name">.</span>
drwx------@ <span class="token number">24</span> gaoyuan  staff   <span class="token number">768</span>  <span class="token number">4</span> <span class="token number">21</span> 09:26 <span class="token punctuation">..</span>
-rwxr-xr-x@  <span class="token number">1</span> gaoyuan  staff  <span class="token number">6148</span>  <span class="token number">4</span> <span class="token number">21</span> <span class="token number">10</span>:16 .DS_Store
-rw-r--r--   <span class="token number">1</span> gaoyuan  staff    <span class="token number">42</span>  <span class="token number">4</span> <span class="token number">21</span> <span class="token number">10</span>:18 .prettierrc.json
drwxr-xr-x   <span class="token number">8</span> gaoyuan  staff   <span class="token number">256</span>  <span class="token number">4</span> <span class="token number">21</span> <span class="token number">16</span>:24 bin
-rwxr-xr-x   <span class="token number">1</span> gaoyuan  staff   <span class="token number">250</span>  <span class="token number">4</span> <span class="token number">21</span> <span class="token number">10</span>:10 package.json
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="_14-文件夹下级文件数量功能开发" tabindex="-1"><a class="header-anchor" href="#_14-文件夹下级文件数量功能开发" aria-hidden="true">#</a> 14：文件夹下级文件数量功能开发</h2><ol><li><p>修改<code>index.js</code>文件，内容如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token hashbang comment">#!/usr/bin/env node</span>
<span class="token keyword">const</span> parse <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./parseArgs.js&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> auth <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./auth.js&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> getFileType <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./getFileType.js&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> getFileUser <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./getFileUser.js&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> getFileSizeAndDate <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./getFileSizeAndDate.js&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> args<span class="token punctuation">,</span> isAll<span class="token punctuation">,</span> isList <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> dir <span class="token operator">=</span> process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> output <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
<span class="token keyword">let</span> files <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readdirSync</span><span class="token punctuation">(</span>dir<span class="token punctuation">)</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isAll<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  files <span class="token operator">=</span> files<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> file<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  files<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>output <span class="token operator">+=</span> file <span class="token operator">+</span> <span class="token string">&#39;              &#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  files<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">file<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> stat <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">statSync</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span>
    <span class="token comment">// 是否是文件夹</span>
    <span class="token keyword">const</span> isDirectory <span class="token operator">=</span> stat<span class="token punctuation">.</span><span class="token function">isDirectory</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span>
    <span class="token keyword">let</span> size <span class="token operator">=</span> <span class="token number">1</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>isDirectory<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 如果是文件夹，就读取内部的文件数量，并更改数量</span>
      <span class="token keyword">const</span> subDir <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readdirSync</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span>
      size <span class="token operator">=</span> subDir<span class="token punctuation">.</span>length
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> mode <span class="token operator">=</span> stat<span class="token punctuation">.</span>mode
    <span class="token keyword">const</span> authString <span class="token operator">=</span> <span class="token function">auth</span><span class="token punctuation">(</span>mode<span class="token punctuation">)</span>
    <span class="token keyword">const</span> fileType <span class="token operator">=</span> <span class="token function">getFileType</span><span class="token punctuation">(</span>mode<span class="token punctuation">)</span>
    <span class="token keyword">const</span> fileUser <span class="token operator">=</span> <span class="token function">getFileUser</span><span class="token punctuation">(</span>stat<span class="token punctuation">)</span>
    <span class="token keyword">const</span> fileSizeAndDate <span class="token operator">=</span> <span class="token function">getFileSizeAndDate</span><span class="token punctuation">(</span>stat<span class="token punctuation">)</span>
    output <span class="token operator">+=</span>
      fileType <span class="token operator">+</span>
      authString <span class="token operator">+</span>
      <span class="token string">&#39; &#39;</span> <span class="token operator">+</span>
      size <span class="token operator">+</span>
      <span class="token string">&#39; &#39;</span> <span class="token operator">+</span>
      fileUser <span class="token operator">+</span>
      <span class="token string">&#39;\\t&#39;</span> <span class="token operator">+</span>
      fileSizeAndDate <span class="token operator">+</span>
      <span class="token string">&#39;\\t&#39;</span> <span class="token operator">+</span>
      file <span class="token operator">+</span>
      <span class="token punctuation">(</span>index <span class="token operator">===</span> files<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token string">&#39;&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>打开终端执行命令,输入<code>imooc-ls -la</code>结果如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// imooc-ls 的脚本</span>
gaoyuan@gaoyuandeMac imooc<span class="token operator">-</span>ls <span class="token operator">%</span> imooc<span class="token operator">-</span>ls <span class="token operator">-</span>la
<span class="token operator">-</span>rwxr<span class="token operator">-</span>xr<span class="token operator">-</span>x <span class="token number">1</span> gaoyuan	staff	<span class="token number">6148</span>	<span class="token number">4</span>月<span class="token number">21</span>日<span class="token number">10</span><span class="token operator">:</span><span class="token number">16</span>	<span class="token punctuation">.</span>DS_Store
<span class="token operator">-</span>rw<span class="token operator">-</span>r<span class="token operator">--</span>r<span class="token operator">--</span> <span class="token number">1</span> gaoyuan	staff	<span class="token number">42</span>	<span class="token number">4</span>月<span class="token number">21</span>日<span class="token number">10</span><span class="token operator">:</span><span class="token number">18</span>	<span class="token punctuation">.</span>prettierrc<span class="token punctuation">.</span>json
drwxr<span class="token operator">-</span>xr<span class="token operator">-</span>x <span class="token number">6</span> gaoyuan	staff	<span class="token number">256</span>	<span class="token number">4</span>月<span class="token number">21</span>日<span class="token number">16</span><span class="token operator">:</span><span class="token number">24</span>	bin
<span class="token operator">-</span>rwxr<span class="token operator">-</span>xr<span class="token operator">-</span>x <span class="token number">1</span> gaoyuan	staff	<span class="token number">250</span>	<span class="token number">4</span>月<span class="token number">21</span>日<span class="token number">10</span><span class="token operator">:</span><span class="token number">10</span>	<span class="token keyword">package</span><span class="token punctuation">.</span>json

<span class="token comment">// 系统的脚本</span>
gaoyuan@gaoyuandeMac imooc<span class="token operator">-</span>ls <span class="token operator">%</span> ls <span class="token operator">-</span>la      
total <span class="token number">32</span>
drwxr<span class="token operator">-</span>xr<span class="token operator">-</span>x@  <span class="token number">6</span> gaoyuan  staff   <span class="token number">192</span>  <span class="token number">4</span> <span class="token number">21</span> <span class="token number">10</span><span class="token operator">:</span><span class="token number">18</span> <span class="token punctuation">.</span>
drwx<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>@ <span class="token number">24</span> gaoyuan  staff   <span class="token number">768</span>  <span class="token number">4</span> <span class="token number">21</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">26</span> <span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token operator">-</span>rwxr<span class="token operator">-</span>xr<span class="token operator">-</span>x@  <span class="token number">1</span> gaoyuan  staff  <span class="token number">6148</span>  <span class="token number">4</span> <span class="token number">21</span> <span class="token number">10</span><span class="token operator">:</span><span class="token number">16</span> <span class="token punctuation">.</span>DS_Store
<span class="token operator">-</span>rw<span class="token operator">-</span>r<span class="token operator">--</span>r<span class="token operator">--</span>   <span class="token number">1</span> gaoyuan  staff    <span class="token number">42</span>  <span class="token number">4</span> <span class="token number">21</span> <span class="token number">10</span><span class="token operator">:</span><span class="token number">18</span> <span class="token punctuation">.</span>prettierrc<span class="token punctuation">.</span>json
drwxr<span class="token operator">-</span>xr<span class="token operator">-</span>x   <span class="token number">8</span> gaoyuan  staff   <span class="token number">256</span>  <span class="token number">4</span> <span class="token number">21</span> <span class="token number">16</span><span class="token operator">:</span><span class="token number">24</span> bin
<span class="token operator">-</span>rwxr<span class="token operator">-</span>xr<span class="token operator">-</span>x   <span class="token number">1</span> gaoyuan  staff   <span class="token number">250</span>  <span class="token number">4</span> <span class="token number">21</span> <span class="token number">10</span><span class="token operator">:</span><span class="token number">10</span> <span class="token keyword">package</span><span class="token punctuation">.</span>json
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="_15-脚手架自动化测试流程讲解和脚本开发" tabindex="-1"><a class="header-anchor" href="#_15-脚手架自动化测试流程讲解和脚本开发" aria-hidden="true">#</a> 15: 脚手架自动化测试流程讲解和脚本开发</h2>`,14),x={href:"https://mochajs.cn/#installation",target:"_blank",rel:"noopener noreferrer"},j=a(`<ol><li><p>这里我们安装 <code>mocha</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> mocha <span class="token parameter variable">-D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>新建<code>test/test.js</code>，内容如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> assert <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;assert&#39;</span><span class="token punctuation">)</span>
<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;Array&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;#indexOf()&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;should return -1 when the value is not present&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      assert<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>package.json</code>中增加脚本命令</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
	<span class="token string-property property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;test&quot;</span><span class="token operator">:</span> <span class="token string">&quot;mocha test/test.js&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>执行命令<code>npm run test</code>,结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gaoyuan@gaoyuandeMac imooc-ls % <span class="token function">npm</span> run <span class="token builtin class-name">test</span> ./test/test.js

<span class="token operator">&gt;</span> imooc-ls@1.0.0 <span class="token builtin class-name">test</span>
<span class="token operator">&gt;</span> mocha <span class="token string">&quot;./test/test.js&quot;</span>
  Array
    <span class="token comment">#indexOf()</span>
      ✔ should <span class="token builtin class-name">return</span> <span class="token parameter variable">-1</span> when the value is not present
  <span class="token number">1</span> passing <span class="token punctuation">(</span>12ms<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>修改<code>/test/test.js</code>,来测试我们<code>/bin/</code>文件夹下的功能函数</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> parseArgs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../bin/parseArgs&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> assert <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;assert&#39;</span><span class="token punctuation">)</span>

<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;imooc-ls&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;parseArgs&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;args test&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span> args<span class="token punctuation">,</span> isList<span class="token punctuation">,</span> isAll <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">parseArgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      assert<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span>isList<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
      assert<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span>isAll<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
      assert<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>length<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
      assert<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;test/test.js&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>重新执行命令<code>npm run test</code>,结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gaoyuan@gaoyuandeMac imooc-ls % <span class="token function">npm</span> run <span class="token builtin class-name">test</span>
<span class="token operator">&gt;</span> imooc-ls@1.0.0 <span class="token builtin class-name">test</span>
<span class="token operator">&gt;</span> mocha test/test.js
  imooc-ls
    parseArgs
      ✔ args <span class="token builtin class-name">test</span>
  <span class="token number">1</span> passing <span class="token punctuation">(</span>10ms<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>新建<code>/test/test.arg.js</code>文件，内容如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> assert <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;assert&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> parseArgs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../bin/parseArgs&#39;</span><span class="token punctuation">)</span>

<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;imooc-ls&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;parseArgs&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;args test&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span> args<span class="token punctuation">,</span> isList<span class="token punctuation">,</span> isAll <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">parseArgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      assert<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span>isList<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
      assert<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span>isAll<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
      assert<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>length<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
      assert<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;test/test.arg.js&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>package.json</code>中新建脚本</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
	<span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;test:args&quot;</span><span class="token operator">:</span> <span class="token string">&quot;mocha test/test.arg.js -la&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>运行脚本命令<code>npm run test:args</code>，结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gaoyuan@gaoyuandeMac imooc-ls % <span class="token function">npm</span> run test:args
<span class="token operator">&gt;</span> imooc-ls@1.0.0 test:args
<span class="token operator">&gt;</span> mocha test/test.arg.js <span class="token parameter variable">-la</span>
  imooc-ls
    parseArgs
      ✔ args <span class="token builtin class-name">test</span>
  <span class="token number">1</span> passing <span class="token punctuation">(</span>11ms<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>接下来我们添加测试<code>getFileUser</code>函数功能的测试函数，修改<code>test/test.js</code>增加如下函数</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> assert <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;assert&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> parseArgs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../bin/parseArgs&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> getFileUser <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../bin/getFileUser&#39;</span><span class="token punctuation">)</span>

<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;imooc-ls&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;parseArgs&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;args test&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token operator">...</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
    
  <span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;getFileUser&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;get current user&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> stat1 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token number">501</span><span class="token punctuation">,</span> <span class="token literal-property property">gid</span><span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">}</span>
      <span class="token keyword">const</span> user1 <span class="token operator">=</span> <span class="token function">getFileUser</span><span class="token punctuation">(</span>stat1<span class="token punctuation">)</span>
      assert<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span>user1<span class="token punctuation">,</span> <span class="token string">&#39;gaoyuan&#39;</span> <span class="token operator">+</span> <span class="token string">&#39;\\t&#39;</span> <span class="token operator">+</span> <span class="token string">&#39;staff&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;get root user&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> stat2 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">gid</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span>
      <span class="token keyword">const</span> user2 <span class="token operator">=</span> <span class="token function">getFileUser</span><span class="token punctuation">(</span>stat2<span class="token punctuation">)</span>
      assert<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span>user2<span class="token punctuation">,</span> <span class="token string">&#39;root&#39;</span> <span class="token operator">+</span> <span class="token string">&#39;\\t&#39;</span> <span class="token operator">+</span> <span class="token string">&#39;wheel&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
   
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>重新执行脚本<code>npm run test</code>，结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gaoyuan@gaoyuandeMac imooc-ls % <span class="token function">npm</span> run <span class="token builtin class-name">test</span>
<span class="token operator">&gt;</span> imooc-ls@1.0.0 <span class="token builtin class-name">test</span>
<span class="token operator">&gt;</span> mocha test/test.js
  imooc-ls
    parseArgs
      ✔ args <span class="token builtin class-name">test</span>
    getFileUser
      ✔ get current user
      ✔ get root user
  <span class="token number">3</span> passing <span class="token punctuation">(</span>76ms<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>继续测试<code>getFileType</code>功能，修改<code>test/test.js</code>增加如下函数</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> assert <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;assert&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> parseArgs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../bin/parseArgs&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> getFileUser <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../bin/getFileUser&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> getFileType <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../bin/getFileType&#39;</span><span class="token punctuation">)</span>

<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;imooc-ls&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;parseArgs&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;args test&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  	<span class="token operator">...</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;getFileUser&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;get current user&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token operator">...</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;get root user&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token operator">...</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;getFileType&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;is file&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> mode <span class="token operator">=</span> <span class="token number">32768</span> <span class="token comment">// file</span>
      <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">getFileType</span><span class="token punctuation">(</span>mode<span class="token punctuation">)</span>
      assert<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> <span class="token string">&#39;-&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;is directory&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> mode <span class="token operator">=</span> <span class="token number">16384</span> <span class="token comment">// directory</span>
      <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">getFileType</span><span class="token punctuation">(</span>mode<span class="token punctuation">)</span>
      assert<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;is link&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> mode <span class="token operator">=</span> <span class="token number">40960</span> <span class="token comment">// link</span>
      <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">getFileType</span><span class="token punctuation">(</span>mode<span class="token punctuation">)</span>
      assert<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> <span class="token string">&#39;l&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;block device&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> mode <span class="token operator">=</span> <span class="token number">24576</span> <span class="token comment">// block device</span>
      <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">getFileType</span><span class="token punctuation">(</span>mode<span class="token punctuation">)</span>
      assert<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>重新执行脚本<code>npm run test</code>，结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gaoyuan@gaoyuandeMac imooc-ls % <span class="token function">npm</span> run <span class="token builtin class-name">test</span>
<span class="token operator">&gt;</span> imooc-ls@1.0.0 <span class="token builtin class-name">test</span>
<span class="token operator">&gt;</span> mocha test/test.js
  imooc-ls
    parseArgs
      ✔ args <span class="token builtin class-name">test</span>
    getFileUser
      ✔ get current user
      ✔ get root user
    getFileType
      ✔ is <span class="token function">file</span>
      ✔ is directory
      ✔ is <span class="token function">link</span>
      ✔ block device
  <span class="token number">6</span> passing <span class="token punctuation">(</span>88ms<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>接下里接续测试<code>auth</code>部分，修改<code>test/test.js</code>增加如下函数</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> assert <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;assert&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> parseArgs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../bin/parseArgs&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> getFileUser <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../bin/getFileUser&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> getFileType <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../bin/getFileType&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> auth <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../bin/auth&#39;</span><span class="token punctuation">)</span>

<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;imooc-ls&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;parseArgs&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;args test&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token operator">...</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;getFileUser&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;get current user&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token operator">...</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;get root user&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token operator">...</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;getFileType&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;is file&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token operator">...</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;is directory&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token operator">...</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;is link&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     	<span class="token operator">...</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;block device&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token operator">...</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;getAuth&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;user rwx------&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> mode <span class="token operator">=</span> <span class="token number">4544</span> <span class="token comment">// user rwx</span>
      <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">auth</span><span class="token punctuation">(</span>mode<span class="token punctuation">)</span>
      assert<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> <span class="token string">&#39;rwx------&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;group ---rwx---&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> mode <span class="token operator">=</span> <span class="token number">4152</span> <span class="token comment">// group rwx</span>
      <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">auth</span><span class="token punctuation">(</span>mode<span class="token punctuation">)</span>
      assert<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> <span class="token string">&#39;---rwx---&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;other ------rwx&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> mode <span class="token operator">=</span> <span class="token number">4103</span> <span class="token comment">// other rwx</span>
      <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">auth</span><span class="token punctuation">(</span>mode<span class="token punctuation">)</span>
      assert<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> <span class="token string">&#39;------rwx&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;noe ---------&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> mode <span class="token operator">=</span> <span class="token number">4096</span> <span class="token comment">// none rwx</span>
      <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">auth</span><span class="token punctuation">(</span>mode<span class="token punctuation">)</span>
      assert<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> <span class="token string">&#39;---------&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;bad mode&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> mode <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment">// bad mode</span>
      <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">auth</span><span class="token punctuation">(</span>mode<span class="token punctuation">)</span>
      assert<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> <span class="token string">&#39;---------&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;bad mode string&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> mode <span class="token operator">=</span> <span class="token string">&#39;a&#39;</span> <span class="token comment">// bad mode string</span>
      <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">auth</span><span class="token punctuation">(</span>mode<span class="token punctuation">)</span>
      assert<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> <span class="token string">&#39;---------&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>重新执行脚本<code>npm run test</code>，结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gaoyuan@gaoyuandeMac imooc-ls % <span class="token function">npm</span> run <span class="token builtin class-name">test</span>
<span class="token operator">&gt;</span> imooc-ls@1.0.0 <span class="token builtin class-name">test</span>
<span class="token operator">&gt;</span> mocha test/test.js
  imooc-ls
    parseArgs
      ✔ args <span class="token builtin class-name">test</span>
    getFileUser
      ✔ get current user
      ✔ get root user <span class="token punctuation">(</span>41ms<span class="token punctuation">)</span>
    getFileType
      ✔ is <span class="token function">file</span>
      ✔ is directory
      ✔ is <span class="token function">link</span>
      ✔ block device
    getAuth
      ✔ user rwx------
      ✔ group ---rwx---
      ✔ other ------rwx
      ✔ noe ---------
      ✔ bad mode
      ✔ bad mode string
  <span class="token number">13</span> passing <span class="token punctuation">(</span>124ms<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol>`,1);function _(S,q){const t=o("Mermaid"),p=o("ExternalLinkIcon");return l(),i("div",null,[r,n("ul",null,[k,n("li",null,[d,n("ul",null,[n("li",null,[v,s(t,{id:"mermaid-68",code:"eJxLL0osyFDwCbLmerpk+dPO3uer1yvo6topOAYEgKig1MTkEr/EksyyVDQFTzf0P1/R/XRXP4gTkliUjyYfnpqEJvJ8d8uT3due7prMxQWUhAgt3/20awVMQUhqckZefk5+eiVcQYAzFkkuuEkYMgrFpUkQLyGJKgBBWGkqmAZ7CMRKzUvhAgDueGd+"})]),n("li",null,[m,s(t,{id:"mermaid-74",code:"eJxLL0osyFDwCbLmUlBQeLpk+dPO3uer1+vq2hUU5WelJpeAhItLkyDKkMQUFBwDAiCMpxv6n6/ofrqrH8INT02CMJ7vbnmye9vTXZNB3NS8FLAo1AigBQqZufn5ybrJOZnYJZJKM3NAeuC2o6p/uXDn89nrnnbMfrp7F7JA/8SnO5qRbETTDjMVrn7C+qddK5AEnnVOftrTCjMAAJMwb2c="})])])])]),b,n("p",null,[n("a",g,[e("鸟哥：Linux 的文件权限:https://zhuanlan.zhihu.com/p/64008541"),s(p)])]),n("p",null,[n("a",f,[e("Linux如何用二进制代表文件权限（不懂来砍我）:https://blog.csdn.net/weixin_44824500/article/details/109370750"),s(p)])]),y,n("p",null,[n("a",h,[e("Linux文件系统详解:https://juejin.cn/post/6844903668504854535"),s(p)])]),w,n("blockquote",null,[n("p",null,[n("a",x,[e("mocha 官网:https://mochajs.cn/#installation"),s(p)])])]),j])}const F=c(u,[["render",_],["__file","index-13.html.vue"]]);export{F as default};
