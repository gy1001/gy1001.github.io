import{_ as e,p as a,q as d,a1 as c}from"./framework-e8cb8151.js";const o={},i=c('<h1 id="_01-为什么前端工程化必须学" tabindex="-1"><a class="header-anchor" href="#_01-为什么前端工程化必须学" aria-hidden="true">#</a> 01-为什么前端工程化必须学？</h1><p>误区：<strong>工程化不等于 Webpack</strong></p><h3 id="什么是前端工程化" tabindex="-1"><a class="header-anchor" href="#什么是前端工程化" aria-hidden="true">#</a> 什么是前端工程化</h3><p>前端工程化包含了从编码、发布到运维的整个前端研发生命周期</p><p>它并不是一个新的概念，而是把软件工程相关的方法和思想应用到前端开发中</p><h3 id="前端工厂化的目标" tabindex="-1"><a class="header-anchor" href="#前端工厂化的目标" aria-hidden="true">#</a> 前端工厂化的目标</h3><ol><li>提升研发效率</li><li>提高研发质量</li><li>提高访问性能</li></ol><p>如：<code>webpack</code>、<code>rollup</code>、<code>gulp</code> 、<code>jest</code></p><h3 id="为什么要学习前端工程化" tabindex="-1"><a class="header-anchor" href="#为什么要学习前端工程化" aria-hidden="true">#</a> 为什么要学习前端工程化</h3><p>随着前端复杂度越来越高，前端工程化技能显得越来越必备</p><p>掌握工程化可以获取明显的职位优势</p><h3 id="课程项目" tabindex="-1"><a class="header-anchor" href="#课程项目" aria-hidden="true">#</a> 课程项目</h3><ol><li>解决原生 <code>js 升级</code> + <code>MVVM 框架</code>问题</li><li>解决<code>vue2</code>升级<code>vue3</code>+构建性能优化问题</li><li>解决前端团队底层工程链路统一问题</li></ol>',13),r=[i];function h(l,t){return a(),d("div",null,r)}const s=e(o,[["render",h],["__file","index-01.html.vue"]]);export{s as default};
