import{_ as i,M as p,p as o,q as l,R as n,t as s,N as e,a1 as t}from"./framework-e8cb8151.js";const c="/assets/image-20230806103038853-8a1ba9ec.png",r="/assets/image-20230806111057064-72d69b4f.png",d="/assets/image-20230806115024576-90dbc4fa.png",u="/assets/image-20230806152822018-b42626ed.png",k="/assets/image-20230806153104633-f0927f3d.png",v="/assets/image-20230806153248254-3292d517.png",m="/assets/image-20230806155802023-8bd6304e.png",h="/assets/image-20230806155901134-f2a56799.png",b="/assets/image-20230806161245088-e87ca2fe.png",g="/assets/image-20230806171341918-ef7a7731.png",f="/assets/image-20230806184908060-c472c82e.png",_="/assets/image-20230806185843009-1f83761d.png",w="/assets/image-20230806190106652-e22e94ae.png",q="/assets/image-20230806190246442-d6bde9a0.png",x="/assets/image-20230806190836047-e486b787.png",y={},S=t('<h1 id="_02-性能优化的指标和工具" tabindex="-1"><a class="header-anchor" href="#_02-性能优化的指标和工具" aria-hidden="true">#</a> 02- 性能优化的指标和工具</h1><blockquote><p>告别前端小白，成为大神的必经之路</p></blockquote><h2 id="_01-为什么要进行-web-性能优化【企业刚需】" tabindex="-1"><a class="header-anchor" href="#_01-为什么要进行-web-性能优化【企业刚需】" aria-hidden="true">#</a> 01: 为什么要进行 Web 性能优化【企业刚需】</h2><ul><li>性能 - Web 网站和应用的支柱</li></ul><p><img src="'+c+'" alt="image-20230806103038853"></p><p>推荐阅读：Amoza 发现每 100ms 的延迟导致 1％ 的销量损失</p><h3 id="寻找性能瓶颈" tabindex="-1"><a class="header-anchor" href="#寻找性能瓶颈" aria-hidden="true">#</a> 寻找性能瓶颈</h3><ul><li>了解性能指标 – 多快才算快</li><li>利用测量工具和 APIS</li><li>优化问题，重新测量（迭代）</li></ul><h3 id="移动端挑战多" tabindex="-1"><a class="header-anchor" href="#移动端挑战多" aria-hidden="true">#</a> 移动端挑战多</h3><ul><li>设备硬件、网速、屏幕尺寸、交互方式</li><li>移动端用户更加缺少耐心，&gt; 3 秒加载导致 53% 的跳出率(bounce rate)</li><li>持续增长的移动用户和移动电商业务</li></ul><h2 id="_02-性能指标和优化目标【了解行业标准】" tabindex="-1"><a class="header-anchor" href="#_02-性能指标和优化目标【了解行业标准】" aria-hidden="true">#</a> 02:性能指标和优化目标【了解行业标准】</h2><h3 id="network-选项卡" tabindex="-1"><a class="header-anchor" href="#network-选项卡" aria-hidden="true">#</a> network 选项卡</h3>',12),T={href:"https://ai.taobao.com/",target:"_blank",rel:"noopener noreferrer"},F=t('<p><img src="'+r+'" alt="image-20230806111057064"></p><p>随便找一个文件，查看该文件的一个加载瀑布流，如下，可以看到如下信息</p><p><strong>横着看</strong></p><ul><li>文件并不是立即进行下载的，会根据优先级，进行一个排队等待</li><li>然后会根据资源域名找到 ip 找到对应的地址，然后进行连接（比如 DNS 查询、TCP链接、如果使用 https 还要进行 ssl 证书验证）</li><li>之后才会真正发送请求，然后响应（注意这里的正在等待服务器响应时间，这里尽量短），</li><li>然后是下载内容时间，尽量短（就是文件不要过大）</li></ul><p>tips: 优化点，就是尽量采用并行加载</p><p><img src="'+d+'" alt="image-20230806115024576"></p><p><strong>竖着看</strong></p><ul><li>如下图，蓝色的竖线，表示 DOM 加载的时间，红色的页面中所有的资源加载的时间</li></ul><p><img src="'+u+'" alt="image-20230806152822018"></p><p>如果一次性分析不完，我们可以点击右键 =&gt; 保存为 har 格式，如下图</p><p><img src="'+k+'" alt="image-20230806153104633"></p><h3 id="lighthouse-选项卡" tabindex="-1"><a class="header-anchor" href="#lighthouse-选项卡" aria-hidden="true">#</a> lightHouse 选项卡</h3><blockquote><p>集成到 chrome 中的性能测量工具</p></blockquote><p><img src="'+v+'" alt="image-20230806153248254"></p><ul><li>first contentful paint: 可以简单的理解为白屏时间</li><li>Speed Index： 首屏展现平均值 <ul><li>绿色（良好）—— 0 到 3.4 秒</li><li>橙色（中等）—— 3.4 到 5.8 秒</li><li>红色（慢） —— 超过 5.8 秒</li></ul></li></ul><h3 id="交互响应要足够快" tabindex="-1"><a class="header-anchor" href="#交互响应要足够快" aria-hidden="true">#</a> 交互响应要足够快</h3><h3 id="画面要足够流畅" tabindex="-1"><a class="header-anchor" href="#画面要足够流畅" aria-hidden="true">#</a> 画面要足够流畅</h3><blockquote><p>mac: 使用 command + shift + p 选择 show frames per second FPS meter</p></blockquote><p><img src="'+m+'" alt="image-20230806155802023"></p><p><img src="'+h+'" alt="image-20230806155901134"></p><h3 id="所有的异步数据要足够快" tabindex="-1"><a class="header-anchor" href="#所有的异步数据要足够快" aria-hidden="true">#</a> 所有的异步数据要足够快</h3><ul><li>希望能在 1s 之内能把数据返回回来，如果不能，就进行压缩，那就可以考虑交互上进行优化（比如加 loading 动画）</li></ul><h3 id="总结-性能优化-加载" tabindex="-1"><a class="header-anchor" href="#总结-性能优化-加载" aria-hidden="true">#</a> 总结：性能优化-加载</h3><ul><li>理解加载瀑布流</li><li>基于 HAR 存储与重建性能信息</li><li>速度指数（Speed Index）</li><li>重要测量指标 <ul><li>性能优化：加载 <ul><li>speed Index</li><li>TTFB</li><li>页面加载时间</li><li>首次渲染：first contentful paint</li></ul></li><li>性能优化：响应 <ul><li>交互动作的反馈时间</li><li>帧率 FPS</li><li>异步请求的完成时间</li></ul></li></ul></li></ul><h2 id="_03-rail-测量模型【黄金指南】" tabindex="-1"><a class="header-anchor" href="#_03-rail-测量模型【黄金指南】" aria-hidden="true">#</a> 03: RAIL 测量模型【黄金指南】</h2>',25),A={href:"https://web.dev/rail/",target:"_blank",rel:"noopener noreferrer"},E=t('<h3 id="什么是-rail" tabindex="-1"><a class="header-anchor" href="#什么是-rail" aria-hidden="true">#</a> 什么是 RAIL</h3><p>RAIL, 是 <code>Response（响应）</code>, <code>Animation（动画）</code>, <code>Idle（空闲）</code>, 和 <code>Load（加载）</code> 的首字母缩写, 是一种由Google Chrome团队与2015年提出的性能模型, 用于提升浏览器内的用户体验和性能. RAIL模型的理念是 &quot;以用户为中心；最终目标不是让您的网站在任何特定设备上都能运行很快，而是使用户满意。</p><h3 id="rail-的目标" tabindex="-1"><a class="header-anchor" href="#rail-的目标" aria-hidden="true">#</a> RAIL 的目标</h3><ul><li>让良好的用户体验成为性能优化的目标</li></ul><h3 id="rail评估标准" tabindex="-1"><a class="header-anchor" href="#rail评估标准" aria-hidden="true">#</a> RAIL评估标准</h3><h4 id="response-响应-处理事件应在-50ms-以内完成" tabindex="-1"><a class="header-anchor" href="#response-响应-处理事件应在-50ms-以内完成" aria-hidden="true">#</a> Response 响应：处理事件应在 50ms 以内完成</h4><blockquote><p>用户的输入到响应的时间不超过100ms，给用户的感受是瞬间就完成了。</p></blockquote><ul><li><p>事件处理函数在50ms内完成，考虑到 idle task 的情况，事件会排队，等待时间大概在50ms。适用于click，toggle，starting animations等，不适用于drag 和 scroll。</p><blockquote><p>idle task：除了要处理输入事件，浏览器还有其它任务要做，这些任务会占用部分时间，一般情况会花费50ms的时间，输入事件的响应则排在其后。</p></blockquote></li><li><p>复杂的 js 计算尽可能放在后台，如web worker，避免对用户输入造成阻塞</p></li><li><p>超过 50ms 的响应，一定要提供反馈，比如倒计时，进度百分比等。</p></li></ul><p><img src="'+b+'" alt="image-20230806161245088"></p><h4 id="animation-动画-每-10ms-产生一帧" tabindex="-1"><a class="header-anchor" href="#animation-动画-每-10ms-产生一帧" aria-hidden="true">#</a> Animation 动画：每 10ms 产生一帧</h4><p><strong>目标</strong></p><ul><li>产生每一帧的时间不要超过10ms，为了保证浏览器60帧，每一帧的时间在16ms左右，但浏览器需要用6ms来渲染每一帧。</li><li>旨在视觉上的平滑。用户对帧率变化感知很敏感。</li></ul><p><strong>优化方案</strong></p><ul><li>在一些高压点上，比如动画，不要去挑战cpu，尽可能地少做事，如：取offset，设置style等操作。尽可能地保证60帧的体验。</li><li>在渲染性能上，针对不同的动画做一些特定优化</li></ul><blockquote><p>动画不只是UI的视觉效果，以下行为都属于</p><ul><li>视觉动画，如渐隐渐显，tweens，loading等</li><li>滚动，包含弹性滚动，松开手指后，滚动会持续一段距离</li><li>拖拽，缩放，经常伴随着用户行为</li></ul></blockquote><h3 id="idle-空闲-最大化空闲时间" tabindex="-1"><a class="header-anchor" href="#idle-空闲-最大化空闲时间" aria-hidden="true">#</a> IDLE 空闲：最大化空闲时间</h3><p><strong>目标</strong></p><ul><li>最大化空闲时间，以增大50ms内响应用户输入的几率</li></ul><p><strong>优化方案</strong></p>',19),L={href:"https://link.juejin.cn?target=https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FWeb%2FAPI%2FWindow%2FrequestIdleCallback",target:"_blank",rel:"noopener noreferrer"},j=t('<ul><li>在空闲时间内执行的任务尽量控制在50ms以内，如果更长的话，会影响input handle的pending时间</li><li>如果用户在空闲时间任务进行时进行交互，必须以此为最高优先级，并暂停空闲时间的任务</li></ul><h3 id="load-加载-传输内容到页面可交互的时间不超过5秒" tabindex="-1"><a class="header-anchor" href="#load-加载-传输内容到页面可交互的时间不超过5秒" aria-hidden="true">#</a> Load 加载：传输内容到页面可交互的时间不超过5秒</h3><blockquote><p>如果页面加载比较慢，用户的交点可能会离开。加载很快的页面，用户平均停留时间会变长，跳出率会更低，也就有更高的广告查看率</p></blockquote><p><strong>目标</strong></p><ul><li>优化加载速度，可以根据设备、网络等条件。目前，比较好的一个方式是，让你的页面在一个中配的3G网络手机上打开时间不超过5秒</li><li>对于第二次打开，尽量不超过2秒</li></ul><p><strong>优化方案</strong></p>',6),R={href:"https://link.juejin.cn?target=https%3A%2F%2Fwww.webpagetest.org%2Feasy",target:"_blank",rel:"noopener noreferrer"},I=n("li",null,"要注意的是，即使用户的网络是4G，但因为丢包或者网络波动，可能会比预期的更慢",-1),C={href:"https://link.juejin.cn?target=https%3A%2F%2Fweb.dev%2Frender-blocking-resources%2F",target:"_blank",rel:"noopener noreferrer"},N={href:"https://link.juejin.cn?target=https%3A%2F%2Fweb.dev%2Fnative-lazy-loading%2F",target:"_blank",rel:"noopener noreferrer"},P={href:"https://link.juejin.cn?target=https%3A%2F%2Fweb.dev%2Freduce-javascript-payloads-with-code-splitting%2F",target:"_blank",rel:"noopener noreferrer"},D={href:"https://link.juejin.cn?target=https%3A%2F%2Fweb.dev%2Ffast%2F",target:"_blank",rel:"noopener noreferrer"},O=n("h3",{id:"性能测量工具",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#性能测量工具","aria-hidden":"true"},"#"),s(" 性能测量工具")],-1),z={href:"https://link.juejin.cn/?target=https%3A%2F%2Fdevelopers.google.com%2Fweb%2Ftools%2Fchrome-devtools",target:"_blank",rel:"noopener noreferrer"},H={href:"https://link.juejin.cn/?target=https%3A%2F%2Fweb.dev%2Fmeasure%2F",target:"_blank",rel:"noopener noreferrer"},W={href:"https://link.juejin.cn/?target=https%3A%2F%2Fwebpagetest.org%2Feasy",target:"_blank",rel:"noopener noreferrer"},M=t('<h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h3><p>RAIL是一个旅程，为了提升用户在网站的交互体验而不断探索。你需要去理解用户如何感知你的站点，这样才能设置最佳的性能目标</p><ul><li>聚焦用户</li><li>100ms内响应用户的输入</li><li>10ms内产生1帧，在滚动或者动画执行时</li><li>最大化主线程的空闲时间</li><li>5s内让网页变得可交互</li></ul><h2 id="_04-使用-webpagetest-评估-web-网站性能" tabindex="-1"><a class="header-anchor" href="#_04-使用-webpagetest-评估-web-网站性能" aria-hidden="true">#</a> 04: 使用 WebPageTest 评估 Web 网站性能</h2><blockquote><p>【快捷好用的在线分析工具】</p></blockquote>',5),B={href:"https://www.webpagetest.org/",target:"_blank",rel:"noopener noreferrer"},G=t('<p>以下是对 淘宝网的一个测试</p><p><img src="'+g+`" alt="image-20230806171341918"></p><h3 id="解读-webpagetest-的报告" tabindex="-1"><a class="header-anchor" href="#解读-webpagetest-的报告" aria-hidden="true">#</a> 解读 WebpageTest 的报告</h3><ul><li>waterfall chart 请求瀑布图</li><li>first view 首次访问</li><li>repeat vew 二次访问</li></ul><h3 id="如何本地部署-webpagetest-工具" tabindex="-1"><a class="header-anchor" href="#如何本地部署-webpagetest-工具" aria-hidden="true">#</a> 如何本地部署 WebpageTest 工具</h3><ul><li><p>安装 docker</p></li><li><p>docker 安装</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull webpagetest/server
<span class="token function">docker</span> pull webpagetest/agent
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>自定义</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>/mkdir wpt-mac-server
<span class="token builtin class-name">cd</span> wpt-mac-server
<span class="token function">vim</span> Dockerfile
// 粘贴如下内容
FROM webpageTest/server
ADD location.ini /var/www/html/settings/

// 创建配置文件
<span class="token function">vim</span>  location.ini
// 如下内容
<span class="token punctuation">[</span>location<span class="token punctuation">]</span>
<span class="token assign-left variable">1</span><span class="token operator">=</span>Test_loc
<span class="token punctuation">[</span>Test_loc<span class="token punctuation">]</span>
<span class="token assign-left variable">1</span><span class="token operator">=</span>Test
<span class="token assign-left variable">label</span><span class="token operator">=</span>Test Location
<span class="token assign-left variable">group</span><span class="token operator">=</span>Desktop
<span class="token punctuation">[</span>Test<span class="token punctuation">]</span>
<span class="token assign-left variable">browser</span><span class="token operator">=</span>Chroomm,Firefox
<span class="token assign-left variable">label</span><span class="token operator">=</span><span class="token string">&quot;Test Location&quot;</span>
<span class="token assign-left variable">connectivity</span><span class="token operator">=</span>LAN

// 保存退出，执行以下命令
<span class="token function">docker</span> build <span class="token parameter variable">-t</span> wpt-mac-server ./
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> wpt-mac-agent
<span class="token builtin class-name">cd</span> wpt-mac-agent
<span class="token function">vim</span> Dockerfile
// 粘贴如下内容
FROM webpageTest/agent
ADD script.sh
ENTRYPOINT /script.sh

<span class="token function">vim</span> script/sh
// 内容如下
<span class="token comment">#!/bin/bash</span>
<span class="token builtin class-name">set</span> <span class="token parameter variable">-e</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-z</span> <span class="token string">&quot;<span class="token variable">$SERVER_URL</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>
	<span class="token builtin class-name">echo</span> <span class="token operator">&gt;</span><span class="token file-descriptor important">&amp;2</span> <span class="token string">&#39;SERVER_URL not set&#39;</span>
	<span class="token builtin class-name">exit</span> <span class="token number">1</span>
<span class="token keyword">fi</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-z</span> <span class="token string">&quot;<span class="token variable">$LOCATION</span>&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
	<span class="token builtin class-name">echo</span> <span class="token operator">&gt;</span><span class="token file-descriptor important">&amp;2</span> <span class="token string">&#39;LOCATION not set&#39;</span>
	<span class="token builtin class-name">exit</span> <span class="token number">1</span>
<span class="token keyword">fi</span>
<span class="token assign-left variable">EXTRA_ARGS</span><span class="token operator">=</span><span class="token string">&quot;&quot;</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-n</span> <span class="token string">&quot;<span class="token variable">$NAME</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>
	<span class="token assign-left variable">EXTRA_ARGS</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">$EXTRA_ARGS</span> --name <span class="token variable">$NAME</span>&quot;</span>
<span class="token keyword">fi</span>
python /wptagent/wptagent.py <span class="token parameter variable">--server</span> <span class="token variable">$SERVER_URL</span> <span class="token parameter variable">--location</span> <span class="token variable">$LOCATION</span> <span class="token variable">$EXTRA_ARGS</span> <span class="token parameter variable">--xvfb</span> <span class="token parameter variable">--dockerized</span> <span class="token parameter variable">-vvvvv</span> <span class="token parameter variable">--shaper</span> none

// 添加权限
<span class="token function">chmod</span> u+x script.sh
// 进行打包
<span class="token function">docker</span> build <span class="token parameter variable">-t</span> wpt-mac-agent
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>// 查看正在运行的 <span class="token function">docker</span> 实例
<span class="token function">docker</span> <span class="token function">ps</span>
// 根据上述 <span class="token function">id</span> 停掉对应的服务
<span class="token function">docker</span> stop xxx xxx
// 然后运行新的镜像
<span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">4000</span>:80 wpt-mac-server 
// 接着继续运行
<span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">4001</span>:80 <span class="token parameter variable">--network</span><span class="token operator">=</span><span class="token string">&quot;host&quot;</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;SERVER_URL=http://localhost:4000/work/&quot;</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;LOCATION=test&quot;</span> wpt-mac-agent 

// 然后就可以运行相应的页面进行测试查看性能了
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="_05-【讨论题】谈谈对性能优化的一些想法" tabindex="-1"><a class="header-anchor" href="#_05-【讨论题】谈谈对性能优化的一些想法" aria-hidden="true">#</a> 05:【讨论题】谈谈对性能优化的一些想法</h2><h2 id="_06-使用-lighthouse-分析性能" tabindex="-1"><a class="header-anchor" href="#_06-使用-lighthouse-分析性能" aria-hidden="true">#</a> 06: 使用 LightHouse 分析性能</h2><blockquote><p>【一站式全面呈现性能指标】</p></blockquote><p>安装</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> lighthouse
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>lighthouse http://xxxx.com
例如

lighthouse https://www.bilibili.com/ // 它会自动绑你打开页面

测试完成后，会管理页面，然后在本地生成一份 m.bilibili.com_2023-08-06_18-47-47.report.html ，然后打开就可以看到结果
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果如下</p><p><img src="`+f+'" alt="image-20230806184908060"></p><h3 id="总结-lighthouse-的安装以及使用" tabindex="-1"><a class="header-anchor" href="#总结-lighthouse-的安装以及使用" aria-hidden="true">#</a> 总结：lighthouse 的安装以及使用</h3><ul><li>本地 npm 安装 lighthouse</li><li>Chrome DevTools 中使用</li><li>通过 chrome web store 安装插件</li></ul><h2 id="_07-使用-chrome-devtools-分析性能【最大法宝】" tabindex="-1"><a class="header-anchor" href="#_07-使用-chrome-devtools-分析性能【最大法宝】" aria-hidden="true">#</a> 07: 使用 Chrome DevTools 分析性能【最大法宝】</h2><ol><li><p>打开一个项目或者网页，运行后，查看 network 标签页中的加载资源状况，（打开一个网页，结果类似下图）</p><p><img src="'+_+'" alt="image-20230806185843009"></p></li><li><p>可以看到总体请求了 1.2 M，我们可以根据大小进行排序，然后针对大的文件进行分析处理</p><p><img src="'+w+'" alt="image-20230806190106652"></p></li><li><p>鼠标悬浮在文件大小上，可以看到如下内容（文件大小和传输大小，可以知道他们两个不一定是相等的，我们可以采用压缩处理来使其降低）</p><p><img src="'+q+`" alt="image-20230806190246442"></p></li><li><p>如果使用 node js，可以使用 compression</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 类似代码如下</span>
<span class="token keyword">const</span> compression <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;compression&quot;</span><span class="token punctuation">)</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>compression<span class="token punctuation">)</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>express<span class="token punctuation">.</span><span class="token function">static</span><span class="token punctuation">(</span><span class="token string">&quot;build&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>接着我们可以使用 performance 选项卡，来进一步查看性能（注意其中的 Timings 和 Main）</p><p><img src="`+x+`" alt="image-20230806190836047"></p></li><li><p>我们还可以在 network 中选择 disabled cache 或者 增加 网络情况（自定义 网速 xxk/s）</p></li></ol><h3 id="总结-1" tabindex="-1"><a class="header-anchor" href="#总结-1" aria-hidden="true">#</a> 总结：</h3><ul><li>Audit(Lighthoust)</li><li>Throttling 调整网络吞吐</li><li>Performance 性能分析</li><li>Network 网络加载分析</li></ul><h2 id="_08-常用的性能测量-apis" tabindex="-1"><a class="header-anchor" href="#_08-常用的性能测量-apis" aria-hidden="true">#</a> 08: 常用的性能测量 APIs</h2><blockquote><p>【不可不知，打开精细化、自定义测量的大门】</p></blockquote><h3 id="performance-timing属性介绍" tabindex="-1"><a class="header-anchor" href="#performance-timing属性介绍" aria-hidden="true">#</a> performance.timing属性介绍:</h3><ol><li>navigationStart 加载起始时间</li><li>redirectStart 重定向开始时间（如果发生了HTTP重定向，每次重定向都和当前文档同域的话，就返回开始重定向的fetchStart的值。其他情况，则返回0）</li><li>redirectEnd 重定向结束时间（如果发生了HTTP重定向，每次重定向都和当前文档同域的话，就返回最后一次重定向接受完数据的时间。其他情况则返回0）</li><li>fetchStart 浏览器发起资源请求时，如果有缓存，则返回读取缓存的开始时间</li><li>domainLookupStart查询DNS的开始时间。如果请求没有发起DNS请求，如keep-alive，缓存等，则返回fetchStart</li><li>domainLookupEnd 查询DNS的结束时间。如果没有发起DNS请求，同上</li><li>connectStart 开始建立TCP请求的时间。如果请求是keep-alive，缓存等，则返回domainLookupEnd,(secureConnectionStart) 如果在进行TLS或SSL，则返回握手时间</li><li>connectEnd 完成TCP链接的时间。如果是keep-alive，缓存等，同connectStart</li><li>requestStart 发起请求的时间</li><li>responseStart 服务器开始响应的时间</li><li>unloadEventStart unload事件触发的时间</li><li>unloadEventEnd unload事件执行完的时</li></ol><h3 id="主要性能指标" tabindex="-1"><a class="header-anchor" href="#主要性能指标" aria-hidden="true">#</a> 主要性能指标：</h3><p>DNS 解析耗时: domainLookupEnd - domainLookupStart</p><p>TCP 连接耗时: connectEnd - connectStart</p><p>SSL 安全连接耗时: connectEnd - secureConnectionStart</p><p>网络请求耗时 (TTFB): responseStart - requestStart</p><p>数据传输耗时: responseEnd - responseStart</p><p>DOM 解析耗时: domInteractive - responseEnd</p><p>资源加载耗时: loadEventStart - domContentLoadedEventEnd</p><p>First Byte时间: responseStart - domainLookupStart</p><p>白屏时间: responseEnd - fetchStart</p><p>首次可交互时间: domInteractive - fetchStart</p><p>DOM Ready 时间: domContentLoadEventEnd - fetchStart</p><p>页面完全加载时间: loadEventStart - fetchStart</p><p>http 头部大小： transferSize - encodedBodySize</p><p>重定向次数：performance.navigation.redirectCount</p><p>重定向耗时: redirectEnd - redirectStart</p><h3 id="web-标准-apis" tabindex="-1"><a class="header-anchor" href="#web-标准-apis" aria-hidden="true">#</a> Web 标准 APIs</h3><ul><li>关键时间节点（Navigation Timing, Resource Timing）</li><li>网络状态（Network APIs）</li><li>客户端服务端协商（Http Client Hints） &amp; 网页显示状态（UI APIs）</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;load&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token comment">// Time to Interactive 可交互时间</span>
  <span class="token keyword">let</span> timing <span class="token operator">=</span> performance<span class="token punctuation">.</span><span class="token function">getEntriesByType</span><span class="token punctuation">(</span><span class="token string">&#39;navigation&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
  <span class="token comment">// 计算 tti = domInteractive - fetchStart</span>
  <span class="token keyword">let</span> tti <span class="token operator">=</span> timing<span class="token punctuation">.</span>domInteractive <span class="token operator">-</span> timing<span class="token punctuation">.</span>fetchStart
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;TTI&#39;</span><span class="token punctuation">,</span> tti<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>监听大文件的一个响应时间</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> observer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PerformanceObserver</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">list</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> entry <span class="token keyword">of</span> list<span class="token punctuation">.</span><span class="token function">getEntries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>entry<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
observer<span class="token punctuation">.</span><span class="token function">observe</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">entryTypes</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;longtask&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>监听页面是否隐层、显示</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> hidden<span class="token punctuation">,</span> visibilityChange<span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> document<span class="token punctuation">.</span>hidden <span class="token operator">!==</span> <span class="token string">&quot;undefined&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  hidden <span class="token operator">=</span> <span class="token string">&quot;hidden&quot;</span><span class="token punctuation">;</span>
  visibilityChange <span class="token operator">=</span> <span class="token string">&quot;visibilitychange&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> document<span class="token punctuation">.</span>mozHidden <span class="token operator">!==</span> <span class="token string">&quot;undefined&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  hidden <span class="token operator">=</span> <span class="token string">&quot;mozHidden&quot;</span><span class="token punctuation">;</span>
  visibilityChange <span class="token operator">=</span> <span class="token string">&quot;mozvisibilitychange&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> document<span class="token punctuation">.</span>msHidden <span class="token operator">!==</span> <span class="token string">&quot;undefined&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  hidden <span class="token operator">=</span> <span class="token string">&quot;msHidden&quot;</span><span class="token punctuation">;</span>
  visibilityChange <span class="token operator">=</span> <span class="token string">&quot;msvisibilitychange&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> document<span class="token punctuation">.</span>webkitHidden <span class="token operator">!==</span> <span class="token string">&quot;undefined&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  hidden <span class="token operator">=</span> <span class="token string">&quot;webkitHidden&quot;</span><span class="token punctuation">;</span>
  visibilityChange <span class="token operator">=</span> <span class="token string">&quot;webkitvisibilitychange&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
 
<span class="token comment">// 添加监听器</span>
document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>visibilityChange<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;当前页面是否被隐藏：&quot;</span> <span class="token operator">+</span> document<span class="token punctuation">[</span>hidden<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>监听网络状态</p><p><strong>navigator.onLine</strong>：返回的是<code>布尔值</code>。<code>true</code>表示在线，<code>false</code>表示离线。只能简单判断网络的断开和连接状态</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">updateOnline</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>navigator<span class="token punctuation">.</span>onLine <span class="token operator">?</span> <span class="token string">&#39;online&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;offline&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;online&#39;</span><span class="token punctuation">,</span> updateOnline<span class="token punctuation">)</span><span class="token punctuation">;</span>
window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;offline&#39;</span><span class="token punctuation">,</span> updateOnline<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>navigator.connection</strong>：能监听到具体的网络变化（例如从4g变化到了3g），但不能监听到是离线状态还是在线状态</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> connection <span class="token operator">=</span> navigator<span class="token punctuation">.</span>connection <span class="token operator">||</span> navigator<span class="token punctuation">.</span>mozConnection <span class="token operator">||</span> navigator<span class="token punctuation">.</span>webkitConnection<span class="token punctuation">;</span>
<span class="token keyword">const</span> type <span class="token operator">=</span> connection<span class="token punctuation">.</span>effectiveType
connection<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;change&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token comment">// connection.effectiveType返回的是具体的网络状态：4g/3g/2g</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;connection type changed from &#39;</span> <span class="token operator">+</span> type <span class="token operator">+</span> <span class="token string">&#39; to &#39;</span> <span class="token operator">+</span> connection<span class="token punctuation">.</span>effectiveType<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,53);function V($,U){const a=p("ExternalLinkIcon");return o(),l("div",null,[S,n("p",null,[s("打开 "),n("a",T,[s("https://ai.taobao.com/"),e(a)]),s(" 在控制台 network 中可以看到如下")]),F,n("p",null,[n("a",A,[s("推荐阅读：使用 RAIL 模型衡量性能"),e(a)])]),E,n("ul",null,[n("li",null,[s("用空闲时间来完成一些延后的工作，如先加载页面可见的部分，然后利用空闲时间加载剩余部分，此处可以使用 "),n("a",L,[s("requestIdleCallback API"),e(a)])])]),j,n("ul",null,[n("li",null,[s("在手机设备上测试加载性能，选用中配的3G网络（400kb/s，400ms RTT），可以使用 "),n("a",R,[s("WebPageTest"),e(a)]),s(" 来测试")]),I,n("li",null,[n("a",C,[s("禁用渲染阻塞的资源，延后加载"),e(a)])]),n("li",null,[s("可以采用 "),n("a",N,[s("lazy load"),e(a)]),s("，"),n("a",P,[s("code-splitting"),e(a)]),s(" 等 "),n("a",D,[s("其他优化"),e(a)]),s(" 手段，让第一次加载的资源更少")])]),O,n("ul",null,[n("li",null,[n("a",z,[s("Chrome DevTools"),e(a)]),s("：开发调试、新能评测")]),n("li",null,[n("a",H,[s("Lighthouse"),e(a)]),s("：网站整体质量评估")]),n("li",null,[n("a",W,[s("WebPageTest"),e(a)]),s("：多测试地点、全面性能报告")])]),M,n("p",null,[n("a",B,[s("官网：https://www.webpagetest.org/"),e(a)])]),G])}const Y=i(y,[["render",V],["__file","index-02.html.vue"]]);export{Y as default};
