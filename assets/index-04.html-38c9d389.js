import{_ as p,M as o,p as c,q as i,R as n,t as a,N as t,a1 as e}from"./framework-e8cb8151.js";const l="/assets/image-20230726222952796-0b504dea.png",u="/assets/image-20230726233012193-5c3dce28.png",r="/assets/image-20230726233141053-f816586d.png",d="/assets/image-20230726234521542-1d552b48.png",k="/assets/image-20230726235757941-951db318.png",v={},m=e('<h1 id="_04-场景四-通用-nodejs-后台打通全栈第一脉" tabindex="-1"><a class="header-anchor" href="#_04-场景四-通用-nodejs-后台打通全栈第一脉" aria-hidden="true">#</a> 04-场景四：通用 Nodejs 后台打通全栈第一脉</h1><h2 id="_01-api-接口安全相关知识-加密-算法-https-最近学习" tabindex="-1"><a class="header-anchor" href="#_01-api-接口安全相关知识-加密-算法-https-最近学习" aria-hidden="true">#</a> 01： API 接口安全相关知识（加密&amp;算法&amp;HTTPS）最近学习</h2><h3 id="登录鉴权" tabindex="-1"><a class="header-anchor" href="#登录鉴权" aria-hidden="true">#</a> 登录鉴权</h3><p><img src="'+l+'" alt="image-20230726222952796"></p><h3 id="核心概念" tabindex="-1"><a class="header-anchor" href="#核心概念" aria-hidden="true">#</a> 核心概念</h3><ul><li>鉴权 !== 算法/加密 !== HTTPS</li><li>鉴权 <ul><li>基础鉴权</li><li>session/cookie</li><li>JWT</li><li>Oauth</li><li>…</li></ul></li><li>算法加密 <ul><li>Base64</li><li>MD5/SHA-1</li><li>DES/AES</li><li>RSA/ECC</li><li>…</li></ul></li><li>HTTPS <ul><li>SSL</li><li>HTTP 劫持</li><li>数据篡改</li><li>敏感信息</li><li>中间人</li><li>…</li></ul></li></ul><h3 id="常见的鉴权方式" tabindex="-1"><a class="header-anchor" href="#常见的鉴权方式" aria-hidden="true">#</a> 常见的鉴权方式</h3>',7),b={href:"https://juejin.cn/post/6993478996872658952",target:"_blank",rel:"noopener noreferrer"},h={href:"https://juejin.cn/post/6844904178456723464",target:"_blank",rel:"noopener noreferrer"},g=e('<ul><li>Session Cookie <ul><li>优点：较易扩展，简单</li><li>缺点：<strong>安全性低</strong>、性能低、服务端存储，多服务器同步 session 困难，跨平台困难</li></ul></li><li>JWT <ul><li>优点：易扩展、支持移动设备、跨应用调用、安全、承载信息丰富</li><li>缺点：<strong>刷新与过期处理</strong>，payload 不宜过大，中间人攻击</li></ul></li><li>Oauth： <ul><li>优点：开放、安全、简单、权限指定</li><li>缺点：<strong>需要增加授权服务器</strong>，增加网络请求</li></ul></li></ul><h3 id="什么是-jwt" tabindex="-1"><a class="header-anchor" href="#什么是-jwt" aria-hidden="true">#</a> 什么是 JWT</h3>',2),f={href:"https://zhuanlan.zhihu.com/p/86937325",target:"_blank",rel:"noopener noreferrer"},x=e(`<p>一个典型的 JWT 看起来是这个样子的：<code>xxxxx.yyyyy.zzzzz</code></p><ul><li><p>Header</p><ul><li><p>典型的由两部分组成：token 的类型（“JWT”）和算法名称（比如：HMAC SHA256 或者 RSA 等等）。</p></li><li><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;alg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;HS256&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;typ&quot;</span><span class="token operator">:</span> <span class="token string">&quot;JWT&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>Payload</p></li><li><p>Signature</p></li></ul><h4 id="jwt-特点" tabindex="-1"><a class="header-anchor" href="#jwt-特点" aria-hidden="true">#</a> JWT 特点</h4>`,3),w={href:"https://jwt.io/#debugger-io",target:"_blank",rel:"noopener noreferrer"},y=e(`<ul><li>防 CSRF（主要是伪造请求，带上 Cookie）</li><li>适合移动端应用</li><li><strong>无状态，编码数据</strong></li></ul><p>典型的 jwt 样子</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+u+'" alt="image-20230726233012193"></p><h4 id="jwt-工作原理" tabindex="-1"><a class="header-anchor" href="#jwt-工作原理" aria-hidden="true">#</a> JWT 工作原理</h4><blockquote><p>注意：中间人攻击，可以考虑通信信道加密</p></blockquote><p><img src="'+r+'" alt="image-20230726233141053"></p><h3 id="算法-加密" tabindex="-1"><a class="header-anchor" href="#算法-加密" aria-hidden="true">#</a> 算法/加密</h3><blockquote><p>算法中的指令描述的是一个计算，当其运行时能从一个初始状态和初始输入（可能为空）开始，经过一系列<strong>有限而清晰定义的状态</strong>最终产生输出并停止于一个状态</p></blockquote><blockquote><p><strong>数据加密</strong>的基本过程，就是对原来为<strong>明文</strong>的文件或者数据按照<strong>某种算法</strong>进行处理，使其成为<strong>不可读</strong>的一段代码，通常称为<strong>密文</strong>。通过这样的途径，来达到<strong>保护数据</strong>不被<strong>非法人窃取</strong>、阅读的目的</p></blockquote><p><img src="'+d+'" alt="image-20230726234521542"></p><h3 id="安全传输协议-https" tabindex="-1"><a class="header-anchor" href="#安全传输协议-https" aria-hidden="true">#</a> 安全传输协议 HTTPS</h3><p><strong>https</strong>(HyperText Transfer Protocol Secure) 超文本传输安全协议，常称为 HTTP over TLS 、HTTP over SSL 或者 HTTP Secure ，是一种通过计算机网络进行安全通信的传输协议</p><h3 id="api-安全设计" tabindex="-1"><a class="header-anchor" href="#api-安全设计" aria-hidden="true">#</a> API 安全设计</h3><ul><li>通信信道加密：使用 HTTPS</li><li>通信数据加密：密文 + 加密关键数据</li><li><strong>通信安全策略：授权中间层、尝试次数、过期策略。。。</strong></li></ul><h2 id="_02-nodejs-写接口-初识-web-框架-koa" tabindex="-1"><a class="header-anchor" href="#_02-nodejs-写接口-初识-web-框架-koa" aria-hidden="true">#</a> 02：Nodejs 写接口：初识 Web 框架 Koa</h2><h3 id="koa-简介" tabindex="-1"><a class="header-anchor" href="#koa-简介" aria-hidden="true">#</a> Koa 简介</h3>',17),_={href:"https://koa.bootcss.com/",target:"_blank",rel:"noopener noreferrer"},j=e('<ul><li>Koa 是一个新的 web 框架，由 Express 幕后的原班人马打造， 致力于成为 web 应用和 API 开发领域中的一个更小、更富有表现力、更健壮的基石。</li><li>通过利用 <strong>async 函数</strong>，Koa 帮你丢弃回调函数，并有力地增强错误处理。 Koa 并<strong>没有捆绑任何中间件</strong>，而是提供了一套优雅的方法，帮助您快速而愉快地编写服务端应用程序。</li></ul><h3 id="koa-核心概念" tabindex="-1"><a class="header-anchor" href="#koa-核心概念" aria-hidden="true">#</a> Koa 核心概念</h3><ul><li><strong>Koa Application(应用程序)</strong></li><li>Context(上下文)</li><li>Request(请求)、Response(响应)</li></ul><p><img src="'+k+`" alt="image-20230726235757941"></p><h3 id="看个代码" tabindex="-1"><a class="header-anchor" href="#看个代码" aria-hidden="true">#</a> 看个代码</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> Koa <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Koa</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token string">&#39;hello world !!&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;服务器启动了&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_03-request-属性、路由基础用法、app-use-链式处理" tabindex="-1"><a class="header-anchor" href="#_03-request-属性、路由基础用法、app-use-链式处理" aria-hidden="true">#</a> 03：Request 属性、路由基础用法、app.use 链式处理</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> Koa <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> Router <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-router&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Koa</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Router</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// 1. request、method、response</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>request<span class="token punctuation">)</span>
  ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token string">&#39;hello world !!&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 2. api url =&gt; function router?</span>
router<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/api&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>request<span class="token punctuation">)</span>
  ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token string">&#39;i am hello world !!&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 3. ctx async</span>

app<span class="token punctuation">.</span><span class="token function">user</span><span class="token punctuation">(</span>router<span class="token punctuation">.</span><span class="token function">routes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>router<span class="token punctuation">.</span><span class="token function">allowMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;服务器启动了&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// middleware.js</span>
<span class="token keyword">const</span> Koa <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Koa</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token function-variable function">middleware</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token keyword">async</span><span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;this is a middleware&#39;</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>path<span class="token punctuation">)</span>
  <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;this is a middleware ending&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> <span class="token function-variable function">middleware2</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token keyword">async</span><span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;this is a middleware2&#39;</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>path<span class="token punctuation">)</span>
  <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;this is a middleware2 ending&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> <span class="token function-variable function">middleware3</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token keyword">async</span><span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;this is a middleware3&#39;</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>path<span class="token punctuation">)</span>
  <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;this is a middleware3 ending&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// 调整这里的顺序，可以看到输出结果</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>middleware<span class="token punctuation">)</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>middleware2<span class="token punctuation">)</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>middleware3<span class="token punctuation">)</span>

app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;服务器启动了&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 执行 node middleware.js 文件，可以看到输出的顺序</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="koad-工作原理" tabindex="-1"><a class="header-anchor" href="#koad-工作原理" aria-hidden="true">#</a> Koad 工作原理</h3><ul><li><strong>执行的顺序：顺序执行</strong></li><li>回调的顺序：反向执行</li><li>先进先出</li></ul><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b5c5a6359c994812a746d448224509a0~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp" alt="img"></p><p>在上图中，洋葱内的每一层都表示一个独立的中间件，用于实现不同的功能，比如异常处理、缓存处理等。每次请求都会从左侧开始一层层地经过每层的中间件，当进入到最里层的中间件之后，就会从最里层的中间件开始逐层返回。因此对于每层的中间件来说，在一个 <strong>请求和响应</strong> 周期中，都有两个时机点来添加不同的处理逻辑。</p><h2 id="_04-koa-开发热加载、es6-语法支持" tabindex="-1"><a class="header-anchor" href="#_04-koa-开发热加载、es6-语法支持" aria-hidden="true">#</a> 04：Koa 开发热加载、ES6 语法支持</h2><ol><li><p>安装 nodemon</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> nodemon <span class="token parameter variable">-D</span>
// 直接执行 nodemon xxx.js 文件即可进行监听运行
nodemon index.js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>按照 webpack、babel 基本配置设置项目</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> webpack-cli <span class="token parameter variable">-D</span>
<span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-D</span> clean-webpack-plugin webpack-node-externals @babel/core @babel/node @babel/preset-enve babel-loader cross-env
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token comment">// 安装相关依赖</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;script&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token string">&quot;nodemon index.js&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;start:es6&quot;</span><span class="token operator">:</span> <span class="token string">&quot;babel-node src/index.js&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 支持 es6 语法</span>
    <span class="token property">&quot;dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;nodemon --exec babel-node src/index.js&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="_05-jwt-鉴权方式-koa-jwt-集成" tabindex="-1"><a class="header-anchor" href="#_05-jwt-鉴权方式-koa-jwt-集成" aria-hidden="true">#</a> 05：JWT 鉴权方式：koa-jwt 集成</h2>`,16),q={href:"https://www.npmjs.com/package/koa-jwt",target:"_blank",rel:"noopener noreferrer"},T=e(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> koa-jwt <span class="token parameter variable">-D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> Koa <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> jwt <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-jwt&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Koa</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">401</span> <span class="token operator">==</span> err<span class="token punctuation">.</span>status<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      ctx<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token number">401</span>
      ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token string">&#39;Protected resource, use Authorization header to get access\\n&#39;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> err
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// Middleware below this line is only reached if JWT token is valid</span>
<span class="token comment">// unless the URL starts with &#39;/public&#39;</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">jwt</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">secret</span><span class="token operator">:</span> <span class="token string">&#39;shared-secret&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unless</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\/public</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 排除这个地址，不对使用 jwt 验证</span>

<span class="token comment">// Unprotected middleware</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>url<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\/public</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token string">&#39;unprotected\\n&#39;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// Protected middleware</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>url<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\/api</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token string">&#39;protected\\n&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npm-run-all 同时执行多个脚本文件
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_06-动态路由加载-routes-入口优化-require-context" tabindex="-1"><a class="header-anchor" href="#_06-动态路由加载-routes-入口优化-require-context" aria-hidden="true">#</a> 06：动态路由加载：Routes 入口优化 require.context</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> moduleFils <span class="token operator">=</span> require<span class="token punctuation">.</span><span class="token function">context</span><span class="token punctuation">(</span><span class="token string">&#39;./modules&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span>

<span class="token keyword">const</span> modules <span class="token operator">=</span> moduleFiles<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">items<span class="token punctuation">,</span> path</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token function">moduleFiles</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
  items<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span>default<span class="token punctuation">)</span>
  <span class="token keyword">return</span> items
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">combineRoutes</span><span class="token punctuation">(</span>modules<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_07-项目作业" tabindex="-1"><a class="header-anchor" href="#_07-项目作业" aria-hidden="true">#</a> 07：项目作业</h2>`,6);function S(K,I){const s=o("ExternalLinkIcon");return c(),i("div",null,[m,n("blockquote",null,[n("p",null,[n("a",b,[a("4 种常见的鉴权方式及说明"),t(s)])]),n("p",null,[n("a",h,[a("https://juejin.cn/post/6844904178456723464"),t(s)])])]),g,n("blockquote",null,[n("p",null,[n("a",f,[a("五分钟带你了解啥是 JWT"),t(s)])])]),x,n("blockquote",null,[n("p",null,[n("a",w,[a("https://jwt.io/#debugger-io"),t(s)])])]),y,n("blockquote",null,[n("p",null,[n("a",_,[a("https://koa.bootcss.com/"),t(s)])])]),j,n("blockquote",null,[n("p",null,[n("a",q,[a("https://www.npmjs.com/package/koa-jwt"),t(s)])])]),T])}const P=p(v,[["render",S],["__file","index-04.html.vue"]]);export{P as default};
