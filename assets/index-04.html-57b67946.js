import{_ as e,M as p,p as c,q as o,R as n,t as s,N as t,a1 as l}from"./framework-e8cb8151.js";const i="/assets/image-20230904232433478-4c8c0a7b.png",u="/assets/image-20230905220451123-e8b4c844.png",r={},d=n("h1",{id:"vue-组件间的事件透传-04-vue3-x",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#vue-组件间的事件透传-04-vue3-x","aria-hidden":"true"},"#"),s(" Vue 组件间的事件透传 (04)--Vue3.x")],-1),k=n("h2",{id:"官方文档",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#官方文档","aria-hidden":"true"},"#"),s(" 官方文档")],-1),v=n("code",null,"v-on",-1),g=n("code",null,".native",-1),m={href:"https://v3-migration.vuejs.org/zh/breaking-changes/emits-option",target:"_blank",rel:"noopener noreferrer"},h=n("code",null,"emits",-1),b=n("p",null,[s("因此，对于子组件中"),n("em",null,"未"),s("被定义为组件触发的所有事件监听器，Vue 现在将把它们作为原生事件监听器添加到子组件的根元素中 (除非在子组件的选项中设置了 "),n("code",null,"inheritAttrs: false"),s(")")],-1),_={href:"https://v3-migration.vuejs.org/zh/breaking-changes/v-on-native-modifier-removed.html#_3-x-%E8%AF%AD%E6%B3%95",target:"_blank",rel:"noopener noreferrer"},f=l(`<h2 id="父子组件" tabindex="-1"><a class="header-anchor" href="#父子组件" aria-hidden="true">#</a> 父子组件</h2><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>// parent.vue
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    我是父组件
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Child</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleClick<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Child</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> Child <span class="token keyword">from</span> <span class="token string">&#39;./child.vue&#39;</span>

<span class="token keyword">const</span> <span class="token function-variable function">handleClick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;parent&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;parent-demo&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleClick<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>我是子组件<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;child-index&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token function">defineProps</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
    <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&#39;默认name&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token function-variable function">handleClick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;child&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从上面看到我们在 <code>chiild.vue</code> 中绑定了 <code>click</code> 事件，然后在 <code>parent.vue</code> 中也绑定了 <code>click</code> 事件，那么会是如何执行呢？？？？</p><blockquote><p>注意：我们在 Vue3.x 中并不需要在父组件使用 .native 修饰符来给子组件绑定原生事件，而是可以直接使用 @click 等来绑定原生事件</p></blockquote><h2 id="效果" tabindex="-1"><a class="header-anchor" href="#效果" aria-hidden="true">#</a> 效果</h2><p>我们在浏览器中点击子组件时候，触发 log 如下</p><p><img src="`+i+'" alt="image-20230904232433478"></p><p><strong>先触发子组件事件，然后再触发父组件绑定的事件</strong></p><h2 id="控制台中查看-event-中-的事件顺序" tabindex="-1"><a class="header-anchor" href="#控制台中查看-event-中-的事件顺序" aria-hidden="true">#</a> 控制台中查看 Event 中 的事件顺序</h2><p>结果如下：</p><p><img src="'+u+'" alt="image-20230905220451123"></p><p>可以看到，在事件 click 中的 value 值中，它的值是一个数组，分别对应我们绑定的两个事件回调。顺序执行，先执行 0 对应的子组件中绑定的事件回调，在执行 1 对应的父组件中绑定的事件回调。</p><h2 id="结论" tabindex="-1"><a class="header-anchor" href="#结论" aria-hidden="true">#</a> 结论</h2><ol><li>如果我们想在父组件中，给引入的子组件绑定事件（注意：需要原生支持），直接绑定即可</li><li>注意执行顺序：<strong>先执行子组件中绑定的事件回调，再触发父组件中绑定的事件回调</strong></li><li><code>Vue3.x</code> 中 <code>.native</code> 修饰符已经删除了</li></ol>',15);function x(y,q){const a=p("ExternalLinkIcon");return c(),o("div",null,[d,k,n("blockquote",null,[n("p",null,[v,s(" 的 "),g,s(" 修饰符已被移除。同时，"),n("a",m,[s("新增的 "),h,s(" 选项"),t(a)]),s("允许子组件定义真正会被触发的事件。")]),b,n("p",null,[n("a",_,[s("官方文档"),t(a)])])]),f])}const V=e(r,[["render",x],["__file","index-04.html.vue"]]);export{V as default};
