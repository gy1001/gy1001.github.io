import{_ as l,M as o,p as d,q as r,R as a,t as e,N as s,a1 as i}from"./framework-e8cb8151.js";const t="/assets/image-20231209201104438-a91bfb58.png",c="/assets/image-20231209201307595-eaf5c692.png",p="/assets/78a2c6169d2946d3bf74416c574a64f6-b3e399f0.png",u={},h=i(`<h1 id="_02-环境搭建" tabindex="-1"><a class="header-anchor" href="#_02-环境搭建" aria-hidden="true">#</a> 02-环境搭建</h1><h2 id="开发环境介绍" tabindex="-1"><a class="header-anchor" href="#开发环境介绍" aria-hidden="true">#</a> 开发环境介绍</h2><p>https://reactnative.cn/docs/environment-setup</p><h3 id="环境选择" tabindex="-1"><a class="header-anchor" href="#环境选择" aria-hidden="true">#</a> 环境选择</h3><ul><li>MACOS、windows、Linux</li><li>Android IOS</li></ul><h3 id="开发环境搭建" tabindex="-1"><a class="header-anchor" href="#开发环境搭建" aria-hidden="true">#</a> 开发环境搭建</h3><ul><li>React <ul><li>Node</li><li>watchman</li><li>vscode</li></ul></li><li>Native <ul><li>jdk</li><li>AndroidStudio</li><li>SDK</li><li>模拟器</li></ul></li></ul><h2 id="安装-node-和-watchman" tabindex="-1"><a class="header-anchor" href="#安装-node-和-watchman" aria-hidden="true">#</a> 安装 node 和 watchman</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>brew <span class="token function">install</span> <span class="token function">node</span>
brew <span class="token function">install</span> watchman
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="安装-vscode" tabindex="-1"><a class="header-anchor" href="#安装-vscode" aria-hidden="true">#</a> 安装 VSCODE</h2>`,10),v={href:"https://code.visualstudio.com/",target:"_blank",rel:"noopener noreferrer"},b=i(`<h2 id="安装-jdk-和-androidstudio" tabindex="-1"><a class="header-anchor" href="#安装-jdk-和-androidstudio" aria-hidden="true">#</a> 安装 JDK 和 AndroidStudio</h2><h3 id="安装-jdk" tabindex="-1"><a class="header-anchor" href="#安装-jdk" aria-hidden="true">#</a> 安装 JDK</h3><ul><li>HomeBrew 安装</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>brew <span class="token function">install</span> adopopenjdk/openjdk/adoptopenjdk8
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,4),m={href:"https://www.oracle.com/java/technologies/downloads/#java11",target:"_blank",rel:"noopener noreferrer"},k=a("li",null,"注意：如果是 m1 就选择 arm64 文件安装包",-1),g=a("li",null,"如果是 intel 就选择 x64 文件安装包",-1),x=a("h3",{id:"安装-android-studio",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#安装-android-studio","aria-hidden":"true"},"#"),e(" 安装 Android Studio")],-1),_={href:"https://developer.android.google.cn/studio?hl=zh-cn",target:"_blank",rel:"noopener noreferrer"},f=i(`<h3 id="配置-sdk-和-tools" tabindex="-1"><a class="header-anchor" href="#配置-sdk-和-tools" aria-hidden="true">#</a> 配置 SDK 和 Tools</h3><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>preference =&gt; Languages &amp; Frameworks =&gt; Android Sdk
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="配置环境变量" tabindex="-1"><a class="header-anchor" href="#配置环境变量" aria-hidden="true">#</a> 配置环境变量</h2><ul><li>配置 sdk 环境变量</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">ANDROID_HOME</span><span class="token operator">=</span><span class="token environment constant">$HOME</span>/Library/Android/sdk
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span><span class="token variable">$ANDROID_HOME</span>/emulator
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span><span class="token variable">$ANDROID_HOME</span>/tools
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span><span class="token variable">$ANDROID_HOME</span>/tools/bin
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span><span class="token variable">$ANDROID_HOME</span>/platform-tools
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>重新启动配置文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">source</span> ~/.zshrc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h2 id="创建安卓模拟器" tabindex="-1"><a class="header-anchor" href="#创建安卓模拟器" aria-hidden="true">#</a> 创建安卓模拟器</h2><ul><li>常规创建方式</li></ul><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>DeviceManager =&gt; Create Device
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="m1-芯片创建安卓模拟器" tabindex="-1"><a class="header-anchor" href="#m1-芯片创建安卓模拟器" aria-hidden="true">#</a> M1 芯片创建安卓模拟器</h3><ul><li>下载对应 SDK <ul><li>SDK platform 勾选 Sv2 选项并下载</li></ul></li><li>下载对应 SDK Tools <ul><li>SDK Tools 勾选 Android Emulator、Android SDK Platform-Tools、底部三个 Layout Inspector 选项</li></ul></li><li>创建模拟器 <ul><li>DeviceManager =&gt; Create Device 设备类型选择 phone, 屏幕尺寸随便选择，系统镜像选择 SV2 选项，一路 next 完成</li></ul></li></ul><h2 id="创建新项目" tabindex="-1"><a class="header-anchor" href="#创建新项目" aria-hidden="true">#</a> 创建新项目</h2><ul><li><p>初始化项目（最新 RN 版本）:推荐</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>npx react-native init Demo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>初始化项目（指定 RN 版本）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>npx react-native init Demo <span class="token parameter variable">--version</span> X.XX.X
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h3 id="开发安装项目依赖" tabindex="-1"><a class="header-anchor" href="#开发安装项目依赖" aria-hidden="true">#</a> 开发安装项目依赖</h3><ul><li>安装 js 依赖 <ul><li><code>npm install</code></li></ul></li><li>安装原生依赖 <ul><li>用 android studio 打开 Demo/android 文件夹(注意之前下载过 jdk11 或者更高，我们在 file =&gt; project structure 中需要选择 SDK location =&gt; gradle settings =&gt; 选择对应的 jdk 版本 =&gt; 点击 ok 即可)</li><li><code>gradle sync</code></li></ul></li></ul><h3 id="运行应用程序" tabindex="-1"><a class="header-anchor" href="#运行应用程序" aria-hidden="true">#</a> 运行应用程序</h3><ul><li><p>npm run start</p><p><img src="`+t+'" alt="image-20231209201104438"></p></li><li><p>然后输入 a</p></li><li><p>就可以在 android studio 的 模拟器中查看到相应界面了（前提打开 device manager 中的模拟机运行起来）</p></li></ul><p><img src="'+c+'" alt="image-20231209201307595"></p><h3 id="注意报错" tabindex="-1"><a class="header-anchor" href="#注意报错" aria-hidden="true">#</a> 注意报错</h3><h4 id="_1-brew-update-更新时-shallow-clone" tabindex="-1"><a class="header-anchor" href="#_1-brew-update-更新时-shallow-clone" aria-hidden="true">#</a> 1. brew update 更新时 shallow clone</h4>',20),j={href:"https://zhuanlan.zhihu.com/p/351199589",target:"_blank",rel:"noopener noreferrer"},w=i(`<h4 id="_2-react-native-运行报错-可以运行如下命令-进行检查" tabindex="-1"><a class="header-anchor" href="#_2-react-native-运行报错-可以运行如下命令-进行检查" aria-hidden="true">#</a> 2. React Native 运行报错，可以运行如下命令，进行检查</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>npx react-native doctor
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后根据提示进行修复</p><h4 id="_3-mac-os-如何彻底卸载各版本的-jdk-java-开发环境" tabindex="-1"><a class="header-anchor" href="#_3-mac-os-如何彻底卸载各版本的-jdk-java-开发环境" aria-hidden="true">#</a> 3. Mac OS 如何彻底卸载各版本的 jdk（java 开发环境）</h4><ul><li>列出当前的 jdk 安装列表，如下命令：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>demo@Mac ~ $ <span class="token function">ls</span> /Library/Java/JavaVirtualMachines/
jdk-11.0.10.jdk		jdk-11.0.3.jdk		jdk1.7.0_80.jdk		jdk1.8.0_241.jdk
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>删除 jdk 安装列表中的 jdk 版本，如下命令：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>demo@Mac ~ $ <span class="token function">sudo</span> <span class="token function">rm</span> <span class="token parameter variable">-rf</span> /Library/Java/JavaVirtualMachines/jdk-11.0.3.jdk
Password:
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>输入密码，删除成功</p><h4 id="_4-步骤-2-输入-java-version-命令-查看当前系统上已安装的-jdk-版本。" tabindex="-1"><a class="header-anchor" href="#_4-步骤-2-输入-java-version-命令-查看当前系统上已安装的-jdk-版本。" aria-hidden="true">#</a> 4. 步骤 2：输入 java -version 命令，查看当前系统上已安装的 JDK 版本。</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">java</span> <span class="token parameter variable">-version</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_5-mac-端安装-cocoapods-时出错" tabindex="-1"><a class="header-anchor" href="#_5-mac-端安装-cocoapods-时出错" aria-hidden="true">#</a> 5. MAC 端安装 cocoapods 时出错</h4><blockquote><p>可能跟 ruby 版本有关，我的是 2.7.2，需要升级到 3.0.0 以上版本</p></blockquote><p>按照如下文档升级，并配置环境变量</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 首先，检查您使用的Ruby版本。</span>
ruby <span class="token parameter variable">-v</span>

<span class="token function">which</span>  ruby
usr/bin/ruby

<span class="token comment"># 现在使用Homebrew安装最新的Ruby。</span>
brew <span class="token function">install</span> ruby

<span class="token comment"># 根据提示运行图中提示的三行命令 ，按照说明设置PATH。</span>
<span class="token builtin class-name">echo</span> <span class="token string">&#39;export PATH=&quot;/usr/local/opt/ruby/bin:$PATH&quot;&#39;</span> <span class="token operator">&gt;&gt;</span> ~/.zshrc
<span class="token builtin class-name">echo</span> <span class="token string">&#39;export LDFLAGS=&quot;-L/usr/local/opt/ruby/lib&quot;&#39;</span> <span class="token operator">&gt;&gt;</span> ~/.zshrc
<span class="token builtin class-name">echo</span> <span class="token string">&#39;export CPPFLAGS=&quot;-I/usr/local/opt/ruby/include&quot;&#39;</span> <span class="token operator">&gt;&gt;</span> ~/.zshrc
<span class="token builtin class-name">echo</span> <span class="token string">&#39;export PKG_CONFIG_PATH=&quot;/usr/local/opt/ruby/lib/pkgconfig&quot;&#39;</span>  <span class="token operator">&gt;&gt;</span> ~/.zshrc

<span class="token builtin class-name">source</span> ~/.zshrc

<span class="token comment"># 最后，检查Ruby版本以确保它已升级。</span>
ruby <span class="token parameter variable">-v</span>

<span class="token comment"># 在进行 npx react-native doctor ，然后在进行安装修复</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15),D={href:"https://www.jianshu.com/p/beb6b5c5e109",target:"_blank",rel:"noopener noreferrer"},A=i(`<h4 id="_6-安装-cocoapods-后-npx-react-native-doctor仍然报错-提示未安装-cocoapods" tabindex="-1"><a class="header-anchor" href="#_6-安装-cocoapods-后-npx-react-native-doctor仍然报错-提示未安装-cocoapods" aria-hidden="true">#</a> 6. 安装 cocoapods 后，<code>npx react-native doctor</code>仍然报错，提示未安装 cocoapods</h4><blockquote><p>使用如下相应命令，重新安装</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> gem <span class="token function">install</span> cocoapods <span class="token punctuation">(</span>osx <span class="token number">10.11</span>以前<span class="token punctuation">)</span>

<span class="token function">sudo</span> gem <span class="token function">install</span> <span class="token parameter variable">-n</span> /usr/local/bin cocoapods （10.11后苹果升级了安全策略）
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重新运行 <code>npx react-native doctor</code> 命令，提示成功。安装配置完成</p><h4 id="_7-安装-cocoapods-后-npx-react-native-doctor通过后-运行-ios-终端报错" tabindex="-1"><a class="header-anchor" href="#_7-安装-cocoapods-后-npx-react-native-doctor通过后-运行-ios-终端报错" aria-hidden="true">#</a> 7. 安装 cocoapods 后，<code>npx react-native doctor</code>通过后，运行 ios 终端报错</h4><blockquote><p>note: Building targets in dependency order</p><p>/Users/gaoyuan/Code/learn/RNDemo/ios/Pods/Target Support Files/Pods-RNDemo/Pods-RNDemo.debug.xcconfig:1:1: error: unable to open configuration settings &gt; file</p></blockquote><p>用 xcode 打开 ios 文件夹下的 <code>RNDemo.xcodeproj</code>, 发现项目中的 pod 文件一片红</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 在此过程中，可能需要翻墙，可以通过设置终端代理来解决</span>
<span class="token comment"># 例子： export https_proxy=http://127.0.0.1:7890 http_proxy=http://127.0.0.1:7890 all_proxy=socks5://127.0.0.1:7890</span>
pod <span class="token function">install</span>

pod update（pod <span class="token function">install</span> 不行再执行）
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后再运行 <code>npm run start</code> 后选择 i，即可</p><blockquote><p>注意： 如果报错，就完全退出 xcode 和 模拟器，在重试脚本 npm run start</p></blockquote><h4 id="_8-xcode-select-error-tool-xcodebuild-requires-xcode-but-active-developer-directory-library-developer-commandlinetools-is-a-command-line-tools-instance" tabindex="-1"><a class="header-anchor" href="#_8-xcode-select-error-tool-xcodebuild-requires-xcode-but-active-developer-directory-library-developer-commandlinetools-is-a-command-line-tools-instance" aria-hidden="true">#</a> 8. xcode-select: error: tool &#39;xcodebuild&#39; requires Xcode, but active developer directory &#39;/Library/Developer/CommandLineTools&#39; is a command line tools instance</h4><p>博主找到的原因是：</p><p>升级 Xcode 后，不是系统默认位置。我想我是直接安装最新版的 xcode 应该也是这样的问题。</p><p>解决办法</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 修改xcode指向的目录</span>
xcode-select <span class="token parameter variable">-s</span> /Applications/Xcode.app/Contents/Developer
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_9-运行-rn-项目报错-android-sdk-提示-versions-found-n-a" tabindex="-1"><a class="header-anchor" href="#_9-运行-rn-项目报错-android-sdk-提示-versions-found-n-a" aria-hidden="true">#</a> 9. 运行 RN 项目报错：Android SDK 提示 Versions found: N/A</h4>`,16),y={href:"https://blog.csdn.net/G1ANTS/article/details/125485177",target:"_blank",rel:"noopener noreferrer"},N=a("p",null,[a("img",{src:p,alt:"img"})],-1);function S(q,H){const n=o("ExternalLinkIcon");return d(),r("div",null,[h,a("p",null,[a("a",v,[e("https://code.visualstudio.com/"),s(n)])]),b,a("ul",null,[a("li",null,[e("官网下载（推荐） "),a("ul",null,[a("li",null,[a("a",m,[e("https://www.oracle.com/java/technologies/downloads/#java11"),s(n)])]),k,g])])]),x,a("p",null,[a("a",_,[e("https://developer.android.google.cn/studio?hl=zh-cn"),s(n)])]),f,a("p",null,[a("a",j,[e("brew update 更新时 shallow clone"),s(n)])]),w,a("p",null,[a("a",D,[e("https://www.jianshu.com/p/beb6b5c5e109"),s(n)])]),A,a("p",null,[a("a",y,[e("运行RN项目报错：Android SDK提示Versions found: N/A"),s(n)])]),N])}const T=l(u,[["render",S],["__file","index-02.html.vue"]]);export{T as default};
