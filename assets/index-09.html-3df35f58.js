import{_ as t,M as p,p as o,q as c,R as n,t as a,N as i,a1 as s}from"./framework-e8cb8151.js";const l={},r=s(`<h1 id="_09-hmr-原理解析-vue-cli-核心源码解析" tabindex="-1"><a class="header-anchor" href="#_09-hmr-原理解析-vue-cli-核心源码解析" aria-hidden="true">#</a> 09-HMR 原理解析: vue-cli 核心源码解析</h1><h2 id="_01-核心中间件-webpack-dev-middleware实例化源码解析" tabindex="-1"><a class="header-anchor" href="#_01-核心中间件-webpack-dev-middleware实例化源码解析" aria-hidden="true">#</a> 01: 核心中间件：webpack-dev-middleware实例化源码解析</h2><p>上一章节了解了中间件的基本知识，再次看到<code>vue-elm/dev-server.js</code>就可以看到这里面有两个核心的中间件</p><ul><li>webpack-dev-middleware: 核心用途，把 webpack 的输出路径改为内存中，并且获取资源的路径也通过内存中获取</li><li>webpack-hot-middleware: 帮助我们实现 HMR 功能</li></ul><h2 id="_02-devmiddleware中间件核心处理逻辑解析" tabindex="-1"><a class="header-anchor" href="#_02-devmiddleware中间件核心处理逻辑解析" aria-hidden="true">#</a> 02：devMiddleware中间件核心处理逻辑解析</h2><p>我们先看 <code>devMiddleware</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> webpack <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;webpack&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> webpackConfig <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./webpack.dev.conf&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> compiler <span class="token operator">=</span> <span class="token function">webpack</span><span class="token punctuation">(</span>webpackConfig<span class="token punctuation">)</span>
<span class="token comment">// 核心用途</span>
<span class="token comment">// 1. 修改 webpack 的 fs 为 MemoryFileSystem 并将构建结果全部存储在内存中</span>
<span class="token comment">// 2. 实现请求中间件，用于处理所有资源请求，并到内存中查询相应文件并返回</span>
<span class="token keyword">var</span> devMiddleware <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;webpack-dev-middleware&#39;</span><span class="token punctuation">)</span><span class="token punctuation">(</span>compiler<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">publicPath</span><span class="token operator">:</span> webpackConfig<span class="token punctuation">.</span>output<span class="token punctuation">.</span>publicPath<span class="token punctuation">,</span>
    <span class="token literal-property property">stats</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">colors</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token literal-property property">chunks</span><span class="token operator">:</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">var</span> server <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
server<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>devMiddleware<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_03-深入讲解hmr实现原理" tabindex="-1"><a class="header-anchor" href="#_03-深入讲解hmr实现原理" aria-hidden="true">#</a> 03：深入讲解HMR实现原理</h2><h3 id="webpack-hot-middleware" tabindex="-1"><a class="header-anchor" href="#webpack-hot-middleware" aria-hidden="true">#</a> webpack-hot-middleware</h3><p>接下里继续看<code>hotMiddleware</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 核心功能：实现 HMR（HotModuleReplacement）机制</span>
<span class="token comment">// 复杂点：</span>
<span class="token comment">// 1. 需要客户端和服务端同时配合实现（HotModuleReplacementPlugin 和 webpack-hot-middleware联动使用）</span>
<span class="token comment">// 2. 客户端和服务端双向通信机制复杂 </span>
<span class="token keyword">var</span> hotMiddleware <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;webpack-hot-middleware&#39;</span><span class="token punctuation">)</span><span class="token punctuation">(</span>compiler<span class="token punctuation">)</span>
    <span class="token comment">// force page reload when html-webpack-plugin template changes</span>
compiler<span class="token punctuation">.</span><span class="token function">plugin</span><span class="token punctuation">(</span><span class="token string">&#39;compilation&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">compilation</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    compilation<span class="token punctuation">.</span><span class="token function">plugin</span><span class="token punctuation">(</span><span class="token string">&#39;html-webpack-plugin-after-emit&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> cb</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        hotMiddleware<span class="token punctuation">.</span><span class="token function">publish</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token string">&#39;reload&#39;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token function">cb</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hmr-hotmodulereplacement-原理" tabindex="-1"><a class="header-anchor" href="#hmr-hotmodulereplacement-原理" aria-hidden="true">#</a> HMR（HotModuleReplacement）原理</h3><ol><li>webpack 监听 bundle 的变化并进行自动构建</li><li>webpack 构建时通过 HotModuleReplacementPlugin 生成 hot-update.json 和 hot-update.js</li><li>webpack 将构建结果 bundle 存入 webpack-dev-middleware 的 MemoryFileSystem</li><li>webpack-hot-middle 服务端和客户端通过 EventSource 进行双向通信，当 bundle 发生变化时，服务端通知客户端，状态分别为 building、built、sync</li><li>webpack-hot-middleware 客户端接收到服务端状态为 sync 时，调用 processMessge 方法</li><li>processMessage 方法调用 HRM runtime 的 hotCheck 方法</li><li>HRM runtime 模块会 fetch hot-update.js 和 hot-update.json 并完成 HRM</li></ol><h3 id="html5-server-sent-events" tabindex="-1"><a class="header-anchor" href="#html5-server-sent-events" aria-hidden="true">#</a> HTML5 Server-Sent Events</h3>`,14),d={href:"https://www.runoob.com/html/html5-serversentevents.html",target:"_blank",rel:"noopener noreferrer"},u=s(`<p>服务器端事件流的语法是非常简单的。把 &quot;Content-Type&quot; 报头设置为 &quot;text/event-stream&quot;。现在，您可以开始发送事件流了。</p><p>如何通过服务端写入 evnet-stream ？</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> headers <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string-property property">&quot;Access-Control-Allow-Origin&quot;</span><span class="token operator">:</span> <span class="token string">&quot;*&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;Content-Type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;text/event-stream;charset=utf-8&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;Cache-Control&quot;</span><span class="token operator">:</span> <span class="token string">&quot;no-cache, no-transform&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;X-Accel-Buffering&quot;</span><span class="token operator">:</span> <span class="token string">&quot;no&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_04-hotmiddleware源码执行流程详解" tabindex="-1"><a class="header-anchor" href="#_04-hotmiddleware源码执行流程详解" aria-hidden="true">#</a> 04：hotMiddleware源码执行流程详解</h2><h2 id="_05-hmr客户端实现原理详解" tabindex="-1"><a class="header-anchor" href="#_05-hmr客户端实现原理详解" aria-hidden="true">#</a> 05：HMR客户端实现原理详解</h2><h2 id="_06-vue-cli构建源码流程梳理" tabindex="-1"><a class="header-anchor" href="#_06-vue-cli构建源码流程梳理" aria-hidden="true">#</a> 06：vue-cli构建源码流程梳理</h2>`,6);function k(v,m){const e=p("ExternalLinkIcon");return o(),c("div",null,[r,n("p",null,[a("[参考教程]"),n("a",d,[a("https://www.runoob.com/html/html5-serversentevents.html"),i(e)])]),u])}const b=t(l,[["render",k],["__file","index-09.html.vue"]]);export{b as default};
