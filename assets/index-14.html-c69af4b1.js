import{_ as t,M as p,p as e,q as o,R as n,t as c,N as i,a1 as s}from"./framework-e8cb8151.js";const l={},u=s(`<h1 id="_14-工程化脚手架-进阶实战——深入脚手架框架-commander-脚手架框架搭建" tabindex="-1"><a class="header-anchor" href="#_14-工程化脚手架-进阶实战——深入脚手架框架-commander-脚手架框架搭建" aria-hidden="true">#</a> 14-工程化脚手架：进阶实战——深入脚手架框架 Commander+脚手架框架搭建</h1><h2 id="_01-脚手架框架" tabindex="-1"><a class="header-anchor" href="#_01-脚手架框架" aria-hidden="true">#</a> 01: 脚手架框架</h2><ol><li><p>创建文件夹<code>imooc-build</code></p></li><li><p>执行初始化命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> init <span class="token parameter variable">-y</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>修改<code>package.json</code>文件内容，如下</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;imooc-build&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0.0.1&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;main&quot;</span><span class="token operator">:</span> <span class="token string">&quot;index.js&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;test&quot;</span><span class="token operator">:</span> <span class="token string">&quot;echo \\&quot;Error: no test specified\\&quot; &amp;&amp; exit 1&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;keywords&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;author&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;license&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ISC&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;bin&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;imooc-build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./bin/imooc-build.js&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>新建<code>bin/imooc-build.js</code>文件，内容如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token hashbang comment">#!/usr/bin/env node</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;imooc-build&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>执行以下命令创建本地连接</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">npm</span> <span class="token function">link</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>再次执行<code>imooc-build</code>可以看到如下内容</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yuangao at yuandeMac-mini <span class="token keyword">in</span> /usr/local/bin
$ imooc-build
imooc-build
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="_02-脚手架框架之框架搭建-参数解析" tabindex="-1"><a class="header-anchor" href="#_02-脚手架框架之框架搭建-参数解析" aria-hidden="true">#</a> 02: 脚手架框架之框架搭建+参数解析</h2>`,4),r=n("p",null,"这里我们要使用到一个 commander 库，因为上一节中的脚手架参数获取方式不够灵活，实际开发很少会使用",-1),k={href:"https://www.npmjs.com/package/commander",target:"_blank",rel:"noopener noreferrer"},d=s(`<ol><li><p>安装<code>commander</code>库</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> commander <span class="token parameter variable">-D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>修改<code>bin/imooc-build.js</code>文件，内容如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token hashbang comment">#!/usr/bin/env node</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> program <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;commander&#39;</span><span class="token punctuation">)</span>
program<span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&#39;--first&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&#39;-s, --separator &lt;char&gt;&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 主持 --fist -s或者 --separator char参数</span>
program<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> options <span class="token operator">=</span> program<span class="token punctuation">.</span><span class="token function">opts</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>运行以下命令，结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ imooc-build <span class="token parameter variable">--first</span> <span class="token parameter variable">-s</span>
error: option <span class="token string">&#39;-s, --separator &lt;char&gt;&#39;</span> argument missing // <span class="token parameter variable">-s</span> 后面必须需要参数
yuangao at yuandeMac-mini <span class="token keyword">in</span> ~/Desktop/imooc-build
$ imooc-build <span class="token parameter variable">--first</span> <span class="token parameter variable">-s</span> <span class="token builtin class-name">test</span>
<span class="token punctuation">{</span> first: true, separator: <span class="token string">&#39;test&#39;</span> <span class="token punctuation">}</span>  // 输出 options 参数
$ imooc-build <span class="token parameter variable">-s</span> <span class="token parameter variable">--separator</span>
<span class="token punctuation">{</span> separator: <span class="token string">&#39;--separator&#39;</span> <span class="token punctuation">}</span>
$ imooc-build <span class="token parameter variable">--separator</span> <span class="token parameter variable">-s</span>
<span class="token punctuation">{</span> separator: <span class="token string">&#39;-s&#39;</span> <span class="token punctuation">}</span>     // <span class="token parameter variable">-s</span>  <span class="token parameter variable">--seperator</span> 是一样的效果，且后面的是前面的参数
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>继续按照官方实例，修改<code>bin/imooc-build.js</code>文件</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token hashbang comment">#!/usr/bin/env node</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> program <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;commander&#39;</span><span class="token punctuation">)</span>
program<span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&#39;--first&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&#39;-s, --separator &lt;char&gt;&#39;</span><span class="token punctuation">)</span>
program<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> options <span class="token operator">=</span> program<span class="token punctuation">.</span><span class="token function">opts</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// 分割参数的个数</span>
<span class="token keyword">const</span> limit <span class="token operator">=</span> options<span class="token punctuation">.</span>first <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token keyword">undefined</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>program<span class="token punctuation">.</span>args<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>program<span class="token punctuation">.</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>separator<span class="token punctuation">,</span> limit<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>运行以下命令，结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yuangao at yuandeMac-mini <span class="token keyword">in</span> ~/Desktop/imooc-build
$ imooc-build <span class="token parameter variable">-s</span> / <span class="token parameter variable">--first</span> a/b/c
<span class="token punctuation">[</span> <span class="token string">&#39;a/b/c&#39;</span> <span class="token punctuation">]</span> // program.args 的值
<span class="token punctuation">[</span> <span class="token string">&#39;a&#39;</span> <span class="token punctuation">]</span>
上述命令可以解释为：以 / 为参数 分割 /a/b/c 截取1个数

$ imooc-build <span class="token parameter variable">--fitst</span> a/b/c <span class="token parameter variable">-s</span> /
error: unknown option <span class="token string">&#39;--fitst&#39;</span>
<span class="token punctuation">(</span>Did you mean --first?<span class="token punctuation">)</span>
这里脚手架会帮助我们匹配最接近的命令参数，并进行提示
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="_03-脚手架框架之-subcommand-解析" tabindex="-1"><a class="header-anchor" href="#_03-脚手架框架之-subcommand-解析" aria-hidden="true">#</a> 03：脚手架框架之 subcommand 解析</h2><ol><li><p>修改<code>bin/imooc-build.js</code>为以下内容</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token hashbang comment">#!/usr/bin/env node</span>
<span class="token comment">// const { program } = require(&#39;commander&#39;)</span>
<span class="token comment">// program.option(&#39;--first&#39;).option(&#39;-s, --separator &lt;char&gt;&#39;)</span>
<span class="token comment">// program.parse()</span>
<span class="token comment">// const options = program.opts()</span>
<span class="token comment">// const limit = options.first ? 1 : undefined</span>
<span class="token comment">// console.log(program.args)</span>
<span class="token comment">// console.log(program.args[0].split(options.separator, limit))</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> Command <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;commander&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> program <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Command</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
program
  <span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string">&#39;imooc-build&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">&#39;CLI to build javascript project&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token string">&#39;0.0.1&#39;</span><span class="token punctuation">)</span>
program<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>然后我们打开终端，执行命令：可以发现目前这个脚本已经具有了<code>-h(其实就是--help)</code>以及<code>-V(其实就是--version)</code>的命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yuangao at yuandeMac-mini <span class="token keyword">in</span> ~/Desktop/imooc-build
$ imooc-build <span class="token parameter variable">-h</span>
Usage: imooc-build <span class="token punctuation">[</span>options<span class="token punctuation">]</span>

CLI to build javascript project

Options:
  -V, <span class="token parameter variable">--version</span>  output the version number
  -h, <span class="token parameter variable">--help</span>     display <span class="token builtin class-name">help</span> <span class="token keyword">for</span> <span class="token builtin class-name">command</span>
$ imooc-build <span class="token parameter variable">--help</span>
Usage: imooc-build <span class="token punctuation">[</span>options<span class="token punctuation">]</span>

CLI to build javascript project

Options:
  -V, <span class="token parameter variable">--version</span>  output the version number
  -h, <span class="token parameter variable">--help</span>     display <span class="token builtin class-name">help</span> <span class="token keyword">for</span> <span class="token builtin class-name">command</span>


$ imooc-build <span class="token parameter variable">-V</span>
<span class="token number">0.0</span>.1
$ imooc-build <span class="token parameter variable">--version</span>
<span class="token number">0.0</span>.1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>继续修改<code>bin/imooc-build.js</code>，内容如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token hashbang comment">#!/usr/bin/env node</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> Command <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;commander&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> program <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Command</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
program
  <span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string">&#39;imooc-build&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">&#39;CLI to build javascript project&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token string">&#39;0.0.1&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 增加如下内容</span>
program
  <span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&#39;split&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">&#39;Split string to array&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">argument</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;string&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;string to split&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&#39;--first&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;display just the first substring&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">options</span><span class="token punctuation">(</span><span class="token string">&#39;-s, --separator &lt;char&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;separator char&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">args<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;args&#39;</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span>
    <span class="token keyword">const</span> limit <span class="token operator">=</span> options<span class="token punctuation">.</span>first <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token keyword">undefined</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>separator<span class="token punctuation">,</span> limit<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

program<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>然后我们打开终端，执行命令，结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ imooc-build <span class="token function">split</span> <span class="token parameter variable">--separator</span><span class="token operator">=</span>/ a/b/c <span class="token parameter variable">--first</span>
args a/b/c <span class="token punctuation">{</span> separator: <span class="token string">&#39;/&#39;</span>, first: <span class="token boolean">true</span> <span class="token punctuation">}</span> // 这里打印的是 args
<span class="token punctuation">[</span> <span class="token string">&#39;a&#39;</span> <span class="token punctuation">]</span> // <span class="token function">split</span> hou 后的参数

$ imooc-build <span class="token function">split</span> <span class="token parameter variable">--separator</span><span class="token operator">=</span>/ a/b/c // 这里没有增加 <span class="token parameter variable">--fist</span> 参数
args a/b/c <span class="token punctuation">{</span> separator: <span class="token string">&#39;/&#39;</span> <span class="token punctuation">}</span>
<span class="token punctuation">[</span> <span class="token string">&#39;a&#39;</span>, <span class="token string">&#39;b&#39;</span>, <span class="token string">&#39;c&#39;</span> <span class="token punctuation">]</span>

$ imooc-build <span class="token function">split</span> <span class="token parameter variable">-s</span><span class="token operator">=</span>/ a/b/c
args a/b/c <span class="token punctuation">{</span> separator: <span class="token string">&#39;=/&#39;</span> <span class="token punctuation">}</span> // 注意这里 separator 参数略有不同
<span class="token punctuation">[</span> <span class="token string">&#39;a/b/c&#39;</span> <span class="token punctuation">]</span>

$ imooc-build <span class="token function">split</span> <span class="token parameter variable">--separator</span> / a/b/c
args a/b/c <span class="token punctuation">{</span> separator: <span class="token string">&#39;/&#39;</span> <span class="token punctuation">}</span>
<span class="token punctuation">[</span> <span class="token string">&#39;a&#39;</span>, <span class="token string">&#39;b&#39;</span>, <span class="token string">&#39;c&#39;</span> <span class="token punctuation">]</span>

$ imooc-build <span class="token function">split</span> <span class="token parameter variable">-s</span> /  a/b/c
args a/b/c <span class="token punctuation">{</span> separator: <span class="token string">&#39;/&#39;</span> <span class="token punctuation">}</span>
<span class="token punctuation">[</span> <span class="token string">&#39;a&#39;</span>, <span class="token string">&#39;b&#39;</span>, <span class="token string">&#39;c&#39;</span> <span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="_04-commander-框架帮助文档生成规则" tabindex="-1"><a class="header-anchor" href="#_04-commander-框架帮助文档生成规则" aria-hidden="true">#</a> 04：commander 框架帮助文档生成规则</h2><blockquote><ol><li>生成脚手架的帮助文档：imooc-build -h</li><li>生成脚手架 command 的帮助文档：imooc-build split -h / imooc-build help split</li></ol></blockquote><p>执行命令，可以看到如下结果</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ imooc-build <span class="token parameter variable">-h</span>
Usage: imooc-build <span class="token punctuation">[</span>options<span class="token punctuation">]</span> <span class="token punctuation">[</span>command<span class="token punctuation">]</span>

CLI to build javascript project

Options:
  -V, <span class="token parameter variable">--version</span>             output the version number
  -h, <span class="token parameter variable">--help</span>                display <span class="token builtin class-name">help</span> <span class="token keyword">for</span> <span class="token builtin class-name">command</span>

Commands:
  <span class="token function">split</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span> <span class="token operator">&lt;</span>string<span class="token operator">&gt;</span>  Split string to array
  <span class="token builtin class-name">help</span> <span class="token punctuation">[</span>command<span class="token punctuation">]</span>

$ imooc-build <span class="token function">split</span> <span class="token parameter variable">-h</span>
Usage: imooc-build <span class="token function">split</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span> <span class="token operator">&lt;</span>string<span class="token operator">&gt;</span>

Split string to array

Arguments:
  string                  string to <span class="token function">split</span>

Options:
  <span class="token parameter variable">--first</span>                 display just the first substring
  -s, <span class="token parameter variable">--separator</span> <span class="token operator">&lt;</span>char<span class="token operator">&gt;</span>  separator char <span class="token punctuation">(</span>default: <span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span>
  -h, <span class="token parameter variable">--help</span>              display <span class="token builtin class-name">help</span> <span class="token keyword">for</span> <span class="token builtin class-name">command</span>

$ imooc-build <span class="token builtin class-name">help</span> <span class="token function">split</span>
结果同上
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_05-commander-options-基础特性解析" tabindex="-1"><a class="header-anchor" href="#_05-commander-options-基础特性解析" aria-hidden="true">#</a> 05：commander options 基础特性解析</h2><h3 id="options-的四种定义方式" tabindex="-1"><a class="header-anchor" href="#options-的四种定义方式" aria-hidden="true">#</a> options 的四种定义方式</h3><ol><li><p><code>options</code>有四种定义方式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token parameter variable">-s</span> <span class="token operator">&lt;</span>char<span class="token operator">&gt;</span>
-s<span class="token operator">&lt;</span>char<span class="token operator">&gt;</span>
<span class="token parameter variable">--separator</span> <span class="token operator">&lt;</span>char<span class="token operator">&gt;</span>
<span class="token parameter variable">--separator</span><span class="token operator">=</span><span class="token operator">&lt;</span>char<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>通常情况下，<code>options type</code>的值可以是 boolean 也可以是 字符串</p><blockquote><p>如上面的 --first 最终获得的就是 布尔值</p><p>-s --separator &lt;char&gt; 获得值就是一个字符串</p></blockquote></li></ol><h3 id="通过-program-opts-获取-options" tabindex="-1"><a class="header-anchor" href="#通过-program-opts-获取-options" aria-hidden="true">#</a> 通过 program.opts() 获取 options</h3><ol><li><code>const options = program.opts();</code>获取<code>options</code></li></ol><blockquote><p>不过这里获取的是全局的参数，而不是 某一个 option 中的 options</p></blockquote><ol start="2"><li>比如在<code>bin/imooc-build.js</code>最后加入以下几句</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">...</span>
program
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&#39;-d, --debug&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;output extra debugging&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&#39;-s, --small&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;small pizza size&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&#39;-p, --pizza-type &lt;type&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;flavour of pizza&#39;</span><span class="token punctuation">)</span>

program<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> options <span class="token operator">=</span> program<span class="token punctuation">.</span><span class="token function">opts</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;options&quot;</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li><p>我们运行如下命令，查看效果</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ imooc-build <span class="token parameter variable">-d</span> <span class="token parameter variable">-s</span> <span class="token parameter variable">-p</span> pizza <span class="token function">split</span> aaa <span class="token parameter variable">--first</span>
options <span class="token punctuation">{</span> debug: true, small: true, pizzaType: <span class="token string">&#39;pizza&#39;</span> <span class="token punctuation">}</span> // 这里打印的 options 并没有包含 <span class="token function">split</span> 的 options
// <span class="token function">split</span> 是一个 <span class="token builtin class-name">command</span> 它包含的 <span class="token parameter variable">--first</span> 和 <span class="token parameter variable">-s</span> 的 options 需要在 其内部接收
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="optswithglobals-returns-merged-local-and-global-option-values" tabindex="-1"><a class="header-anchor" href="#optswithglobals-returns-merged-local-and-global-option-values" aria-hidden="true">#</a> <code>.optsWithGlobals()</code> returns merged local and global option values</h3><blockquote><p>通过 .optsWithGlobals() 可以获取全局的 options</p><p>它可以写在全局外面，也可以写在某一个 command 内部</p></blockquote><ol><li><p>我们在<code>bin/imooc-build.js</code>后面加入以下几句</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>program<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> options <span class="token operator">=</span> program<span class="token punctuation">.</span><span class="token function">opts</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;options&#39;</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span>
<span class="token comment">// 新增加</span>
<span class="token keyword">const</span> globalOptions <span class="token operator">=</span> program<span class="token punctuation">.</span><span class="token function">optsWithGlobals</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;globalOptions&#39;</span><span class="token punctuation">,</span> globalOptions<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>再次执行命令，效果如下(可以看到此时<code>globalOptions</code>和 上一步中的<code>options</code>结果一样)</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yuangao at yuandeMac-mini <span class="token keyword">in</span> ~/Desktop/imooc-build
$ imooc-build <span class="token parameter variable">-d</span> <span class="token parameter variable">-s</span> <span class="token parameter variable">-p</span> pizza <span class="token function">split</span> aaa <span class="token parameter variable">--first</span>
options <span class="token punctuation">{</span> debug: true, small: true, pizzaType: <span class="token string">&#39;pizza&#39;</span> <span class="token punctuation">}</span>
globalOptions <span class="token punctuation">{</span> debug: true, small: true, pizzaType: <span class="token string">&#39;pizza&#39;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>接下来我们在<code>command(&#39;split&#39;)</code>的<code>action</code>对应的函数里面进行如上获取呢？</p></li><li><p>修改<code>bin/imooc-build.js</code>中的代码，如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> Command <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;commander&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> program <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Command</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
program
  <span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string">&#39;imooc-build&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">&#39;CLI to build javascript project&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token string">&#39;0.0.1&#39;</span><span class="token punctuation">)</span>

program
  <span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&#39;split&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">&#39;Split string to array&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">argument</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;string&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;string to split&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&#39;--first&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;display just the first substring&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&#39;-s, --separator &lt;char&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;separator char&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">args<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 这里分别获取 options 和 globalOptions</span>
    <span class="token keyword">const</span> p_options <span class="token operator">=</span> program<span class="token punctuation">.</span><span class="token function">opts</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;p_options&#39;</span><span class="token punctuation">,</span> p_options<span class="token punctuation">)</span>
    <span class="token keyword">const</span> globalOptions <span class="token operator">=</span> program<span class="token punctuation">.</span><span class="token function">optsWithGlobals</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;globalOptions&#39;</span><span class="token punctuation">,</span> globalOptions<span class="token punctuation">)</span>
    <span class="token keyword">const</span> limit <span class="token operator">=</span> options<span class="token punctuation">.</span>first <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token keyword">undefined</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>separator<span class="token punctuation">,</span> limit<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

program
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&#39;-d, --debug&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;output extra debugging&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&#39;-s, --small&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;small pizza size&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&#39;-p, --pizza-type &lt;type&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;flavour of pizza&#39;</span><span class="token punctuation">)</span>

program<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>我们继续执行在终端中执行命令，查看结果:（这里看到结果也是一样的）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yuangao at yuandeMac-mini <span class="token keyword">in</span> ~/Desktop/imooc-build
$ imooc-build <span class="token function">split</span> aaa <span class="token parameter variable">-d</span> <span class="token parameter variable">-s</span> <span class="token parameter variable">-p</span> ppp
p_options <span class="token punctuation">{</span> debug: true, small: true, pizzaType: <span class="token string">&#39;ppp&#39;</span> <span class="token punctuation">}</span>
globalOptions <span class="token punctuation">{</span> debug: true, small: true, pizzaType: <span class="token string">&#39;ppp&#39;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="getoptionvalue-and-setoptionvalue-work-with-a-single-option-value" tabindex="-1"><a class="header-anchor" href="#getoptionvalue-and-setoptionvalue-work-with-a-single-option-value" aria-hidden="true">#</a> <code>.getOptionValue()</code> and <code>.setOptionValue()</code> work with a single option value</h3><h5 id="getoptionvalue" tabindex="-1"><a class="header-anchor" href="#getoptionvalue" aria-hidden="true">#</a> getOptionValue</h5><blockquote><p>getOptionVaue 可以获得某一个选项的值</p><p>注意：这里是针对全局参数的一个方法</p></blockquote><ol><li><p>修改<code>build/imooc-build.js</code> 文件</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">...</span>
program
  <span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&#39;split&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">&#39;Split string to array&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">argument</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;string&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;string to split&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&#39;--first&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;display just the first substring&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&#39;-s, --separator &lt;char&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;separator char&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span>
	<span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&quot;-e --extra&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;extra for something&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">args<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>program<span class="token punctuation">.</span><span class="token function">getOptionValue</span><span class="token punctuation">(</span><span class="token string">&#39;extra&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 这里想通过 getOptionVaue 获得 extra 的值</span>
    <span class="token keyword">const</span> limit <span class="token operator">=</span> options<span class="token punctuation">.</span>first <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token keyword">undefined</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>separator<span class="token punctuation">,</span> limit<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

program<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token operator">...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>执行命令以及结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ imooc-build <span class="token function">split</span> aaa <span class="token parameter variable">-e</span>
undefined // 获取不到 <span class="token function">split</span> 内部的参数值
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>修改<code>build/imooc-build.js</code> 文件</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">...</span>
program
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&#39;-d, --debug&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;output extra debugging&#39;</span><span class="token punctuation">)</span>

program
  <span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&#39;split&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">&#39;Split string to array&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">argument</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;string&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;string to split&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&#39;--first&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;display just the first substring&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&#39;-s, --separator &lt;char&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;separator char&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span>
	<span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&quot;-e --extra&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;extra for something&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">args<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>program<span class="token punctuation">.</span><span class="token function">getOptionValue</span><span class="token punctuation">(</span><span class="token string">&#39;debug&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 这里想通过 getOptionValue 获得 debug 的值</span>
    <span class="token keyword">const</span> limit <span class="token operator">=</span> options<span class="token punctuation">.</span>first <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token keyword">undefined</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>separator<span class="token punctuation">,</span> limit<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

program<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token operator">...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>执行命令以及结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ imooc-build <span class="token function">split</span> aaa <span class="token parameter variable">-d</span>
<span class="token boolean">true</span> // 这里通过 getOptionValue 方法获得 debug 的值为 <span class="token boolean">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>那么我在<code>command(&quot;split&quot;)</code>中如何通过 <code>optsWithGlobals()</code>获取参数呢？</p></li><li><p>继续修改<code>build/imooc-build.js</code>文件，内容如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">...</span>
program
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&#39;-d, --debug&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;output extra debugging&#39;</span><span class="token punctuation">)</span>

program
  <span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&#39;split&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">&#39;Split string to array&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">argument</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;string&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;string to split&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&#39;--first&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;display just the first substring&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&#39;-s, --separator &lt;char&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;separator char&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span>
	<span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&quot;-e --extra&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;extra for something&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">args<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>program<span class="token punctuation">.</span>commands<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">optsWithGlobals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> limit <span class="token operator">=</span> options<span class="token punctuation">.</span>first <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token keyword">undefined</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>separator<span class="token punctuation">,</span> limit<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

program<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token operator">...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>执行命令以及结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$  <span class="token function">split</span> aaa <span class="token parameter variable">--first</span> <span class="token parameter variable">-s</span> a <span class="token parameter variable">-d</span>
<span class="token punctuation">{</span> separator: <span class="token string">&#39;a&#39;</span>, first: true, debug: <span class="token boolean">true</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>这里由于<code>program.commands[0]</code>太过死板，我们也可以如下操作，<code>action</code>回调支持第三个参数</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">...</span>
program
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&#39;-d, --debug&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;output extra debugging&#39;</span><span class="token punctuation">)</span>

program
  <span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&#39;split&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">&#39;Split string to array&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">argument</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;string&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;string to split&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&#39;--first&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;display just the first substring&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&#39;-s, --separator &lt;char&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;separator char&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span>
	<span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&quot;-e --extra&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;extra for something&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">args<span class="token punctuation">,</span> options<span class="token punctuation">,</span> cmd</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>cmd<span class="token punctuation">.</span><span class="token function">optsWithGlobals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>cmd<span class="token punctuation">.</span><span class="token function">opts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> limit <span class="token operator">=</span> options<span class="token punctuation">.</span>first <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token keyword">undefined</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>separator<span class="token punctuation">,</span> limit<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
program<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token operator">...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>执行命令以及结果如下(结果与上一步骤一致)</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ imooc-build <span class="token function">split</span> aaa <span class="token parameter variable">--first</span> <span class="token parameter variable">-s</span> a <span class="token parameter variable">-d</span>
<span class="token punctuation">{</span> separator: <span class="token string">&#39;a&#39;</span>, first: true, debug: <span class="token boolean">true</span> <span class="token punctuation">}</span>
<span class="token punctuation">{</span> separator: <span class="token string">&#39;a&#39;</span>, first: <span class="token boolean">true</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>总结</p><ul><li>.opts: 获取当前实例的<code>options</code>,比如全局<code>program</code>获取全局<code>options</code>,<code>subcommand</code>获取局部<code>options</code></li><li>.optsWithGloabls: 获取全部<code>options</code>,全局获取全局<code>options</code>,<code>subcommand</code>获取全局+局部<code>options</code></li></ul></li></ol><h2 id="_06-commander-options-高级特性解析" tabindex="-1"><a class="header-anchor" href="#_06-commander-options-高级特性解析" aria-hidden="true">#</a> 06: commander options 高级特性解析</h2><h3 id="支持连写" tabindex="-1"><a class="header-anchor" href="#支持连写" aria-hidden="true">#</a> 支持连写</h3><ol><li><p>修改<code>bin/imooc-build.js</code>,内容如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">...</span>
program<span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&#39;-d, --debug&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;output extra debugging&#39;</span><span class="token punctuation">)</span>
program
  <span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&#39;split&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">&#39;Split string to array&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">argument</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;string&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;string to split&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&#39;--first&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;display just the first substring&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&#39;-s, --separator &lt;char&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;separator char&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&#39;-e --extra&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;extra for something&#39;</span><span class="token punctuation">)</span>
	<span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&#39;-a --add [string]&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;add something&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">args<span class="token punctuation">,</span> options<span class="token punctuation">,</span> cmd</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>cmd<span class="token punctuation">.</span><span class="token function">optsWithGlobals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> limit <span class="token operator">=</span> options<span class="token punctuation">.</span>first <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token keyword">undefined</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>separator<span class="token punctuation">,</span> limit<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

program<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token operator">...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>运行命令及结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>// 因为 program 定义了 <span class="token parameter variable">-d</span> command<span class="token punctuation">(</span><span class="token string">&#39;split&#39;</span><span class="token punctuation">)</span>后面还有 <span class="token parameter variable">-e</span> <span class="token parameter variable">-a</span> xxxoption，所以可以连写
// 注意：由于 <span class="token parameter variable">-a</span> 后面有参数，所以要特别注意顺序，否则可能存在参数获取不是你想要的情况
$ imooc-build <span class="token function">split</span> aaa  <span class="token parameter variable">-dea</span> aaa
<span class="token punctuation">{</span> separator: <span class="token string">&#39;,&#39;</span>, extra: true, add: <span class="token string">&#39;aaa&#39;</span>, debug: <span class="token boolean">true</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="option-参数-string-与-string-的区别" tabindex="-1"><a class="header-anchor" href="#option-参数-string-与-string-的区别" aria-hidden="true">#</a> option() 参数&lt;string&gt;与[string]的区别</h3><blockquote><p>&lt;string&gt;表示参数必须, 不加参数时候，会进行报错提示，</p><p>[string]表示参数可选，不加参数时候，获取参数类型变为布尔值</p></blockquote><ol><li><p>在上面那个例子中 <code>split</code>后面参数是<code>&lt;string&gt;</code>，是必须得，而<code>option(&#39;-a --add [string]&#39;)</code>这里是可选的</p></li><li><p>运行如下命令，以及结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ imooc-build <span class="token function">split</span> aaa  <span class="token parameter variable">-dea</span> aaa // 这里 <span class="token parameter variable">-a</span> 后面有参数，根据打印获得的值是 aaa
<span class="token punctuation">{</span> separator: <span class="token string">&#39;,&#39;</span>, extra: true, add: <span class="token string">&#39;aaa&#39;</span>, debug: <span class="token boolean">true</span> <span class="token punctuation">}</span>
$ imooc-build <span class="token function">split</span> aaa  <span class="token parameter variable">-dea</span>  // 这里 <span class="token parameter variable">-a</span> 后面没有参数，根据打印获得的值是 布尔值 <span class="token boolean">true</span>
<span class="token punctuation">{</span> separator: <span class="token string">&#39;,&#39;</span>, extra: true, add: true, debug: <span class="token boolean">true</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="option-后面也支持默认值" tabindex="-1"><a class="header-anchor" href="#option-后面也支持默认值" aria-hidden="true">#</a> option() 后面也支持默认值</h3><ol><li><p>比如上面的示例代码中</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">...</span>
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&#39;-s, --separator &lt;char&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;separator char&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 这里 -s 后面必须有参数，而这里代了默认值</span>
<span class="token operator">...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>运行命令以及相应结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ imooc-build <span class="token function">split</span> aaa
<span class="token punctuation">{</span> separator: <span class="token string">&#39;,&#39;</span> <span class="token punctuation">}</span> // 默认值
$ imooc-build <span class="token function">split</span> aaa <span class="token parameter variable">-s</span> // 如果后面写了 <span class="token parameter variable">-s</span> 或者 <span class="token parameter variable">--separator</span> 后面就必须跟一个数
error: option <span class="token string">&#39;-s, --separator &lt;char&gt;&#39;</span> argument missing
$ imooc-build <span class="token function">split</span> aaa <span class="token parameter variable">--separator</span> // 如果后面写了 <span class="token parameter variable">-s</span> 或者 <span class="token parameter variable">--separator</span> 后面就必须跟一个数
error: option <span class="token string">&#39;-s, --separator &lt;char&gt;&#39;</span> argument missing
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="required-option-必须的-option" tabindex="-1"><a class="header-anchor" href="#required-option-必须的-option" aria-hidden="true">#</a> Required option：必须的 option</h3><blockquote><p>目前示例中的 option 均是可选的，就是不加也不会报错</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>.requiredOption
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote><ol><li><p>修改<code>bin/imooc-build.js</code>,增加代码如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">...</span>
program<span class="token punctuation">.</span><span class="token function">requiredOption</span><span class="token punctuation">(</span><span class="token string">&#39;-c, --cheese &lt;type&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;pizza must have cheese&#39;</span><span class="token punctuation">)</span>

program<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>运行命令及相应结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ imooc-build <span class="token function">split</span> aaa
error: required option <span class="token string">&#39;-c, --cheese &lt;type&gt;&#39;</span> not specified
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>当前如果赋值了默认值，比如</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">...</span>
program<span class="token punctuation">.</span><span class="token function">requiredOption</span><span class="token punctuation">(</span><span class="token string">&#39;-c, --cheese &lt;type&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;pizza must have cheese&#39;</span><span class="token punctuation">,</span> <span class="token string">&quot;default-cheese&quot;</span><span class="token punctuation">)</span>

program<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>运行命令以及相应结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ imooc-build <span class="token function">split</span> aaa // 这里就不会报错
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><h3 id="variadic-option" tabindex="-1"><a class="header-anchor" href="#variadic-option" aria-hidden="true">#</a> Variadic option</h3><blockquote><p>可以通过 ... 支持多个参数, 隔断方式是 正常分割 或者 -- 或者紧挨着</p></blockquote><ol><li><p>修改<code>bin/imooc-build.js</code>，结果如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">...</span>
program
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&#39;-n, --number &lt;numbers...&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;specify numbers&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&#39;-l, --letter [letters...]&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;specify letters&#39;</span><span class="token punctuation">)</span>
program<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Options: &#39;</span><span class="token punctuation">,</span> program<span class="token punctuation">.</span><span class="token function">opts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Remaining arguments: &#39;</span><span class="token punctuation">,</span> program<span class="token punctuation">.</span>args<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>运行如下命令及相应结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>// 第一种方式：正常书写
$ imooc-build <span class="token parameter variable">-n</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token parameter variable">--letter</span> a b c
Options:  <span class="token punctuation">{</span> number: <span class="token punctuation">[</span> <span class="token string">&#39;1&#39;</span>, <span class="token string">&#39;2&#39;</span>, <span class="token string">&#39;3&#39;</span> <span class="token punctuation">]</span>, letter: <span class="token punctuation">[</span> <span class="token string">&#39;a&#39;</span>, <span class="token string">&#39;b&#39;</span>, <span class="token string">&#39;c&#39;</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span>
Remaining arguments:  <span class="token punctuation">[</span><span class="token punctuation">]</span>

// 第二种方式: <span class="token operator">=</span> 等于号
$ imooc-build <span class="token parameter variable">--letter</span><span class="token operator">=</span>A <span class="token parameter variable">-n80</span> operand
Options:  <span class="token punctuation">{</span> letter: <span class="token punctuation">[</span> <span class="token string">&#39;A&#39;</span> <span class="token punctuation">]</span>, number: <span class="token punctuation">[</span> <span class="token string">&#39;80&#39;</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span>
Remaining arguments:  <span class="token punctuation">[</span> <span class="token string">&#39;operand&#39;</span> <span class="token punctuation">]</span>

// 第三种方式: -- 分割方式
$ imooc-build <span class="token parameter variable">--letter</span> <span class="token parameter variable">-n</span> <span class="token number">1</span> <span class="token parameter variable">-n</span> <span class="token number">2</span> <span class="token number">3</span> -- operand
Options:  <span class="token punctuation">{</span> letter: true, number: <span class="token punctuation">[</span> <span class="token string">&#39;1&#39;</span>, <span class="token string">&#39;2&#39;</span>, <span class="token string">&#39;3&#39;</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span>
Remaining arguments:  <span class="token punctuation">[</span> <span class="token string">&#39;operand&#39;</span> <span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="_07-高能-利用-option-对象创建脚手架属性" tabindex="-1"><a class="header-anchor" href="#_07-高能-利用-option-对象创建脚手架属性" aria-hidden="true">#</a> 07：高能：利用 Option 对象创建脚手架属性</h2><h3 id="version-option" tabindex="-1"><a class="header-anchor" href="#version-option" aria-hidden="true">#</a> Version option</h3><blockquote><p>version 这个值通常会从 package.json 中进行读取</p></blockquote><ol><li><p>我们修改<code>bind/imooc-build.js</code>，代码如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> pkg <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../package.json&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> Command <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;commander&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> program <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Command</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
program
  <span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string">&#39;imooc-build&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">&#39;CLI to build javascript project&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span>pkg<span class="token punctuation">.</span>version<span class="token punctuation">)</span>

<span class="token operator">...</span>
program<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>运行命令及效果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ imooc-build <span class="token parameter variable">-V</span>                           
<span class="token number">0.0</span>.1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>另外，我们也可以对<code>version</code>进行定制<code>option</code>,目前默认是支持 <code>-V</code>,可以通过 <code>help</code>类查看</p><blockquote><p>默认是 -V, --version ， description 是： output the version number</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ imooc-build <span class="token builtin class-name">help</span>
Usage: imooc-build <span class="token punctuation">[</span>options<span class="token punctuation">]</span> <span class="token punctuation">[</span>command<span class="token punctuation">]</span>

CLI to build javascript project

Options:
  -V, <span class="token parameter variable">--version</span>              output the version number
  -d, <span class="token parameter variable">--debug</span>                output extra debugging
  -c, <span class="token parameter variable">--cheese</span> <span class="token operator">&lt;</span>type<span class="token operator">&gt;</span>        pizza must have cheese <span class="token punctuation">(</span>default:
                             <span class="token string">&quot;default-cheese&quot;</span><span class="token punctuation">)</span>
  -n, <span class="token parameter variable">--number</span> <span class="token operator">&lt;</span>numbers<span class="token punctuation">..</span>.<span class="token operator">&gt;</span>  specify numbers
  -l, <span class="token parameter variable">--letter</span> <span class="token punctuation">[</span>letters<span class="token punctuation">..</span>.<span class="token punctuation">]</span>  specify letters
  -h, <span class="token parameter variable">--help</span>                 display <span class="token builtin class-name">help</span> <span class="token keyword">for</span> <span class="token builtin class-name">command</span>

Commands:
  <span class="token function">split</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span> <span class="token operator">&lt;</span>string<span class="token operator">&gt;</span>   Split string to array
  <span class="token builtin class-name">help</span> <span class="token punctuation">[</span>command<span class="token punctuation">]</span>             display <span class="token builtin class-name">help</span> <span class="token keyword">for</span> <span class="token builtin class-name">command</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>修改<code>bin/imooc-build.js</code>如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> pkg <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../package.json&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> Command <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;commander&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> program <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Command</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
program
  <span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string">&#39;imooc-build&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">&#39;CLI to build javascript project&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span>pkg<span class="token punctuation">.</span>version<span class="token punctuation">,</span> <span class="token string">&quot;-v, --version&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;optput your version&quot;</span><span class="token punctuation">)</span>

<span class="token operator">...</span>
program<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>再行运行<code>xxx help</code>,查看效果</p><blockquote><p>这里变为 -v --version description 变为：optput your version</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ imooc-build <span class="token builtin class-name">help</span>
Usage: imooc-build <span class="token punctuation">[</span>options<span class="token punctuation">]</span> <span class="token punctuation">[</span>command<span class="token punctuation">]</span>

CLI to build javascript project

Options:
  -v, <span class="token parameter variable">--version</span>              optput your version
  -d, <span class="token parameter variable">--debug</span>                output extra debugging
  -c, <span class="token parameter variable">--cheese</span> <span class="token operator">&lt;</span>type<span class="token operator">&gt;</span>        pizza must have cheese <span class="token punctuation">(</span>default:
                             <span class="token string">&quot;default-cheese&quot;</span><span class="token punctuation">)</span>
  -n, <span class="token parameter variable">--number</span> <span class="token operator">&lt;</span>numbers<span class="token punctuation">..</span>.<span class="token operator">&gt;</span>  specify numbers
  -l, <span class="token parameter variable">--letter</span> <span class="token punctuation">[</span>letters<span class="token punctuation">..</span>.<span class="token punctuation">]</span>  specify letters
  -h, <span class="token parameter variable">--help</span>                 display <span class="token builtin class-name">help</span> <span class="token keyword">for</span> <span class="token builtin class-name">command</span>

Commands:
  <span class="token function">split</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span> <span class="token operator">&lt;</span>string<span class="token operator">&gt;</span>   Split string to array
  <span class="token builtin class-name">help</span> <span class="token punctuation">[</span>command<span class="token punctuation">]</span>             display <span class="token builtin class-name">help</span> <span class="token keyword">for</span> <span class="token builtin class-name">command</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="more-configuration" tabindex="-1"><a class="header-anchor" href="#more-configuration" aria-hidden="true">#</a> More configuration</h3><blockquote><p>之前我们都是通过 .option() 来增加方法，但是某些场景下已经不能满足，这时候可以使用构造函数：Option</p></blockquote><h4 id="可以通过-option-构造函数来增加方法" tabindex="-1"><a class="header-anchor" href="#可以通过-option-构造函数来增加方法" aria-hidden="true">#</a> 可以通过 Option 构造函数来增加方法</h4><ol><li><p>修改<code>bin/imooc-build.js</code>,代码如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> Command<span class="token punctuation">,</span> Option <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;commander&#39;</span><span class="token punctuation">)</span>
<span class="token operator">...</span>

<span class="token comment">// 增加 -se --secret， 并且调用 hideHelp 来隐藏 help 时的描述信息</span>
program
  <span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addOption</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Option</span><span class="token punctuation">(</span><span class="token string">&#39;-m, --secret&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;secret something&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hideHelp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">options<span class="token punctuation">,</span> cmd</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">// 注意：这里的 actions 只有两个参数</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>cmd<span class="token punctuation">.</span><span class="token function">optsWithGlobals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

program<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>执行命令及相应结果如下(注意：command test 中没有提示语)</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ imooc-build <span class="token builtin class-name">help</span>      
Usage: imooc-build <span class="token punctuation">[</span>options<span class="token punctuation">]</span> <span class="token punctuation">[</span>command<span class="token punctuation">]</span>

CLI to build javascript project

Options:
	<span class="token punctuation">..</span>.

Commands:
  <span class="token function">split</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span> <span class="token operator">&lt;</span>string<span class="token operator">&gt;</span>   Split string to array
  <span class="token builtin class-name">test</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span>
  <span class="token builtin class-name">help</span> <span class="token punctuation">[</span>command<span class="token punctuation">]</span>             display <span class="token builtin class-name">help</span> <span class="token keyword">for</span> <span class="token builtin class-name">command</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="default-添加默认值" tabindex="-1"><a class="header-anchor" href="#default-添加默认值" aria-hidden="true">#</a> .default() 添加默认值</h3><ol><li><p>修改<code>bin/imooc-build.js</code>,代码如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> Command<span class="token punctuation">,</span> Option <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;commander&#39;</span><span class="token punctuation">)</span>
<span class="token operator">...</span>

<span class="token comment">// 使用.default来设置默认值，第一个值是默认值，第二个参数是对默认值的一个解释</span>
program
  <span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addOption</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Option</span><span class="token punctuation">(</span><span class="token string">&#39;-m, --secret&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;secret something&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hideHelp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">.</span><span class="token function">addOption</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Option</span><span class="token punctuation">(</span><span class="token string">&#39;-t, --timeout &lt;delay&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;timeout in seconds&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">,</span> <span class="token string">&#39;one minute&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">options<span class="token punctuation">,</span> cmd</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>cmd<span class="token punctuation">.</span><span class="token function">optsWithGlobals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

program<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>执行命令及相应结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$  imooc-build <span class="token builtin class-name">test</span> <span class="token parameter variable">-h</span>   
Usage: imooc-build <span class="token builtin class-name">test</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span>

Options:
  -t, <span class="token parameter variable">--timeout</span> <span class="token operator">&lt;</span>delay<span class="token operator">&gt;</span>  <span class="token function">timeout</span> <span class="token keyword">in</span> seconds <span class="token punctuation">(</span>default: one minute<span class="token punctuation">)</span>
  -h, <span class="token parameter variable">--help</span>             display <span class="token builtin class-name">help</span> <span class="token keyword">for</span> <span class="token builtin class-name">command</span>
  
$ imooc-build <span class="token builtin class-name">test</span> <span class="token builtin class-name">help</span> 
<span class="token punctuation">{</span> timeout: <span class="token number">60</span>, cheese: <span class="token string">&#39;default-cheese&#39;</span> <span class="token punctuation">}</span>

$ imooc-build <span class="token builtin class-name">test</span> <span class="token parameter variable">-t</span> <span class="token number">10</span>
<span class="token punctuation">{</span> timeout: <span class="token string">&#39;10&#39;</span>, cheese: <span class="token string">&#39;default-cheese&#39;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="choices-来提供选择项" tabindex="-1"><a class="header-anchor" href="#choices-来提供选择项" aria-hidden="true">#</a> .choices() 来提供选择项</h3><ol><li><p>修改<code>bin/imooc-build.js</code>,代码如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">...</span>
program
  <span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addOption</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Option</span><span class="token punctuation">(</span><span class="token string">&#39;-m, --secret [char]&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;secret something&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hideHelp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addOption</span><span class="token punctuation">(</span>
    <span class="token keyword">new</span> <span class="token class-name">Option</span><span class="token punctuation">(</span><span class="token string">&#39;-t, --timeout &lt;delay&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;timeout in seconds&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">default</span><span class="token punctuation">(</span>
      <span class="token number">60</span><span class="token punctuation">,</span>
      <span class="token string">&#39;one minute&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span>
	<span class="token punctuation">.</span><span class="token function">addOption</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Option</span><span class="token punctuation">(</span><span class="token string">&#39;-f, --choose &lt;size&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;drink size&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">choices</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;small&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;medium&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;large&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">options<span class="token punctuation">,</span> cmd</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>cmd<span class="token punctuation">.</span><span class="token function">optsWithGlobals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
program<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>执行命令及相应结果如下(如果值不符合，就会报错提示)</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ imooc-build <span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> a
error: option <span class="token string">&#39;-f, --choose &lt;size&gt;&#39;</span> argument <span class="token string">&#39;a&#39;</span> is invalid. Allowed choices are small, medium, large.

$ imooc-build <span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> small
<span class="token punctuation">{</span> timeout: <span class="token number">60</span>, choose: <span class="token string">&#39;small&#39;</span>, cheese: <span class="token string">&#39;default-cheese&#39;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="env-来设置-port-等" tabindex="-1"><a class="header-anchor" href="#env-来设置-port-等" aria-hidden="true">#</a> .env() 来设置 port 等</h3><ol><li><p>修改<code>bin/imooc-build.js</code>,代码如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">...</span>
program
  <span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addOption</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Option</span><span class="token punctuation">(</span><span class="token string">&#39;-m, --secret [char]&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;secret something&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hideHelp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addOption</span><span class="token punctuation">(</span>
    <span class="token keyword">new</span> <span class="token class-name">Option</span><span class="token punctuation">(</span><span class="token string">&#39;-t, --timeout &lt;delay&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;timeout in seconds&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">default</span><span class="token punctuation">(</span>
      <span class="token number">60</span><span class="token punctuation">,</span>
      <span class="token string">&#39;one minute&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span>
	<span class="token punctuation">.</span><span class="token function">addOption</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Option</span><span class="token punctuation">(</span><span class="token string">&#39;-f, --choose &lt;size&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;drink size&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">choices</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;small&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;medium&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;large&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addOption</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Option</span><span class="token punctuation">(</span><span class="token string">&#39;-p, --port &lt;number&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;port number&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">env</span><span class="token punctuation">(</span><span class="token string">&#39;PORT&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">.</span><span class="token function">addOption</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Option</span><span class="token punctuation">(</span><span class="token string">&#39;-j, --jtest &lt;number&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;just a test&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">env</span><span class="token punctuation">(</span><span class="token string">&#39;TEST&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">options<span class="token punctuation">,</span> cmd</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>cmd<span class="token punctuation">.</span><span class="token function">optsWithGlobals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

program<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>执行命令及相应结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ imooc-build <span class="token builtin class-name">test</span> <span class="token parameter variable">-p</span> <span class="token number">80</span>
<span class="token punctuation">{</span> timeout: <span class="token number">60</span>, port: <span class="token string">&#39;80&#39;</span>, cheese: <span class="token string">&#39;default-cheese&#39;</span> <span class="token punctuation">}</span>

// 还可以通过环境变量来获取
$ <span class="token assign-left variable">PORT</span><span class="token operator">=</span><span class="token number">80</span> imooc-build <span class="token builtin class-name">test</span> 
<span class="token punctuation">{</span> timeout: <span class="token number">60</span>, port: <span class="token string">&#39;80&#39;</span>, cheese: <span class="token string">&#39;default-cheese&#39;</span> <span class="token punctuation">}</span>
$ <span class="token assign-left variable">PORT</span><span class="token operator">=</span><span class="token number">80</span> <span class="token assign-left variable">TEST</span><span class="token operator">=</span>jest imooc-build <span class="token builtin class-name">test</span>
<span class="token punctuation">{</span> timeout: <span class="token number">60</span>, port: <span class="token string">&#39;80&#39;</span>, jtest: <span class="token string">&#39;jest&#39;</span>, cheese: <span class="token string">&#39;default-cheese&#39;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="preset-和-argparser" tabindex="-1"><a class="header-anchor" href="#preset-和-argparser" aria-hidden="true">#</a> .preset()和.argParser()</h3><blockquote><p>.preset： 用于设置默认值，它的强大之处在于可以动态进行设置</p><p>.argParser: 参数为函数，可以用这个函数格式化后的值返回作为最终结果</p></blockquote><ol><li><p>修改<code>bin/imooc-build.js</code>,代码如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">...</span>
program
  <span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">)</span>
	<span class="token punctuation">.</span><span class="token function">addOption</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Option</span><span class="token punctuation">(</span><span class="token string">&#39;--donate [amount]&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;optional donation in dollars&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">preset</span><span class="token punctuation">(</span><span class="token string">&#39;20&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">argParser</span><span class="token punctuation">(</span>parseFloat<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addOption</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Option</span><span class="token punctuation">(</span><span class="token string">&#39;--color [color]&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;text color&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">preset</span><span class="token punctuation">(</span><span class="token function">getDefaultColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">argParser</span><span class="token punctuation">(</span>parseFloat<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">options<span class="token punctuation">,</span> cmd</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>cmd<span class="token punctuation">.</span><span class="token function">optsWithGlobals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

program<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>执行命令及相应结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$  imooc-build <span class="token builtin class-name">test</span>  <span class="token parameter variable">--donate</span>
<span class="token punctuation">{</span> donate: <span class="token number">20</span> <span class="token punctuation">}</span>
$ imooc-build <span class="token builtin class-name">test</span>  <span class="token parameter variable">--donate</span> <span class="token number">10</span>
<span class="token punctuation">{</span> donate: <span class="token number">10</span> <span class="token punctuation">}</span>
$ imooc-build <span class="token builtin class-name">test</span> <span class="token parameter variable">--color</span>     
<span class="token punctuation">{</span> color: <span class="token string">&#39;green&#39;</span> <span class="token punctuation">}</span>
$ imooc-build <span class="token builtin class-name">test</span> <span class="token parameter variable">--color</span> white
<span class="token punctuation">{</span> color: <span class="token string">&#39;white&#39;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="conflicts" tabindex="-1"><a class="header-anchor" href="#conflicts" aria-hidden="true">#</a> .conflicts()</h3><blockquote><p>表示不能和 xxx 一起使用</p></blockquote><ol><li><p>修改<code>bin/imooc-build.js</code>,代码如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">...</span>
program
  <span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addOption</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Option</span><span class="token punctuation">(</span><span class="token string">&#39;-p, --port &lt;number&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;port number&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">env</span><span class="token punctuation">(</span><span class="token string">&#39;PORT&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addOption</span><span class="token punctuation">(</span>
    <span class="token keyword">new</span> <span class="token class-name">Option</span><span class="token punctuation">(</span><span class="token string">&#39;--disable-server&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;disables the server&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">conflicts</span><span class="token punctuation">(</span><span class="token string">&#39;port&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">options<span class="token punctuation">,</span> cmd</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>cmd<span class="token punctuation">.</span><span class="token function">optsWithGlobals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

program<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>执行命令及相应结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token assign-left variable">PORT</span><span class="token operator">=</span><span class="token number">80</span> imooc-build <span class="token builtin class-name">test</span> --disable-server
error: option <span class="token string">&#39;--disable-server&#39;</span> cannot be used with environment variable <span class="token string">&#39;PORT&#39;</span>
$ imooc-build <span class="token builtin class-name">test</span> --disable-server  
<span class="token punctuation">{</span> disableServer: <span class="token boolean">true</span> <span class="token punctuation">}</span>
$ imooc-build % imooc-build <span class="token builtin class-name">test</span> --disable-server <span class="token parameter variable">-p</span> <span class="token number">80</span>
error: option <span class="token string">&#39;--disable-server&#39;</span> cannot be used with option <span class="token string">&#39;-p, --port &lt;number&gt;&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>这里还支持与多个 option 进行冲突，参数是一个字符串数组</p></li><li><p>可以修改<code>bin/imooc-build.js</code>为如下代码</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">...</span>
program
  <span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addOption</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Option</span><span class="token punctuation">(</span><span class="token string">&#39;-p, --port &lt;number&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;port number&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">env</span><span class="token punctuation">(</span><span class="token string">&#39;PORT&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addOption</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Option</span><span class="token punctuation">(</span><span class="token string">&#39;-j, --jtest &lt;number&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;just a test&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">env</span><span class="token punctuation">(</span><span class="token string">&#39;TEST&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addOption</span><span class="token punctuation">(</span>
    <span class="token keyword">new</span> <span class="token class-name">Option</span><span class="token punctuation">(</span><span class="token string">&#39;--disable-server&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;disables the server&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">conflicts</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;port&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;jtest&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">options<span class="token punctuation">,</span> cmd</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>cmd<span class="token punctuation">.</span><span class="token function">optsWithGlobals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

program<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>执行命令及相应结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ imooc-build <span class="token builtin class-name">test</span> --disable-server <span class="token parameter variable">-j</span> <span class="token number">11</span>
error: option <span class="token string">&#39;--disable-server&#39;</span> cannot be used with option <span class="token string">&#39;-j, --jtest &lt;number&gt;&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="implies" tabindex="-1"><a class="header-anchor" href="#implies" aria-hidden="true">#</a> .implies()</h3><blockquote><p>暗示，意味着</p></blockquote><ol><li><p>修改<code>bin/imooc-build.js</code>为如下代码</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">...</span>
program
  <span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addOption</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Option</span><span class="token punctuation">(</span><span class="token string">&#39;--free-drink&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;small drink included free &#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">implies</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">drink</span><span class="token operator">:</span> <span class="token string">&#39;small&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">options<span class="token punctuation">,</span> cmd</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>cmd<span class="token punctuation">.</span><span class="token function">optsWithGlobals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

program<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>执行命令及相应结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ imooc-build <span class="token builtin class-name">test</span>             
<span class="token punctuation">{</span><span class="token punctuation">}</span>
$ imooc-build <span class="token builtin class-name">test</span> --free-drink
<span class="token punctuation">{</span> freeDrink: true, drink: <span class="token string">&#39;small&#39;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="_08-自定义-option-处理函数" tabindex="-1"><a class="header-anchor" href="#_08-自定义-option-处理函数" aria-hidden="true">#</a> 08: 自定义 Option 处理函数</h2><blockquote><p>这个允许我们对传入的 option 参数做自定义处理</p></blockquote><ol><li><p>修改<code>bin/imooc-build.js</code>为如下代码</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">...</span>
program
  <span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&#39;custom&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&#39;-f --float &lt;number&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;float number&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">options<span class="token punctuation">,</span> cmd</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>cmd<span class="token punctuation">.</span><span class="token function">optsWithGlobals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
program<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>执行命令及相应结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ imooc-build custom <span class="token parameter variable">-f</span> <span class="token number">1.2</span>
<span class="token punctuation">{</span> float: <span class="token string">&#39;1.2&#39;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>增加第三个参数格式化函数</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">...</span>
program
  <span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&#39;custom&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&#39;-f --float &lt;number&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;float number&#39;</span><span class="token punctuation">,</span> parseFloat<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">options<span class="token punctuation">,</span> cmd</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>cmd<span class="token punctuation">.</span><span class="token function">optsWithGlobals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
program<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>执行命令及相应结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ imooc-build custom <span class="token parameter variable">-f</span> <span class="token number">1.2</span>
<span class="token punctuation">{</span> float: <span class="token number">1.2</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>当然也可以传入自定义函数来进行格式化处理</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> InvalidArgumentError <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;commander&#39;</span><span class="token punctuation">)</span>
<span class="token operator">...</span>

<span class="token keyword">function</span> <span class="token function">myParseInt</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> intValue <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isNaN</span><span class="token punctuation">(</span>intValue<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">InvalidArgumentError</span><span class="token punctuation">(</span><span class="token string">&#39;it is not a int number&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> intValue
<span class="token punctuation">}</span>
program
  <span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&#39;custom&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&#39;-f --float &lt;number&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;float number&#39;</span><span class="token punctuation">,</span> parseFloat<span class="token punctuation">)</span>
	<span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&#39;-i --int &lt;number&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;int number&#39;</span><span class="token punctuation">,</span> myParseInt<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">options<span class="token punctuation">,</span> cmd</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>cmd<span class="token punctuation">.</span><span class="token function">optsWithGlobals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
program<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>执行命令及相应结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ imooc-build custom <span class="token parameter variable">-i</span> a  
error: option <span class="token string">&#39;-i --int &lt;number&gt;&#39;</span> argument <span class="token string">&#39;a&#39;</span> is invalid. it is not a int number
$ imooc-build custom <span class="token parameter variable">-i</span> <span class="token number">100.1</span>
<span class="token punctuation">{</span> int: <span class="token number">100</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="_09-高级特性-option参数叠加处理" tabindex="-1"><a class="header-anchor" href="#_09-高级特性-option参数叠加处理" aria-hidden="true">#</a> 09: 高级特性：Option参数叠加处理</h2><blockquote><p>option 支持四个参数，</p><p>第一个是 命令参数形式</p><p>第二个是 命令描述</p><p>第三个是处理函数，</p><p>第四个是默认初始值，也就是处理函数中 第二个参数 previous的值</p></blockquote><ol><li><p>修改代码如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">...</span>

<span class="token keyword">function</span> <span class="token function">increaseVerbosity</span><span class="token punctuation">(</span><span class="token parameter">dummyValue<span class="token punctuation">,</span> previous</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  dummyValue <span class="token operator">=</span> <span class="token operator">+</span>dummyValue <span class="token operator">||</span> <span class="token number">0</span>
  <span class="token keyword">return</span> previous <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">+</span> dummyValue
<span class="token punctuation">}</span>
program
  <span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&#39;custom&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span>
    <span class="token string">&#39;--verbose &lt;number&gt;&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;verbosity that can be increased&#39;</span><span class="token punctuation">,</span>
    increaseVerbosity<span class="token punctuation">,</span>
    <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">options<span class="token punctuation">,</span> cmd</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>cmd<span class="token punctuation">.</span><span class="token function">optsWithGlobals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
program<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>执行命令及相应结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ imooc-build custom <span class="token parameter variable">--verbose</span> <span class="token number">10</span>
<span class="token punctuation">{</span> verbose: <span class="token number">11</span> <span class="token punctuation">}</span>
$ imooc-build custom <span class="token parameter variable">--verbose</span> <span class="token number">10</span> <span class="token parameter variable">--verbose</span> <span class="token number">20</span> <span class="token parameter variable">--verbose</span> <span class="token number">40</span>
<span class="token punctuation">{</span> verbose: <span class="token number">73</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>再来看一个相似的例子</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">...</span>
<span class="token keyword">function</span> <span class="token function">collect</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> previous</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> previous<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token punctuation">[</span>value<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">increaseVerbosity</span><span class="token punctuation">(</span><span class="token parameter">dummyValue<span class="token punctuation">,</span> previous</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  dummyValue <span class="token operator">=</span> <span class="token operator">+</span>dummyValue <span class="token operator">||</span> <span class="token number">0</span>
  <span class="token keyword">return</span> previous <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">+</span> dummyValue
<span class="token punctuation">}</span>

program
  <span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&#39;custom&#39;</span><span class="token punctuation">)</span>
	<span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span>
    <span class="token string">&#39;--verbose &lt;number&gt;&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;verbosity that can be increased&#39;</span><span class="token punctuation">,</span>
    increaseVerbosity<span class="token punctuation">,</span>
    <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&#39;-c, --collect &lt;value&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;repeatable value&#39;</span><span class="token punctuation">,</span> collect<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">options<span class="token punctuation">,</span> cmd</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>cmd<span class="token punctuation">.</span><span class="token function">optsWithGlobals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
program<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>执行命令及相应结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ imooc-build custom <span class="token parameter variable">-c</span> <span class="token number">1</span> <span class="token parameter variable">-c</span> <span class="token number">2</span> <span class="token parameter variable">-c</span> <span class="token number">4</span>
<span class="token punctuation">{</span> collect: <span class="token punctuation">[</span> <span class="token string">&#39;1&#39;</span>, <span class="token string">&#39;2&#39;</span>, <span class="token string">&#39;4&#39;</span> <span class="token punctuation">]</span>, verbose: <span class="token number">0</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="_10-command基本用法解析" tabindex="-1"><a class="header-anchor" href="#_10-command基本用法解析" aria-hidden="true">#</a> 10: Command基本用法解析</h2><h3 id="直接在-command-第一个参数中定义名字和参数" tabindex="-1"><a class="header-anchor" href="#直接在-command-第一个参数中定义名字和参数" aria-hidden="true">#</a> 直接在 .command()第一个参数中定义名字和参数</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 用法结构</span>
<span class="token keyword">export</span> <span class="token operator">**</span><span class="token keyword">interface</span><span class="token operator">**</span> CommandOptions <span class="token punctuation">{</span>
  hidden<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span> <span class="token comment">// 表示可以在 help 中进行隐藏</span>
  isDefault<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span> <span class="token comment">// 如果为 true，login 这个命令在终端调用时可以隐藏</span>
  <span class="token operator">*</span><span class="token doc-comment comment">/*** **@deprecated** *since v7, replaced by hidden \\*/</span><span class="token operator">*</span>
  noHelp<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span>nameAndArgs<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> opts<span class="token operator">?</span><span class="token operator">:</span> CommandOptions<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li><p>修改代码如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">...</span>

program
  <span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&#39;login &lt;username&gt; [pasword]&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&#39;-f --force&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;just a stand by here&#39;</span><span class="token punctuation">)</span>
  <span class="token comment">// 如果不输入 password，这个password 位置也会占位</span>
  <span class="token comment">// 并且 command login 后面定义多少个参数，这里就有多少个位置占用</span>
  <span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">username<span class="token punctuation">,</span> password<span class="token punctuation">,</span> options<span class="token punctuation">,</span> cmd</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>username<span class="token punctuation">,</span> password<span class="token punctuation">,</span> options<span class="token punctuation">,</span> cmd<span class="token punctuation">.</span><span class="token function">optsWithGlobals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

program<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>执行命令及相应结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ login root root123 
root root123 <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
$ imooc-build login root root123 <span class="token parameter variable">-f</span>
root root123 <span class="token punctuation">{</span> force: <span class="token boolean">true</span> <span class="token punctuation">}</span> <span class="token punctuation">{</span> force: <span class="token boolean">true</span> <span class="token punctuation">}</span>
$ imooc-build login root <span class="token parameter variable">-f</span>  
root undefined <span class="token punctuation">{</span> force: <span class="token boolean">true</span> <span class="token punctuation">}</span> <span class="token punctuation">{</span> force: <span class="token boolean">true</span> <span class="token punctuation">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>当然 command 后面还支持第二个参数</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">...</span>

program
  <span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&#39;login &lt;username&gt; [pasword]&#39;</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span> <span class="token literal-property property">hidden</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">isDefault</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&#39;-f --force&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;just a stand by here&#39;</span><span class="token punctuation">)</span>
  <span class="token comment">// 如果不输入 password，这个password 位置也会占位</span>
  <span class="token comment">// 并且 command login 后面定义多少个参数，这里就有多少个位置占用</span>
  <span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">username<span class="token punctuation">,</span> password<span class="token punctuation">,</span> options<span class="token punctuation">,</span> cmd</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>username<span class="token punctuation">,</span> password<span class="token punctuation">,</span> options<span class="token punctuation">,</span> cmd<span class="token punctuation">.</span><span class="token function">optsWithGlobals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

program<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>执行命令及相应结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ imooc-build  root root123 <span class="token parameter variable">-f</span>
root root123 <span class="token punctuation">{</span> force: <span class="token boolean">true</span> <span class="token punctuation">}</span> <span class="token punctuation">{</span> force: <span class="token boolean">true</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="通过-argument-来定义参数" tabindex="-1"><a class="header-anchor" href="#通过-argument-来定义参数" aria-hidden="true">#</a> 通过.argument()来定义参数</h3><blockquote><p>使用 .argument() 来定义参数</p><p>优点：可以设置 description 在 help 中进行解释、也可以设置默认值</p></blockquote><ol><li><p>修改代码如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">...</span>
program
  <span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&#39;login&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">hidden</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">isDefault</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">argument</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;usernam&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;it is our username&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">argument</span><span class="token punctuation">(</span><span class="token string">&#39;[password]&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;your password&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;default password&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&#39;-f --force&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;just a stand by here&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">username<span class="token punctuation">,</span> password<span class="token punctuation">,</span> options<span class="token punctuation">,</span> cmd</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>username<span class="token punctuation">,</span> password<span class="token punctuation">,</span> options<span class="token punctuation">,</span> cmd<span class="token punctuation">.</span><span class="token function">optsWithGlobals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

program<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>执行命令及相应结果如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 在help 中显示自定义 description</span>
$ imooc<span class="token operator">-</span>build help login     
<span class="token literal-property property">Usage</span><span class="token operator">:</span> imooc<span class="token operator">-</span>build login <span class="token punctuation">[</span>options<span class="token punctuation">]</span> <span class="token operator">&lt;</span>usernam<span class="token operator">&gt;</span> <span class="token punctuation">[</span>password<span class="token punctuation">]</span>

<span class="token literal-property property">Arguments</span><span class="token operator">:</span>
  usernam     it is our username
  password    your <span class="token function">password</span> <span class="token punctuation">(</span><span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&quot;default password&quot;</span><span class="token punctuation">)</span>

<span class="token literal-property property">Options</span><span class="token operator">:</span>
  <span class="token operator">-</span>f <span class="token operator">--</span>force  just a stand by here
  <span class="token operator">-</span>h<span class="token punctuation">,</span> <span class="token operator">--</span>help  display help <span class="token keyword">for</span> command
  
<span class="token comment">// 参数获取跟上一小节一样</span>
$ imooc<span class="token operator">-</span>build  root root123 <span class="token operator">-</span>f
root root123 <span class="token punctuation">{</span> <span class="token literal-property property">force</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span> <span class="token punctuation">{</span> <span class="token literal-property property">force</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>

<span class="token comment">// 还支持默认值</span>
$ imooc<span class="token operator">-</span>build  root  <span class="token operator">-</span>f       
root <span class="token keyword">default</span> password <span class="token punctuation">{</span> <span class="token literal-property property">force</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span> <span class="token punctuation">{</span> <span class="token literal-property property">force</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>还支持一次性传入多个值</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">...</span>
program
  <span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&#39;login&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">hidden</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">isDefault</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">argument</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;usernam&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;it is our username&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">argument</span><span class="token punctuation">(</span><span class="token string">&#39;[password]&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;your password&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;default password&#39;</span><span class="token punctuation">)</span>
	<span class="token comment">// 支持一次性传入多个，并且内部会有处理</span>
  <span class="token punctuation">.</span><span class="token function">argument</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;dir...&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;dir list&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&#39;-f --force&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;just a stand by here&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">username<span class="token punctuation">,</span> password<span class="token punctuation">,</span> dir<span class="token punctuation">,</span> options<span class="token punctuation">,</span> cmd</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>username<span class="token punctuation">,</span> password<span class="token punctuation">,</span> dir<span class="token punctuation">,</span> options<span class="token punctuation">,</span> cmd<span class="token punctuation">.</span><span class="token function">optsWithGlobals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
program<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>执行命令及相应结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>// 如果dir 参数以 空格 隔开会自动分割为数组
$ imooc-build root root123 <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token parameter variable">-f</span> 
root root123 <span class="token punctuation">[</span> <span class="token string">&#39;1&#39;</span>, <span class="token string">&#39;2&#39;</span>, <span class="token string">&#39;3&#39;</span>, <span class="token string">&#39;4&#39;</span> <span class="token punctuation">]</span> <span class="token punctuation">{</span> force: <span class="token boolean">true</span> <span class="token punctuation">}</span> <span class="token punctuation">{</span> force: <span class="token boolean">true</span> <span class="token punctuation">}</span>
$ imooc-build  root root123 <span class="token string">&quot;1 2 3 4&quot;</span> <span class="token parameter variable">-f</span> 
root root123 <span class="token punctuation">[</span> <span class="token string">&#39;1 2 3 4&#39;</span> <span class="token punctuation">]</span> <span class="token punctuation">{</span> force: <span class="token boolean">true</span> <span class="token punctuation">}</span> <span class="token punctuation">{</span> force: <span class="token boolean">true</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>当然这里还有一个<code>.arguments()</code> 用法其实跟上面差不多</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">...</span>
program
  <span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&#39;login&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">hidden</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">isDefault</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token comment">// .argument(&#39;&lt;usernam&gt;&#39;, &#39;it is our username&#39;)</span>
  <span class="token comment">// .argument(&#39;[password]&#39;, &#39;your password&#39;, &#39;default password&#39;)</span>
  <span class="token punctuation">.</span><span class="token function">arguments</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;username&gt; [password]&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">argument</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;dir...&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;dir list&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&#39;-f --force&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;just a stand by here&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">username<span class="token punctuation">,</span> password<span class="token punctuation">,</span> dir<span class="token punctuation">,</span> options<span class="token punctuation">,</span> cmd</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>username<span class="token punctuation">,</span> password<span class="token punctuation">,</span> dir<span class="token punctuation">,</span> options<span class="token punctuation">,</span> cmd<span class="token punctuation">.</span><span class="token function">optsWithGlobals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

program<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>执行命令及相应结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ imooc-build root root123 dir1 dir2
root root123 <span class="token punctuation">[</span> <span class="token string">&#39;dir1&#39;</span>, <span class="token string">&#39;dir2&#39;</span> <span class="token punctuation">]</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="_11-argument-高级用法解析" tabindex="-1"><a class="header-anchor" href="#_11-argument-高级用法解析" aria-hidden="true">#</a> 11: Argument 高级用法解析</h2><blockquote><p>.addArgument(new commander.Argument(...))</p><p>他也支持很多方法</p><ul><li>.argRequired() 参数必须</li><li>.argOptional() 参数可选</li><li>.choices([...]) 参数必须是指定的</li><li>.argParser(fn) 自定义格式化参数函数</li><li>default(value, description) 默认值和解释</li></ul></blockquote><ol><li><p>修改代码如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">...</span>
program
  <span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&#39;login&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">hidden</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">isDefault</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token comment">// .argument(&#39;&lt;usernam&gt;&#39;, &#39;it is our username&#39;)</span>
  <span class="token comment">// .argument(&#39;[password]&#39;, &#39;your password&#39;, &#39;default password&#39;)</span>
  <span class="token comment">// .arguments(&#39;&lt;username&gt; [password]&#39;)</span>
  <span class="token comment">// .argument(&#39;&lt;dir...&gt;&#39;, &#39;dir list&#39;)</span>
  <span class="token punctuation">.</span><span class="token function">addArgument</span><span class="token punctuation">(</span>
    <span class="token keyword">new</span> <span class="token class-name">Argument</span><span class="token punctuation">(</span><span class="token string">&#39;username&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;this is your username&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">argRequired</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">choices</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;root&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;guest&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addArgument</span><span class="token punctuation">(</span>
    <span class="token keyword">new</span> <span class="token class-name">Argument</span><span class="token punctuation">(</span><span class="token string">&#39;[password]&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;this is your password&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">argParser</span><span class="token punctuation">(</span>parseFloat<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&#39;-f --force&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;just a stand by here&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">username<span class="token punctuation">,</span> password<span class="token punctuation">,</span>  options<span class="token punctuation">,</span> cmd</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>username<span class="token punctuation">,</span> password<span class="token punctuation">,</span> options<span class="token punctuation">,</span> cmd<span class="token punctuation">.</span><span class="token function">optsWithGlobals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

program<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>这里就不运行测试了</p></li></ol><h2 id="_12-commander-action-this用法-钩子函数" tabindex="-1"><a class="header-anchor" href="#_12-commander-action-this用法-钩子函数" aria-hidden="true">#</a> 12：Commander action this用法+钩子函数</h2><h3 id="action-中支持-this-前提是不可以使用箭头函数" tabindex="-1"><a class="header-anchor" href="#action-中支持-this-前提是不可以使用箭头函数" aria-hidden="true">#</a> action 中支持 this，前提是不可以使用箭头函数</h3><ol><li><p>修改代码如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">...</span>
program
  <span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&#39;login&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">hidden</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">isDefault</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addArgument</span><span class="token punctuation">(</span>
    <span class="token keyword">new</span> <span class="token class-name">Argument</span><span class="token punctuation">(</span><span class="token string">&#39;username&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;this is your username&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">argRequired</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">choices</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;root&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;guest&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addArgument</span><span class="token punctuation">(</span>
    <span class="token keyword">new</span> <span class="token class-name">Argument</span><span class="token punctuation">(</span><span class="token string">&#39;[password]&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;this is your password&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">argParser</span><span class="token punctuation">(</span>parseFloat<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&#39;-f --force&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;just a stand by here&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">username<span class="token punctuation">,</span> password<span class="token punctuation">,</span> options<span class="token punctuation">,</span> cmd</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>args<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">opts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

program<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>执行命令及相应结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ imooc-build login root root123  <span class="token parameter variable">-f</span>     
root root123 <span class="token punctuation">{</span> force: <span class="token boolean">true</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="钩子函数" tabindex="-1"><a class="header-anchor" href="#钩子函数" aria-hidden="true">#</a> 钩子函数</h3><ol><li><p>修改代码如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">...</span>
program
  <span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&#39;login&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">hidden</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">isDefault</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addArgument</span><span class="token punctuation">(</span>
    <span class="token keyword">new</span> <span class="token class-name">Argument</span><span class="token punctuation">(</span><span class="token string">&#39;username&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;this is your username&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">argRequired</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">choices</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;root&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;guest&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addArgument</span><span class="token punctuation">(</span>
    <span class="token keyword">new</span> <span class="token class-name">Argument</span><span class="token punctuation">(</span><span class="token string">&#39;[password]&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;this is your password&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">argParser</span><span class="token punctuation">(</span>parseFloat<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&#39;-f --force&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;just a stand by here&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">hook</span><span class="token punctuation">(</span><span class="token string">&#39;preAction&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">thisCommand<span class="token punctuation">,</span> actionCommand</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 这里是前置钩子回调</span>
    <span class="token comment">// 因为 .command  后面还可以再写 command 所以这里提供了两个参数</span>
    <span class="token comment">// 在使用一个 command  时他们是相等的</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;-------前置hook-------&#39;</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>thisCommand<span class="token punctuation">.</span>args<span class="token punctuation">,</span> thisCommand<span class="token punctuation">.</span><span class="token function">opts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;----------------------------&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">hook</span><span class="token punctuation">(</span><span class="token string">&#39;postAction&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">thisCommand<span class="token punctuation">,</span> actionCommand</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 这里是后置钩子回调</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;-------后置hook-------&#39;</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>thisCommand<span class="token punctuation">.</span>args<span class="token punctuation">,</span> thisCommand<span class="token punctuation">.</span><span class="token function">opts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">username<span class="token punctuation">,</span> password<span class="token punctuation">,</span> options<span class="token punctuation">,</span> cmd</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>args<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">opts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

program<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>执行命令及相应结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ imooc-build login root root123  <span class="token parameter variable">-f</span>
-------前置hook-------
<span class="token punctuation">[</span> <span class="token string">&#39;root&#39;</span>, <span class="token string">&#39;root123&#39;</span> <span class="token punctuation">]</span> <span class="token punctuation">{</span> force: <span class="token boolean">true</span> <span class="token punctuation">}</span>
----------------------------
root root123 <span class="token punctuation">{</span> force: <span class="token boolean">true</span> <span class="token punctuation">}</span>
-------后置hook-------
<span class="token punctuation">[</span> <span class="token string">&#39;root&#39;</span>, <span class="token string">&#39;root123&#39;</span> <span class="token punctuation">]</span> <span class="token punctuation">{</span> force: <span class="token boolean">true</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>当然你可以在全局中写 hook, 如下代码</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">...</span>
program
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&#39;-d, --debug&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;output extra debugging&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">hook</span><span class="token punctuation">(</span><span class="token string">&#39;preAction&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">thisCommand<span class="token punctuation">,</span> actionCommand</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;===============全局 preAction hook:start===============&#39;</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>thisCommand <span class="token operator">===</span> actionCommand<span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>thisCommand <span class="token operator">===</span> program<span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>actionCommand<span class="token punctuation">.</span>args<span class="token punctuation">,</span> actionCommand<span class="token punctuation">.</span><span class="token function">opts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;===============全局 preAction hook:end===============&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">hook</span><span class="token punctuation">(</span><span class="token string">&#39;postAction&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">thisCommand<span class="token punctuation">,</span> actionCommand</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;===============全局 postAction hook:start===============&#39;</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>thisCommand <span class="token operator">===</span> actionCommand<span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>thisCommand <span class="token operator">===</span> program<span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>actionCommand<span class="token punctuation">.</span>args<span class="token punctuation">,</span> actionCommand<span class="token punctuation">.</span><span class="token function">opts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;===============全局 postAction hook:end===============&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token operator">...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>执行命令及相应结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ imooc-build login root root123  <span class="token parameter variable">-f</span>
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>全局 preAction hook:start<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>
<span class="token boolean">false</span>
<span class="token boolean">true</span>
<span class="token punctuation">[</span> <span class="token string">&#39;root&#39;</span>, <span class="token string">&#39;root123&#39;</span> <span class="token punctuation">]</span> <span class="token punctuation">{</span> force: <span class="token boolean">true</span> <span class="token punctuation">}</span>
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>全局 preAction hook:end<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>
-------前置hook-------
<span class="token punctuation">[</span> <span class="token string">&#39;root&#39;</span>, <span class="token string">&#39;root123&#39;</span> <span class="token punctuation">]</span> <span class="token punctuation">{</span> force: <span class="token boolean">true</span> <span class="token punctuation">}</span>
----------------------------
root root123 <span class="token punctuation">{</span> force: <span class="token boolean">true</span> <span class="token punctuation">}</span>
-------后置hook-------
<span class="token punctuation">[</span> <span class="token string">&#39;root&#39;</span>, <span class="token string">&#39;root123&#39;</span> <span class="token punctuation">]</span> <span class="token punctuation">{</span> force: <span class="token boolean">true</span> <span class="token punctuation">}</span>
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>全局 postAction hook:start<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>
<span class="token boolean">false</span>
<span class="token boolean">true</span>
<span class="token punctuation">[</span> <span class="token string">&#39;root&#39;</span>, <span class="token string">&#39;root123&#39;</span> <span class="token punctuation">]</span> <span class="token punctuation">{</span> force: <span class="token boolean">true</span> <span class="token punctuation">}</span>
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>全局 postAction hook:end<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="_13-脚手架框架搭建之node版本校验" tabindex="-1"><a class="header-anchor" href="#_13-脚手架框架搭建之node版本校验" aria-hidden="true">#</a> 13: 脚手架框架搭建之Node版本校验</h2><h3 id="前置知识-semver" tabindex="-1"><a class="header-anchor" href="#前置知识-semver" aria-hidden="true">#</a> 前置知识: semver</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> semver <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;semver&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// valid: 校验输入的版本有效性</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>semver<span class="token punctuation">.</span><span class="token function">valid</span><span class="token punctuation">(</span><span class="token string">&#39;v1.0.0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 1.0.0</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>semver<span class="token punctuation">.</span><span class="token function">valid</span><span class="token punctuation">(</span><span class="token string">&#39;1.0.0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 1.0.0</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>semver<span class="token punctuation">.</span><span class="token function">valid</span><span class="token punctuation">(</span><span class="token string">&#39;1.0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// null</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>semver<span class="token punctuation">.</span><span class="token function">valid</span><span class="token punctuation">(</span><span class="token string">&#39;v&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// null</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>semver<span class="token punctuation">.</span><span class="token function">valid</span><span class="token punctuation">(</span><span class="token string">&#39;v1.0.0.00&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// null</span>

<span class="token comment">// clean: 从一个表达式中拿到想要的一个结果</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>semver<span class="token punctuation">.</span><span class="token function">clean</span><span class="token punctuation">(</span><span class="token string">&#39;  =v1.2.3   &#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 1.2.3</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>semver<span class="token punctuation">.</span><span class="token function">clean</span><span class="token punctuation">(</span><span class="token string">&#39;v1.0.0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 1.0.0</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>semver<span class="token punctuation">.</span><span class="token function">clean</span><span class="token punctuation">(</span><span class="token string">&#39;1.0.0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 1.0.0</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>semver<span class="token punctuation">.</span><span class="token function">clean</span><span class="token punctuation">(</span><span class="token string">&#39;&gt;v1.0.0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// null</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>semver<span class="token punctuation">.</span><span class="token function">clean</span><span class="token punctuation">(</span><span class="token string">&#39;&gt;1.0.0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// null</span>

<span class="token comment">// satisfies: 一个版本号是否满足后面的参数条件</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>semver<span class="token punctuation">.</span><span class="token function">satisfies</span><span class="token punctuation">(</span><span class="token string">&#39;1.2.3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1.x || &gt;=2.5.0 || 5.0.0 - 7.2.3&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>semver<span class="token punctuation">.</span><span class="token function">satisfies</span><span class="token punctuation">(</span><span class="token string">&#39;1.2.3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2.x&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// false</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>semver<span class="token punctuation">.</span><span class="token function">validRange</span><span class="token punctuation">(</span><span class="token string">&#39;6.0.1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;5.0.0-7.2.3&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 6.0.1</span>

<span class="token comment">// .gt 是否前者大于后者</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>semver<span class="token punctuation">.</span><span class="token function">gt</span><span class="token punctuation">(</span><span class="token string">&#39;1.2.3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;9.8.7&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// false</span>

<span class="token comment">// .lt 是否前者小于后者</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>semver<span class="token punctuation">.</span><span class="token function">lt</span><span class="token punctuation">(</span><span class="token string">&#39;1.2.3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;9.8.7&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>semver<span class="token punctuation">.</span><span class="token function">minVersion</span><span class="token punctuation">(</span><span class="token string">&#39;&gt;=1.0.0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>version<span class="token punctuation">)</span> <span class="token comment">// 1.0.0</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>semver<span class="token punctuation">.</span><span class="token function">valid</span><span class="token punctuation">(</span>semver<span class="token punctuation">.</span><span class="token function">coerce</span><span class="token punctuation">(</span><span class="token string">&#39;v2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// &#39;2.0.0&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>semver<span class="token punctuation">.</span><span class="token function">valid</span><span class="token punctuation">(</span>semver<span class="token punctuation">.</span><span class="token function">coerce</span><span class="token punctuation">(</span><span class="token string">&#39;42.6.7.9.3-alpha&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// &#39;42.6.7&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="代码实操" tabindex="-1"><a class="header-anchor" href="#代码实操" aria-hidden="true">#</a> 代码实操</h3><ol><li><p>安装<code>smver</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> semver <span class="token parameter variable">-D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>新建<code>lib/checkNode.js</code>文件，内容如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> semver <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;semver&#39;</span><span class="token punctuation">)</span>

module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">checkNode</span><span class="token punctuation">(</span><span class="token parameter">minNodeVersion</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 获取当前 node 版本号</span>
  <span class="token keyword">const</span> nodeVersion <span class="token operator">=</span> semver<span class="token punctuation">.</span><span class="token function">valid</span><span class="token punctuation">(</span>semver<span class="token punctuation">.</span><span class="token function">coerce</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>version<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> semver<span class="token punctuation">.</span><span class="token function">satisfies</span><span class="token punctuation">(</span>nodeVersion<span class="token punctuation">,</span> <span class="token string">&#39;&gt;=&#39;</span> <span class="token operator">+</span> minNodeVersion<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>修改<code>bin/imooc-build.js</code>内容如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token hashbang comment">#!/usr/bin/env node</span>
<span class="token keyword">const</span> commander <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;commander&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> pkg <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../package.json&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> checkNode <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../lib/checkNode&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// 创建自执行函数</span>
<span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token comment">// 设置node的最低版本</span>
    <span class="token keyword">const</span> <span class="token constant">MIN_NODE_VERSION</span> <span class="token operator">=</span> <span class="token string">&#39;8.9.0&#39;</span>
    <span class="token comment">// 校验版本号，如果不符合要求就报错</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">checkNode</span><span class="token punctuation">(</span><span class="token constant">MIN_NODE_VERSION</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>
        <span class="token string">&#39;Please upgrade your node version to v&#39;</span> <span class="token operator">+</span> <span class="token constant">MIN_NODE_VERSION</span><span class="token punctuation">,</span>
      <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>message<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="_14-脚手架框架搭建之命令注册" tabindex="-1"><a class="header-anchor" href="#_14-脚手架框架搭建之命令注册" aria-hidden="true">#</a> 14：脚手架框架搭建之命令注册</h2><ol><li><p>继续修改<code>bin/imooc-build.js</code>，如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token hashbang comment">#!/usr/bin/env node</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> program <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;commander&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> pkg <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../package.json&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> checkNode <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../lib/checkNode&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> startServer <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../lib/start/startServer&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> build <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../lib/build/buildServer&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token constant">MIN_NODE_VERSION</span> <span class="token operator">=</span> <span class="token string">&#39;8.9.0&#39;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">checkNode</span><span class="token punctuation">(</span><span class="token constant">MIN_NODE_VERSION</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>
        <span class="token string">&#39;Please upgrade your node version to v&#39;</span> <span class="token operator">+</span> <span class="token constant">MIN_NODE_VERSION</span><span class="token punctuation">,</span>
      <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 设置版本号</span>
    program<span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span>pkg<span class="token punctuation">.</span>version<span class="token punctuation">)</span>
    <span class="token comment">// 增加一个 start 命令</span>
    program
      <span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&#39;start&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">&#39;start server by imooc-build &#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">allowUnknownOption</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span>startServer<span class="token punctuation">)</span>
		<span class="token comment">// 增加一个 build 命令</span>
    program
      <span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&#39;build&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">&#39;build server by imooc-build&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">allowUnknownOption</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span>build<span class="token punctuation">)</span>
	
    program<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>argv<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>message<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>新建<code>/lib/start/startServer.js</code>文件，内容如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">startServer</span><span class="token punctuation">(</span><span class="token parameter">args<span class="token punctuation">,</span> opts<span class="token punctuation">,</span> cmd</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;start server&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>新建<code>/lib/build/buildServer.js</code>，内容如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token parameter">args<span class="token punctuation">,</span> opts<span class="token punctuation">,</span> cmd</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;build server&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>执行终端命令，查看效果</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ imooc-build      
Usage: imooc-build <span class="token punctuation">[</span>options<span class="token punctuation">]</span> <span class="token punctuation">[</span>command<span class="token punctuation">]</span>

Options:
  -V, <span class="token parameter variable">--version</span>   output the version number
  -h, <span class="token parameter variable">--help</span>      display <span class="token builtin class-name">help</span> <span class="token keyword">for</span> <span class="token builtin class-name">command</span>

Commands:
  start           start server by imooc-build
  build           build server by imooc-build
  <span class="token builtin class-name">help</span> <span class="token punctuation">[</span>command<span class="token punctuation">]</span>  display <span class="token builtin class-name">help</span> <span class="token keyword">for</span> <span class="token builtin class-name">command</span>

$ imooc-build <span class="token parameter variable">-V</span>
<span class="token number">0.0</span>.1

$ imooc-build start
start server

$ imooc-build build
build server
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol>`,88);function v(m,b){const a=p("ExternalLinkIcon");return e(),o("div",null,[u,n("blockquote",null,[r,n("p",null,[n("a",k,[c("comander:npm 官方文档"),i(a)])])]),d])}const h=t(l,[["render",v],["__file","index-14.html.vue"]]);export{h as default};
