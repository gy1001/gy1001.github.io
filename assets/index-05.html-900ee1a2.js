const l=JSON.parse('{"key":"v-6be389ed","path":"/zh/other/class/typescript-supplement/index-05.html","title":"05-TS 继承深入+手写优化底层源码","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"01:【TS 继承】前端深度掌握 TS 继承的重要+长远意义","slug":"_01-【ts-继承】前端深度掌握-ts-继承的重要-长远意义","link":"#_01-【ts-继承】前端深度掌握-ts-继承的重要-长远意义","children":[{"level":3,"title":"练就更深厚的 js 原型 原型链功底","slug":"练就更深厚的-js-原型-原型链功底","link":"#练就更深厚的-js-原型-原型链功底","children":[]},{"level":3,"title":"提升前端项目架构的根基技术","slug":"提升前端项目架构的根基技术","link":"#提升前端项目架构的根基技术","children":[]},{"level":3,"title":"突破前段技术瓶颈之一的技能，晋级中、高级前端工程师必会技能","slug":"突破前段技术瓶颈之一的技能-晋级中、高级前端工程师必会技能","link":"#突破前段技术瓶颈之一的技能-晋级中、高级前端工程师必会技能","children":[]}]},{"level":2,"title":"02：【TS 继承准备】原型链继承+重要的一步","slug":"_02-【ts-继承准备】原型链继承-重要的一步","link":"#_02-【ts-继承准备】原型链继承-重要的一步","children":[]},{"level":2,"title":"03: 借用构造函数（冒充对象继承)","slug":"_03-借用构造函数-冒充对象继承","link":"#_03-借用构造函数-冒充对象继承","children":[]},{"level":2,"title":"04：【TS 继承准备】借用构造函数+原型链继承组合模式","slug":"_04-【ts-继承准备】借用构造函数-原型链继承组合模式","link":"#_04-【ts-继承准备】借用构造函数-原型链继承组合模式","children":[{"level":3,"title":"借用构造函数+原型链继承组合模式的优势","slug":"借用构造函数-原型链继承组合模式的优势","link":"#借用构造函数-原型链继承组合模式的优势","children":[]},{"level":3,"title":"借用构造函数+原型链继承组合模式的不足","slug":"借用构造函数-原型链继承组合模式的不足","link":"#借用构造函数-原型链继承组合模式的不足","children":[]}]},{"level":2,"title":"05:【TS 继承准备】寄生组合继承实现方式【最佳继承模式】","slug":"_05-【ts-继承准备】寄生组合继承实现方式【最佳继承模式】","link":"#_05-【ts-继承准备】寄生组合继承实现方式【最佳继承模式】","children":[{"level":3,"title":"寄生组合继承实现方式","slug":"寄生组合继承实现方式","link":"#寄生组合继承实现方式","children":[]},{"level":3,"title":"构建一个公共的寄生组合继承","slug":"构建一个公共的寄生组合继承","link":"#构建一个公共的寄生组合继承","children":[]},{"level":3,"title":"“克隆”对象其他实现方式","slug":"克隆-对象其他实现方式","link":"#克隆-对象其他实现方式","children":[]},{"level":3,"title":"“克隆”对象实现方式 2","slug":"克隆-对象实现方式-2","link":"#克隆-对象实现方式-2","children":[]},{"level":3,"title":"“克隆”对象实现方式 3","slug":"克隆-对象实现方式-3","link":"#克隆-对象实现方式-3","children":[]}]},{"level":2,"title":"06:【TS 继承应用】用全栈眼光深度掌握 TS 继承+TS 继承好处【企业真项目应用场景】","slug":"_06-【ts-继承应用】用全栈眼光深度掌握-ts-继承-ts-继承好处【企业真项目应用场景】","link":"#_06-【ts-继承应用】用全栈眼光深度掌握-ts-继承-ts-继承好处【企业真项目应用场景】","children":[{"level":3,"title":"1.理解子类","slug":"_1-理解子类","link":"#_1-理解子类","children":[]}]},{"level":2,"title":"07:【TS 继承应用】深入 super+方法重写+真实应用场景","slug":"_07-【ts-继承应用】深入-super-方法重写-真实应用场景","link":"#_07-【ts-继承应用】深入-super-方法重写-真实应用场景","children":[{"level":3,"title":"方法重写（override)","slug":"方法重写-override","link":"#方法重写-override","children":[]},{"level":3,"title":"super 的三种用法总结","slug":"super-的三种用法总结","link":"#super-的三种用法总结","children":[]}]},{"level":2,"title":"08:【TS 继承源码】逐行深剖，手写 TS 继承 JS 源码","slug":"_08-【ts-继承源码】逐行深剖-手写-ts-继承-js-源码","link":"#_08-【ts-继承源码】逐行深剖-手写-ts-继承-js-源码","children":[{"level":3,"title":"技术准备","slug":"技术准备","link":"#技术准备","children":[]},{"level":3,"title":"源码实现","slug":"源码实现","link":"#源码实现","children":[]}]}],"git":{"updatedTime":1689438126000},"filePathRelative":"zh/other/class/typescript-supplement/index-05.md"}');export{l as data};
