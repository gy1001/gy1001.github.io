import{_ as e,p as i,q as d,a1 as a}from"./framework-e8cb8151.js";const t="/assets/image-20230728150436199-85b3701e.png",o="/assets/image-20230728150448149-7dbc50bf.png",c="/assets/image-20230728150500337-1cd4e876.png",r="/assets/image-20230728150527253-e4107cab.png",s="/assets/image-20230728150544014-fe8e3b12.png",n="/assets/image-20230728150553861-6ef3d122.png",g={},p=a('<h1 id="_08-忽略指定文件或目录-排除项目配置文件" tabindex="-1"><a class="header-anchor" href="#_08-忽略指定文件或目录-排除项目配置文件" aria-hidden="true">#</a> 08-忽略指定文件或目录：排除项目配置文件</h1><p><img src="https://img3.mukewang.com/5d909bfd0001d4df06400359.jpg" alt="img"></p><blockquote><p>合理安排时间，就等于节约时间。 ——培根</p></blockquote><p>在平时工作中可能需要把一些文件放到 Git 工作目录中，但又不想把他们提交到版本控制器里面，比如说，项目的配置文件、IDE 自己产生的目录文件等等。</p><h2 id="_8-1-问题场景" tabindex="-1"><a class="header-anchor" href="#_8-1-问题场景" aria-hidden="true">#</a> 8.1 问题场景</h2><p>每次提交代码之前，我都会用 <code>git status</code> 来查看有哪些文件有改动，但有时候，莫名其妙多出一些不是我手动增加的文件，显示为 <code>Untracked files</code> 状态，如下图所示 <img src="'+t+'" alt="image-20230728150436199"></p><p>上图显示的 <code>.DS_Store</code> 和 <code>.idea</code> 是新增加的两个文件，但这两个文件并不是我手动新增加的，而是程序自动产生的，这种文件对项目没有实际上的意义；还有可能导致在团队协作中让两个人的代码冲突，如果直接删除这种文件也没用什么用，因为过不了多久程序又会自动产生，所以最好的办法就是让 <code>git</code> 对他视而不见。</p><h2 id="_8-2-解决方案" tabindex="-1"><a class="header-anchor" href="#_8-2-解决方案" aria-hidden="true">#</a> 8.2 解决方案</h2><p>这种需求其实非常常见，因此 <code>Git</code> 本身也提供了忽略某些文件的功能，解决起来相对比较简单；我们可以在在 <code>Git</code> 工作区的根目录下创建一个<code>.gitignore</code> 文件，把想忽略的文件名或者目录填进去，Git 就会自动忽略这些文件，如下图所示</p><p><img src="'+o+'" alt="image-20230728150448149"></p><p>在上图中我把 Mac 系统中经常产生的 .DS_Store 和 IDE 产生的 .idea 放到了文件中去，每个文件占用一行。</p><p>保存修改之后，我们再次在 Git 工作区的根目录使用 <code>git status</code> 命令查看，可以看到之前的提示已经没有了，说明已经生效：</p><p><img src="'+c+'" alt="image-20230728150500337"></p><h2 id="_8-3-常见问题" tabindex="-1"><a class="header-anchor" href="#_8-3-常见问题" aria-hidden="true">#</a> 8.3 常见问题</h2><p>在添加 <code>.gitignore</code> 文件后可能会遇到一些相关的问题，我把比较常见的问题在下面列出来，如果你遇到了可以参考解决。</p><h3 id="_8-3-1-无法添加-gitignore" tabindex="-1"><a class="header-anchor" href="#_8-3-1-无法添加-gitignore" aria-hidden="true">#</a> 8.3.1 无法添加<code>.gitignore</code></h3><p>在 Windows 系统中因为文件命名的规则是 <code>.</code> 之前必须要有字符，所以如果你直接在资源管理器里新建一个 <code>.gitignore</code> 文件，系统会提示你必须输入文件名；这个时候，你可以通过一些第三方的文本编辑器新建一个文本文件，然后通过 “保存” 或者 “另存为” 就可以把文件保存为 <code>.gitignore</code>，如下图是笔者使用 notpad++ 保存</p><p><img src="'+r+`" alt="image-20230728150527253"></p><h3 id="_8-3-2-添加忽略文件" tabindex="-1"><a class="header-anchor" href="#_8-3-2-添加忽略文件" aria-hidden="true">#</a> 8.3.2 添加忽略文件</h3><p><code>.gitignore</code> 文件支持通配符，当你在文件中添加一些忽略规则之后，可能匹配过于宽松，导致某一个文件无法提交到 <code>git</code> ; 这个时候你有两种方式来处理，</p><p>或者你发现，可能是 <code>.gitignore</code> 写得有问题，需要找出来到底哪个规则写错了，可以用 <code>git check-ignore</code> 命令检查：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ git check-ignore -v 文件名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+s+'" alt="image-20230728150544014"></p><p>Git 会告诉我们，<code>.gitignore</code> 的第 3 行规则忽略了该文件，于是我们就可以知道应该修订哪个规则。</p><p>除了修改 <code>.gitignore</code> 文件的规则之外还可以使用强制添加的方式，如下图所示</p><p><img src="'+n+`" alt="image-20230728150553861"></p><p>如果你确实想添加该文件，可以用 <code>-f</code> 强制添加到 Git：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>git add -f .DS_Store
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_8-4-小结" tabindex="-1"><a class="header-anchor" href="#_8-4-小结" aria-hidden="true">#</a> 8.4 小结</h2><p>当需要忽略某些文件时，可以在 git 工作目录中编辑 <code>.gitignore</code> 文件的规则，<code>.gitignore</code> 文件本身要放到版本库里，并且可以对 <code>.gitignore</code> 做版本管理，大部分情况下以下类型会把它忽略：</p><ol><li>忽略操作系统自动生成的文件，比如缩略图等；</li><li>忽略编译生成的中间文件、可执行文件以及一些编辑器自动生成的文件；</li><li>忽略你自己的带有敏感信息的配置文件，比如存放口令的配置文件；</li></ol>`,31),h=[p];function l(_,m){return i(),d("div",null,h)}const f=e(g,[["render",l],["__file","index-08.html.vue"]]);export{f as default};
