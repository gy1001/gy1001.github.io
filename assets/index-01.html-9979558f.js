import{_ as a,M as r,p as s,q as i,R as e,t,N as n,a1 as l}from"./framework-e8cb8151.js";const c="/assets/20190725014721-c5f819bb.png",p="/assets/20190816222147-565d51c8.png",d={},h=e("h1",{id:"_01-课程导学",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_01-课程导学","aria-hidden":"true"},"#"),t(" 01-课程导学")],-1),_=e("h2",{id:"推荐文章",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#推荐文章","aria-hidden":"true"},"#"),t(" 推荐文章")],-1),u=e("blockquote",null,[e("p",null,"官网的中文翻译做的太差了")],-1),g={href:"https://github.yanhaixiang.com/jest-tutorial/",target:"_blank",rel:"noopener noreferrer"},f={href:"https://juejin.cn/post/7141286019361407006",target:"_blank",rel:"noopener noreferrer"},m={href:"https://itxiaohao.github.io/passages/automated-testing-learn-introduction/",target:"_blank",rel:"noopener noreferrer"},b=l('<blockquote><p>带你了解课程主体内容，整体对课程中的前端自动化测试及知识点做通盘了解。帮助大家确认课程是否与自己的需求匹配。从零基础入门前端自动化测试，带你深入了解如何借助 Jest 这样的工具和 TDD 等测试思想，快速完成对 Vue，React 项目的完整测试...</p></blockquote><h2 id="自动化测试类型" tabindex="-1"><a class="header-anchor" href="#自动化测试类型" aria-hidden="true">#</a> 自动化测试类型</h2><p>自动化测试有三种类型：<code>Unit</code>(单元测试)、<code>Integration</code>(集成测试)、<code>End-to-end</code>(端到端测试)</p><ol><li><strong>单元测试</strong></li></ol><p>单元测试是测试一个模块，不依赖任何外部资源</p><p>因为没有测试应用依赖的外部资源(如操作数据库等)，无法确保应用以及功能的可靠性，这时候就需要集成测试了</p><ol start="2"><li><strong>集成测试</strong></li></ol><p>测试一个模块或者多个模块，并伴随着它们对应的外部依赖资源，它测试的是应用代码的集成性，比如文件或者数据库。</p><p>这种代码执行起来稍慢，因为他们经常需要读写数据库，但是它能帮助你更加确保应用的可靠性</p><p>集成测试的定义是：一次测试多个模块，并将他们视作一个整体来测试。如果你将两个模块放到一起测试，有人觉得这是在做集成测试，其实不是，而是单元测试.</p><p>为什么？因为他们没有任何的外部资源，集成测试是将一个或者多个模块与外部资源一并测试</p><ol start="3"><li><strong>端对端测试</strong></li></ol><p>依靠用户界面来驱动测试，这类测试可以保证很高的可靠性，但是它有两个很大的问题，第一个问题就是太慢了。因为每次测试都需要加载用户界面，每次测试都需要加载应用，也许还要用户登录，导航到指定页面，提交表单并检查结果，等等一系列，所以测试效率非常的慢</p><p>第二个问题就是太脆弱，因为一个程序、页面修改一下，如果 UI 变了，操作逻辑变了，就会彻底破坏这种测试</p><h2 id="测试金字塔" tabindex="-1"><a class="header-anchor" href="#测试金字塔" aria-hidden="true">#</a> 测试金字塔</h2><p><img src="'+c+'" alt="img"></p><p>这个金字塔显示，大部分的测试应该集中在单元测试</p><ol><li>多用单元测试少用端对端测试</li><li>单元测试无法覆盖的用集成测试弥补</li><li>尽量减少使用端到端测试</li></ol><p><strong>只针对最核心的流程进行测试</strong></p><p><img src="'+p+'" alt="image"></p>',20);function x(k,N){const o=r("ExternalLinkIcon");return s(),i("div",null,[h,_,u,e("p",null,[e("a",g,[t("Jest 实践指南"),n(o)])]),e("p",null,[e("a",f,[t("Jest单元测试"),n(o)])]),e("p",null,[e("a",m,[t("Jest 自动化测试教程"),n(o)])]),b])}const q=a(d,[["render",x],["__file","index-01.html.vue"]]);export{q as default};
