import{_ as p,M as o,p as c,q as l,R as n,t as s,N as e,a1 as t}from"./framework-e8cb8151.js";const i={},u=n("h1",{id:"_11-代理模式-找明星拍广告",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_11-代理模式-找明星拍广告","aria-hidden":"true"},"#"),s(" 11-代理模式：找明星拍广告")],-1),r=n("p",null,[n("img",{src:"https://img1.mukewang.com/5d22afe6000174cb06400359.jpg",alt:"img"})],-1),d=n("blockquote",null,[n("p",null,"立志是事业的大门，工作是登门入室的的旅途。 ——巴斯德")],-1),k=n("p",null,[n("strong",null,"代理模式"),s(" （Proxy Pattern）又称委托模式，它为目标对象创造了一个代理对象，以控制对目标对象的访问。")],-1),v=n("p",null,"代理模式把代理对象插入到访问者和目标对象之间，从而为访问者对目标对象的访问引入一定的间接性。正是这种间接性，给了代理对象很多操作空间，比如在调用目标对象前和调用后进行一些预操作和后操作，从而实现新的功能或者扩展目标的功能。",-1),m=n("strong",null,"注意：",-1),b={href:"http://es6.ruanyifeng.com/#docs/let",target:"_blank",rel:"noopener noreferrer"},g={href:"http://es6.ruanyifeng.com/#docs/function",target:"_blank",rel:"noopener noreferrer"},h={href:"http://es6.ruanyifeng.com/#docs/proxy",target:"_blank",rel:"noopener noreferrer"},f=t(`<h2 id="_1-你曾见过的代理模式" tabindex="-1"><a class="header-anchor" href="#_1-你曾见过的代理模式" aria-hidden="true">#</a> 1. 你曾见过的代理模式</h2><p>明星总是有个助理，或者说经纪人，如果某导演来请这个明星演出，或者某个品牌来找明星做广告，需要经纪人帮明星做接洽工作。而且经纪人也起到过滤的作用，毕竟明星也不是什么电影和广告都会接。类似的场景还有很多，再比如领导和秘书…（emmm）</p><p>再看另一个例子。打官司是件非常麻烦的事，包括查找法律条文、起草法律文书、法庭辩论、签署法律文件、申请法院执行等等流程。此时，当事人就可聘请代理律师来完成整个打官司的所有事务。当事人只需与代理律师签订全权委托协议，那么整个打官司的过程，当事人都可以不用出现。法院的一些复杂事务都可以通过代理律师来完成，而法院需要当事人完成某些工作的时候，比如出庭，代理律师才会通知当事人，并为当事人出谋划策。</p><p>在类似的场景中，有以下特点：</p><ol><li>导演/法院（访问者）对明星/当事人（目标）的访问都是通过经纪人/律师（代理）来完成；</li><li>经纪人/律师（代理）对访问有过滤的功能；</li></ol><h2 id="_2-实例的代码实现" tabindex="-1"><a class="header-anchor" href="#_2-实例的代码实现" aria-hidden="true">#</a> 2. 实例的代码实现</h2><p>我们使用 JavaScript 来将上面的明星例子实现一下。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">/* 明星 */</span>
<span class="token keyword">var</span> SuperStar <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;小鲜肉&#39;</span><span class="token punctuation">,</span>
  <span class="token function-variable function">playAdvertisement</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">ad</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ad<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 经纪人 */</span>
<span class="token keyword">var</span> ProxyAssistant <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;经纪人张某&#39;</span><span class="token punctuation">,</span>
  <span class="token function-variable function">playAdvertisement</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">reward<span class="token punctuation">,</span> ad</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>reward <span class="token operator">&gt;</span> <span class="token number">1000000</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 如果报酬超过100w</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;没问题，我们小鲜鲜最喜欢拍广告了！&#39;</span><span class="token punctuation">)</span>
      SuperStar<span class="token punctuation">.</span><span class="token function">playAdvertisement</span><span class="token punctuation">(</span>ad<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;没空，滚！&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

ProxyAssistant<span class="token punctuation">.</span><span class="token function">playAdvertisement</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">,</span> <span class="token string">&#39;纯蒸酸牛奶，味道纯纯，尽享纯蒸&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// 输出： 没空，滚</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里我们通过经纪人的方式来和明星取得联系，经纪人会视条件过滤一部分合作请求。</p><p>我们可以升级一下，比如如果明星没有档期的话，可以通过经纪人安排档期，当明星有空的时候才让明星来拍广告。这里通过 <code>Promise</code> 的方式来实现档期的安排：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">/* 明星 */</span>
<span class="token keyword">const</span> SuperStar <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;小鲜肉&#39;</span><span class="token punctuation">,</span>
  <span class="token function">playAdvertisement</span><span class="token punctuation">(</span><span class="token parameter">ad</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ad<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 经纪人 */</span>
<span class="token keyword">const</span> ProxyAssistant <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;经纪人张某&#39;</span><span class="token punctuation">,</span>
  <span class="token function">scheduleTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;小鲜鲜有空了&#39;</span><span class="token punctuation">)</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span> <span class="token comment">// 发现明星有空了</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">playAdvertisement</span><span class="token punctuation">(</span><span class="token parameter">reward<span class="token punctuation">,</span> ad</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>reward <span class="token operator">&gt;</span> <span class="token number">1000000</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 如果报酬超过100w</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;没问题，我们小鲜鲜最喜欢拍广告了！&#39;</span><span class="token punctuation">)</span>
      ProxyAssistant<span class="token punctuation">.</span><span class="token function">scheduleTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 安排上了</span>
        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> SuperStar<span class="token punctuation">.</span><span class="token function">playAdvertisement</span><span class="token punctuation">(</span>ad<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;没空，滚！&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

ProxyAssistant<span class="token punctuation">.</span><span class="token function">playAdvertisement</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">,</span> <span class="token string">&#39;纯蒸酸牛奶，味道纯纯，尽享纯蒸&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// 输出： 没空，滚</span>

ProxyAssistant<span class="token punctuation">.</span><span class="token function">playAdvertisement</span><span class="token punctuation">(</span><span class="token number">1000001</span><span class="token punctuation">,</span> <span class="token string">&#39;纯蒸酸牛奶，味道纯纯，尽享纯蒸&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// 输出： 没问题，我们小鲜鲜最喜欢拍广告了！</span>
<span class="token comment">// 2秒后</span>
<span class="token comment">// 输出： 小鲜鲜有空了</span>
<span class="token comment">// 输出： 纯蒸酸牛奶，味道纯纯，尽享纯蒸</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里就简单实现了经纪人对请求的过滤，对明星档期的安排，实现了一个代理对象的基本功能。</p><h2 id="_3-代理模式的概念" tabindex="-1"><a class="header-anchor" href="#_3-代理模式的概念" aria-hidden="true">#</a> 3. 代理模式的概念</h2><p>对于上面的例子，明星就相当于被代理的目标对象（Target），而经纪人就相当于代理对象（Proxy），希望找明星的人是访问者（Visitor），他们直接找不到明星，只能找明星的经纪人来进行业务商洽。主要有以下几个概念：</p><ol><li><strong>Target：</strong> 目标对象，也是被代理对象，是具体业务的实际执行者；</li><li><strong>Proxy：</strong> 代理对象，负责引用目标对象，以及对访问的过滤和预处理；</li></ol><p>概略图如下：</p><p><img src="http://img.mukewang.com/5d1321f70001d13a07450249.png" alt="图片描述"></p><p>ES6 原生提供了 <code>Proxy</code> 构造函数，这个构造函数让我们可以很方便地创建代理对象：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> handler<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数中 <code>target</code> 是被代理对象，<code>handler</code> 用来设置代理行为。</p><p>这里使用 <code>Proxy</code> 来实现一下上面的经纪人例子：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">/* 明星 */</span>
<span class="token keyword">const</span> SuperStar <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;小鲜肉&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">scheduleFlag</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 档期标识位，false-没空（默认值），true-有空</span>
  <span class="token function">playAdvertisement</span><span class="token punctuation">(</span><span class="token parameter">ad</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ad<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 经纪人 */</span>
<span class="token keyword">const</span> ProxyAssistant <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;经纪人张某&#39;</span><span class="token punctuation">,</span>
  <span class="token function">scheduleTime</span><span class="token punctuation">(</span><span class="token parameter">ad</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> schedule <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>SuperStar<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token comment">// 在这里监听 scheduleFlag 值的变化</span>
      <span class="token function">set</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> prop<span class="token punctuation">,</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>prop <span class="token operator">!==</span> <span class="token string">&#39;scheduleFlag&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">.</span>scheduleFlag <span class="token operator">===</span> <span class="token boolean">false</span> <span class="token operator">&amp;&amp;</span> val <span class="token operator">===</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// 小鲜肉现在有空了</span>
          obj<span class="token punctuation">.</span>scheduleFlag <span class="token operator">=</span> <span class="token boolean">true</span>
          obj<span class="token punctuation">.</span><span class="token function">playAdvertisement</span><span class="token punctuation">(</span>ad<span class="token punctuation">)</span> <span class="token comment">// 安排上了</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;小鲜鲜有空了&#39;</span><span class="token punctuation">)</span>
      schedule<span class="token punctuation">.</span>scheduleFlag <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token comment">// 明星有空了</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">playAdvertisement</span><span class="token punctuation">(</span><span class="token parameter">reward<span class="token punctuation">,</span> ad</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>reward <span class="token operator">&gt;</span> <span class="token number">1000000</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 如果报酬超过100w</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;没问题，我们小鲜鲜最喜欢拍广告了！&#39;</span><span class="token punctuation">)</span>
      ProxyAssistant<span class="token punctuation">.</span><span class="token function">scheduleTime</span><span class="token punctuation">(</span>ad<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;没空，滚！&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

ProxyAssistant<span class="token punctuation">.</span><span class="token function">playAdvertisement</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">,</span> <span class="token string">&#39;纯蒸酸牛奶，味道纯纯，尽享纯蒸&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// 输出： 没空，滚</span>

ProxyAssistant<span class="token punctuation">.</span><span class="token function">playAdvertisement</span><span class="token punctuation">(</span><span class="token number">1000001</span><span class="token punctuation">,</span> <span class="token string">&#39;纯蒸酸牛奶，味道纯纯，尽享纯蒸&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// 输出： 没问题，我们小鲜鲜最喜欢拍广告了！</span>
<span class="token comment">// 2秒后</span>
<span class="token comment">// 输出： 小鲜鲜有空了</span>
<span class="token comment">// 输出： 纯蒸酸牛奶，味道纯纯，尽享纯蒸</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,22),y={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty",target:"_blank",rel:"noopener noreferrer"},_=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">/* 明星 */</span>
<span class="token keyword">const</span> SuperStar <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;小鲜肉&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">scheduleFlagActually</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 档期标识位，false-没空（默认值），true-有空</span>
  <span class="token function">playAdvertisement</span><span class="token punctuation">(</span><span class="token parameter">ad</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ad<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 经纪人 */</span>
<span class="token keyword">const</span> ProxyAssistant <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;经纪人张某&#39;</span><span class="token punctuation">,</span>
  <span class="token function">scheduleTime</span><span class="token punctuation">(</span><span class="token parameter">ad</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>SuperStar<span class="token punctuation">,</span> <span class="token string">&#39;scheduleFlag&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token comment">// 在这里监听 scheduleFlag 值的变化</span>
      <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> SuperStar<span class="token punctuation">.</span>scheduleFlagActually
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token function">set</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>SuperStar<span class="token punctuation">.</span>scheduleFlagActually <span class="token operator">===</span> <span class="token boolean">false</span> <span class="token operator">&amp;&amp;</span> val <span class="token operator">===</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// 小鲜肉现在有空了</span>
          SuperStar<span class="token punctuation">.</span>scheduleFlagActually <span class="token operator">=</span> <span class="token boolean">true</span>
          SuperStar<span class="token punctuation">.</span><span class="token function">playAdvertisement</span><span class="token punctuation">(</span>ad<span class="token punctuation">)</span> <span class="token comment">// 安排上了</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;小鲜鲜有空了&#39;</span><span class="token punctuation">)</span>
      SuperStar<span class="token punctuation">.</span>scheduleFlag <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span> <span class="token comment">// 明星有空了</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">playAdvertisement</span><span class="token punctuation">(</span><span class="token parameter">reward<span class="token punctuation">,</span> ad</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>reward <span class="token operator">&gt;</span> <span class="token number">1000000</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 如果报酬超过100w</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;没问题，我们小鲜鲜最喜欢拍广告了！&#39;</span><span class="token punctuation">)</span>
      ProxyAssistant<span class="token punctuation">.</span><span class="token function">scheduleTime</span><span class="token punctuation">(</span>ad<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;没空，滚！&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

ProxyAssistant<span class="token punctuation">.</span><span class="token function">playAdvertisement</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">,</span> <span class="token string">&#39;纯蒸酸牛奶，味道纯纯，尽享纯蒸&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// 输出： 没空，滚</span>

ProxyAssistant<span class="token punctuation">.</span><span class="token function">playAdvertisement</span><span class="token punctuation">(</span><span class="token number">1000001</span><span class="token punctuation">,</span> <span class="token string">&#39;纯蒸酸牛奶，味道纯纯，尽享纯蒸&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// 输出： 没问题，我们小鲜鲜最喜欢拍广告了！</span>
<span class="token comment">// 2秒后</span>
<span class="token comment">// 输出： 小鲜鲜有空了</span>
<span class="token comment">// 输出： 纯蒸酸牛奶，味道纯纯，尽享纯蒸</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-代理模式在实战中的应用" tabindex="-1"><a class="header-anchor" href="#_4-代理模式在实战中的应用" aria-hidden="true">#</a> 4. 代理模式在实战中的应用</h2><h3 id="_4-1-拦截器" tabindex="-1"><a class="header-anchor" href="#_4-1-拦截器" aria-hidden="true">#</a> 4.1 拦截器</h3><p>上一小节使用代理模式代理对象的访问的方式，一般又被称为<strong>拦截器</strong>。</p><p>拦截器的思想在实战中应用非常多，比如我们在项目中经常使用 <code>Axios</code> 的实例来进行 HTTP 的请求，使用拦截器 <code>interceptor</code> 可以提前对 <code>request</code> 请求和 <code>response</code> 返回进行一些预处理，比如：</p><ol><li><code>request</code> 请求头的设置，和 Cookie 信息的设置；</li><li>权限信息的预处理，常见的比如验权操作或者 Token 验证；</li><li>数据格式的格式化，比如对组件绑定的 <code>Date</code> 类型的数据在请求前进行一些格式约定好的序列化操作；</li><li>空字段的格式预处理，根据后端进行一些过滤操作；</li><li><code>response</code> 的一些通用报错处理，比如使用 Message 控件抛出错误；</li></ol><p>除了 HTTP 相关的拦截器之外，还有路由跳转的拦截器，可以进行一些路由跳转的预处理等操作。</p><h3 id="_4-2-前端框架的数据响应式化" tabindex="-1"><a class="header-anchor" href="#_4-2-前端框架的数据响应式化" aria-hidden="true">#</a> 4.2 前端框架的数据响应式化</h3><p>现在的很多前端框架或者状态管理框架都使用上面介绍的 <code>Object.defineProperty</code> 和 <code>Proxy</code> 来实现数据的响应式化，比如 Vue、Mobx、AvalonJS 等，Vue 2.x 与 AvalonJS 使用前者，而 Vue 3.x 与 Mobx 5.x 使用后者。</p><p>Vue 2.x 中通过 <code>Object.defineProperty</code> 来劫持各个属性的 <code>setter/getter</code>，在数据变动时，通过发布-订阅模式发布消息给订阅者，触发相应的监听回调，从而实现数据的响应式化，也就是数据到视图的双向绑定。</p>`,10),x=n("code",null,"Object.defineProperty",-1),w=n("code",null,"Proxy",-1),A={href:"https://cn.vuejs.org/v2/guide/list.html#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9",target:"_blank",rel:"noopener noreferrer"},P=t('<ol><li>无法监听利用索引直接设置数组的一个项，例如：<code>vm.items[indexOfItem] = newValue</code>；</li><li>无法监听数组的长度的修改，例如：<code>vm.items.length = newLength</code>；</li><li>无法监听 ES6 的 <code>Set</code>、<code>WeakSet</code>、<code>Map</code>、<code>WeakMap</code> 的变化；</li><li>无法监听 <code>Class</code> 类型的数据；</li><li>无法监听对象属性的新加或者删除；</li></ol><p>除此之外还有性能上的差异，基于这些原因，Vue 3.x 改用 <code>Proxy</code> 来实现数据监听了。当然缺点就是对 IE 用户的不友好，兼容性敏感的场景需要做一些取舍。</p><h3 id="_4-3-缓存代理" tabindex="-1"><a class="header-anchor" href="#_4-3-缓存代理" aria-hidden="true">#</a> 4.3 缓存代理</h3><p>在高阶函数的文章中，就介绍了<strong>备忘模式</strong>，备忘模式就是使用缓存代理的思想，将复杂计算的结果缓存起来，下次传参一致时直接返回之前缓存的计算结果。</p><h3 id="_4-4-保护代理和虚拟代理" tabindex="-1"><a class="header-anchor" href="#_4-4-保护代理和虚拟代理" aria-hidden="true">#</a> 4.4 保护代理和虚拟代理</h3><p>有的书籍中着重强调代理的两种形式：<strong>保护代理</strong>和<strong>虚拟代理</strong>：</p><ol><li><strong>保护代理</strong> ：当一个对象可能会收到大量请求时，可以设置保护代理，通过一些条件判断对请求进行过滤；</li><li><strong>虚拟代理</strong> ：在程序中可以能有一些代价昂贵的操作，此时可以设置虚拟代理，虚拟代理会在适合的时候才执行操作。</li></ol><p>保护代理其实就是对访问的过滤，之前的经纪人例子就属于这种类型。</p><p>而虚拟代理是为一个开销很大的操作先占位，之后再执行，比如：</p><ol><li>一个很大的图片加载前，一般使用菊花图、低质量图片等提前占位，优化图片加载导致白屏的情况；</li><li>现在很流行的页面加载前使用<strong>骨架屏</strong>来提前占位，很多 WebApp 和 NativeApp 都采用这种方式来优化用户白屏体验；</li></ol><p><img src="http://img.mukewang.com/5d1322290001ebb707260192.gif" alt="图片描述"></p><h3 id="_4-5-正向代理与反向代理" tabindex="-1"><a class="header-anchor" href="#_4-5-正向代理与反向代理" aria-hidden="true">#</a> 4.5 正向代理与反向代理</h3>',12),S={href:"https://cloud.tencent.com/developer/article/1418457",target:"_blank",rel:"noopener noreferrer"},j=t('<p>还有个经常用的例子是<strong>反向代理</strong>（Reverse Proxy），反向代理对应的是<strong>正向代理</strong>（Forward Proxy），他们的区别是：</p><ol><li><strong>正向代理：</strong> 一般的访问流程是客户端直接向目标服务器发送请求并获取内容，使用正向代理后，客户端改为向代理服务器发送请求，并指定目标服务器（原始服务器），然后由代理服务器和原始服务器通信，转交请求并获得的内容，再返回给客户端。正向代理隐藏了真实的客户端，为客户端收发请求，使真实客户端对服务器不可见；</li><li><strong>反向代理：</strong> 与一般访问流程相比，使用反向代理后，直接收到请求的服务器是代理服务器，然后将请求转发给内部网络上真正进行处理的服务器，得到的结果返回给客户端。反向代理隐藏了真实的服务器，为服务器收发请求，使真实服务器对客户端不可见。</li></ol><p>反向代理一般在处理跨域请求的时候比较常用，属于服务端开发人员的日常操作了，另外在缓存服务器、负载均衡服务器等等场景也是使用到代理模式的思想。</p><p><img src="http://img.mukewang.com/5d1322580001157509240996.png" alt="图片描述"></p><h2 id="_5-代理模式的优缺点" tabindex="-1"><a class="header-anchor" href="#_5-代理模式的优缺点" aria-hidden="true">#</a> 5. 代理模式的优缺点</h2><p>代理模式的主要优点有：</p><ol><li>代理对象在访问者与目标对象之间可以起到<strong>中介和保护目标对象</strong>的作用；</li><li>代理对象可以<strong>扩展目标对象的功能</strong>；</li><li>代理模式能将访问者与目标对象分离，在一定程度上<strong>降低了系统的耦合度</strong>，如果我们希望适度扩展目标对象的一些功能，通过修改代理对象就可以了，符合开闭原则；</li></ol><p>代理模式的缺点主要是增加了系统的复杂度，要斟酌当前场景是不是真的需要引入代理模式（<strong>十八线明星就别请经纪人了</strong>）。</p><h2 id="_6-其他相关模式" tabindex="-1"><a class="header-anchor" href="#_6-其他相关模式" aria-hidden="true">#</a> 6. 其他相关模式</h2><p>很多其他的模式，比如状态模式、策略模式、访问者模式其实也是使用了代理模式，包括在之前高阶函数处介绍的备忘模式，本质上也是一种缓存代理。</p><h3 id="_6-1-代理模式与适配器模式" tabindex="-1"><a class="header-anchor" href="#_6-1-代理模式与适配器模式" aria-hidden="true">#</a> 6.1 代理模式与适配器模式</h3><p>代理模式和适配器模式都为另一个对象提供间接性的访问，他们的区别：</p><ol><li><strong>适配器模式：</strong> 主要用来解决接口之间不匹配的问题，通常是为所适配的对象提供一个不同的接口；</li><li><strong>代理模式：</strong> 提供访问目标对象的间接访问，以及对目标对象功能的扩展，一般提供和目标对象一样的接口；</li></ol><h3 id="_6-2-代理模式与装饰者模式" tabindex="-1"><a class="header-anchor" href="#_6-2-代理模式与装饰者模式" aria-hidden="true">#</a> 6.2 代理模式与装饰者模式</h3><p>装饰者模式实现上和代理模式类似，都是在访问目标对象之前或者之后执行一些逻辑，但是目的和功能不同：</p><ol><li><strong>装饰者模式：</strong> 目的是为了方便地给目标对象添加功能，也就是动态地添加功能；</li><li><strong>代理模式：</strong> 主要目的是控制其他访问者对目标对象的访问；</li></ol><p>推介阅读：</p>',17),T={href:"https://juejin.im/post/5b79a2786fb9a01a18267362",target:"_blank",rel:"noopener noreferrer"},F={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy",target:"_blank",rel:"noopener noreferrer"},V={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty",target:"_blank",rel:"noopener noreferrer"};function E(O,N){const a=o("ExternalLinkIcon");return c(),l("div",null,[u,r,d,k,v,n("blockquote",null,[n("p",null,[m,s(" 本文可能用到一些 ES6 的语法 "),n("a",b,[s("let/const"),e(a)]),s("、"),n("a",g,[s("箭头函数"),e(a)]),s("、"),n("a",h,[s("代理 Proxy"),e(a)]),s(" 等，如果还没接触过可以点击链接稍加学习 ~")])]),f,n("p",null,[s("在 ES6 之前，一般是使用 "),n("a",y,[s("Object.defineProperty"),e(a)]),s(" 来完成相同的功能，我们可以使用这个 API 改造一下：")]),_,n("p",null,[s("为什么 Vue 2.x 到 3.x 要从 "),x,s(" 改用 "),w,s(" 呢，是因为前者的"),n("a",A,[s("一些局限性"),e(a)]),s("，导致的以下缺陷：")]),P,n("p",null,[n("a",S,[s("推荐文章:终于有人把正向代理和反向代理解释的明明白白了！"),e(a)])]),j,n("ol",null,[n("li",null,[n("a",T,[s("Vue 项目骨架屏注入实践"),e(a)])]),n("li",null,[n("a",F,[s("Proxy - JavaScript | MDN"),e(a)])]),n("li",null,[n("a",V,[s("Object.defineProperty() - JavaScript | MDN"),e(a)])])])])}const M=p(i,[["render",E],["__file","index-11.html.vue"]]);export{M as default};
