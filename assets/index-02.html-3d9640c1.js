import{_ as n,p as s,q as a,a1 as t}from"./framework-e8cb8151.js";const p={},e=t(`<h1 id="_02-课程介绍" tabindex="-1"><a class="header-anchor" href="#_02-课程介绍" aria-hidden="true">#</a> 02-课程介绍</h1><h2 id="_01-先看几个面试题" tabindex="-1"><a class="header-anchor" href="#_01-先看几个面试题" aria-hidden="true">#</a> 01: 先看几个面试题</h2><ul><li>先看几个面试题，先不解答，自己思考</li><li>思考如何应对这些、以及所有的面试？</li></ul><h3 id="vue-面试题" tabindex="-1"><a class="header-anchor" href="#vue-面试题" aria-hidden="true">#</a> Vue 面试题</h3><ul><li>v-show 和 v-if 的面试</li><li>为何 v-for 中要用 key</li><li>描述 Vue 组件的生命周期（有父子组件的情况）</li><li>Vue 组件如何通讯</li><li>描述组件渲染和更新的过程</li><li>双向数据绑定 v-model 的实现原理</li></ul><h3 id="react-面试题" tabindex="-1"><a class="header-anchor" href="#react-面试题" aria-hidden="true">#</a> React 面试题</h3><ul><li><p>React 组件如何通讯</p></li><li><p>JSX 本质是什么</p></li><li><p>context 是什么，有何用途</p></li><li><p>shouldComponentUpdate 的用途</p></li><li><p>描述 Redux 单项数据流</p></li><li><p>setState 是同步还是异步，根据实际代码</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Example</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">val</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// this.state.val 初始值是 0</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">val</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>val <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>val<span class="token punctuation">)</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">val</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>val <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>val<span class="token punctuation">)</span>

    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">val</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>val <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>val<span class="token punctuation">)</span>

      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">val</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>val <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>val<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>val<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="框架综合应用" tabindex="-1"><a class="header-anchor" href="#框架综合应用" aria-hidden="true">#</a> 框架综合应用</h3><ol><li>基于 React 设计一个 todoList （组件结构，redux state 数据结构）</li><li>基于 Vue 设计一个购物车 （组件结构，vuex state 数据结构）</li></ol><h3 id="webpack-面试题" tabindex="-1"><a class="header-anchor" href="#webpack-面试题" aria-hidden="true">#</a> Webpack 面试题</h3><ol><li>前端代码为何要进行构建和打包？</li><li>module chunk bundle 分别事什么意思，有何区别？</li><li>loader plugin 的区别</li><li>webpack 如何实现懒加载</li><li>webpack 常见性能优化</li><li>babel-runtime 和 babel-polyfill 的区别</li></ol><h3 id="如何应对上述面试题" tabindex="-1"><a class="header-anchor" href="#如何应对上述面试题" aria-hidden="true">#</a> 如何应对上述面试题？</h3><ul><li>框架的使用（基本使用，高级特性，周边插件）</li><li>框架的原理（基本原理的了解，热门技术的深度，全面性）</li><li>框架的实际应用，即设计能力（组件结构，数据结构）</li></ul><h3 id="面试官为何要这样考察" tabindex="-1"><a class="header-anchor" href="#面试官为何要这样考察" aria-hidden="true">#</a> 面试官为何要这样考察？</h3><ul><li>保证候选人能正常工作 --- 考察使用</li><li>多个候选人竞争时，选择有技术追求的 --- 考察原理</li><li>看候选人是否能独立承担项目 --- 考察设计能力</li></ul>`,15),o=[e];function l(c,i){return s(),a("div",null,o)}const r=n(p,[["render",l],["__file","index-02.html.vue"]]);export{r as default};
