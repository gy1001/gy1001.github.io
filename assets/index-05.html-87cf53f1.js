import{_ as n,p as s,q as a,a1 as p}from"./framework-e8cb8151.js";const t={},e=p(`<h1 id="_05-深学-ts-必会的-js-技术【不会-js-原型继承的进入学习】" tabindex="-1"><a class="header-anchor" href="#_05-深学-ts-必会的-js-技术【不会-js-原型继承的进入学习】" aria-hidden="true">#</a> 05-深学 TS 必会的 JS 技术【不会 JS 原型继承的进入学习】</h1><h2 id="_01-本章概述【学习本章技能的重要性】" tabindex="-1"><a class="header-anchor" href="#_01-本章概述【学习本章技能的重要性】" aria-hidden="true">#</a> 01: 本章概述【学习本章技能的重要性】</h2><h2 id="_02-本章准备-tsconfig-多级目录配置" tabindex="-1"><a class="header-anchor" href="#_02-本章准备-tsconfig-多级目录配置" aria-hidden="true">#</a> 02: 本章准备：tsconfig 多级目录配置</h2><h2 id="_03-ts-相关-js-es5-原型继承" tabindex="-1"><a class="header-anchor" href="#_03-ts-相关-js-es5-原型继承" aria-hidden="true">#</a> 03：TS 相关 JS：ES5 原型继承</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Vechile</span><span class="token punctuation">(</span><span class="token parameter">brandNo<span class="token punctuation">,</span> price</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 父类</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>brandNo <span class="token operator">=</span> brandNo
  <span class="token keyword">this</span><span class="token punctuation">.</span>price <span class="token operator">=</span> price
<span class="token punctuation">}</span>

<span class="token class-name">Vechile</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">sale</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token operator">+</span> <span class="token string">&#39; 销售&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// 继承</span>
<span class="token keyword">function</span> <span class="token function">Bus</span><span class="token punctuation">(</span><span class="token parameter">brandNo<span class="token punctuation">,</span> price<span class="token punctuation">,</span> seatNo</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 子类</span>
  <span class="token function">Vechile</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> brandNo<span class="token punctuation">,</span> price<span class="token punctuation">)</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>seatNo <span class="token operator">=</span> seatNo
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">Car</span><span class="token punctuation">(</span><span class="token parameter">brandNo<span class="token punctuation">,</span> price<span class="token punctuation">,</span> type</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">Vechile</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> brandNo<span class="token punctuation">,</span> price<span class="token punctuation">)</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>type <span class="token operator">=</span> type
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_04-ts-相关-js-深入-es5-原型继承和组合继承" tabindex="-1"><a class="header-anchor" href="#_04-ts-相关-js-深入-es5-原型继承和组合继承" aria-hidden="true">#</a> 04：TS 相关 JS：深入 ES5 原型继承和组合继承</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Vechile</span><span class="token punctuation">(</span><span class="token parameter">brandNo<span class="token punctuation">,</span> price</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>brandNo <span class="token operator">=</span> brandNo
  <span class="token keyword">this</span><span class="token punctuation">.</span>price <span class="token operator">=</span> price
<span class="token punctuation">}</span>

<span class="token class-name">Vechile</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">sale</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token operator">+</span> <span class="token string">&#39; 销售&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">Bus</span><span class="token punctuation">(</span><span class="token parameter">brandNo<span class="token punctuation">,</span> price<span class="token punctuation">,</span> seatNo</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">Vechile</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> brandNo<span class="token punctuation">,</span> price<span class="token punctuation">)</span> <span class="token comment">// 借用构造函数继承</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>seatNo <span class="token operator">=</span> seatNo
<span class="token punctuation">}</span>
<span class="token comment">// 原型链继承</span>
<span class="token class-name">Bus</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vechile</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">Car</span><span class="token punctuation">(</span><span class="token parameter">brandNo<span class="token punctuation">,</span> price<span class="token punctuation">,</span> type</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">Vechile</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> brandNo<span class="token punctuation">,</span> price<span class="token punctuation">)</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>type <span class="token operator">=</span> type
<span class="token punctuation">}</span>

<span class="token keyword">const</span> bus <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Bus</span><span class="token punctuation">(</span><span class="token string">&#39;奥迪&#39;</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">,</span> <span class="token string">&#39;我的伙伴&#39;</span><span class="token punctuation">)</span>
bus<span class="token punctuation">.</span><span class="token function">sale</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_05-ts-继承底层实现方式-es5-原型继承升级" tabindex="-1"><a class="header-anchor" href="#_05-ts-继承底层实现方式-es5-原型继承升级" aria-hidden="true">#</a> 05: TS 继承底层实现方式：ES5 原型继承升级</h2><blockquote><p>上一节中我们使用 一个父类的实例对象作为子类的原型指向，这里面父类的实例对象上有两个属性 brandNo, price 就会浪费空间，</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Vechile</span><span class="token punctuation">(</span><span class="token parameter">brandNo<span class="token punctuation">,</span> price</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>brandNo <span class="token operator">=</span> brandNo
  <span class="token keyword">this</span><span class="token punctuation">.</span>price <span class="token operator">=</span> price
<span class="token punctuation">}</span>

<span class="token class-name">Vechile</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">sale</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token operator">+</span> <span class="token string">&#39; 销售&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">Bus</span><span class="token punctuation">(</span><span class="token parameter">brandNo<span class="token punctuation">,</span> price<span class="token punctuation">,</span> seatNo</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">Vechile</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> brandNo<span class="token punctuation">,</span> price<span class="token punctuation">)</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>seatNo <span class="token operator">=</span> seatNo
<span class="token punctuation">}</span>
<span class="token comment">// TS 继承的思想雏形：借助于一个中间对象, 也叫做：：：：寄生式组合继承</span>
<span class="token keyword">function</span> <span class="token function">protoExtendsWithMdl</span><span class="token punctuation">(</span><span class="token parameter">ParentClass<span class="token punctuation">,</span> ChildClass</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">function</span> <span class="token function">Middle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>constructor <span class="token operator">=</span> childClass
  <span class="token punctuation">}</span>
  <span class="token class-name">Middle</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token class-name">ParentClass</span><span class="token punctuation">.</span>prototype
  <span class="token class-name">ChildClass</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Middle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">protoExtendsWithMdl</span><span class="token punctuation">(</span>Vechile<span class="token punctuation">,</span> Bus<span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">Car</span><span class="token punctuation">(</span><span class="token parameter">brandNo<span class="token punctuation">,</span> price<span class="token punctuation">,</span> type</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">Vechile</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> brandNo<span class="token punctuation">,</span> price<span class="token punctuation">)</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>type <span class="token operator">=</span> type
<span class="token punctuation">}</span>

<span class="token keyword">const</span> bus <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Bus</span><span class="token punctuation">(</span><span class="token string">&#39;奥迪&#39;</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">,</span> <span class="token string">&#39;我的伙伴&#39;</span><span class="token punctuation">)</span>
bus<span class="token punctuation">.</span><span class="token function">sale</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_06-深入-ts-继承——微信-支付宝支付继承类-1" tabindex="-1"><a class="header-anchor" href="#_06-深入-ts-继承——微信-支付宝支付继承类-1" aria-hidden="true">#</a> 06：深入 TS 继承——微信，支付宝支付继承类-1</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Pay</span> <span class="token punctuation">{</span>
  <span class="token comment">// 支付父类</span>
  bank_card_no<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token comment">// 捆绑银行卡</span>
  balance<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token comment">// 银行卡余额</span>
  <span class="token keyword">const</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token comment">// 消费费用</span>
  tokenid<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token comment">// 登录后用户访问令牌</span>
  <span class="token function">pay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">enum</span> PayType <span class="token punctuation">{</span>
  WebChat <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>
  AliPay <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span>
  CloundFlashPayment <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">BankPay</span> <span class="token keyword">extends</span> <span class="token class-name">Pay</span> <span class="token punctuation">{</span>
  bank_network<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token comment">// 银行网点</span>
  bankno_type <span class="token comment">// 银行卡类型</span>
  bank_card_psw <span class="token comment">// 银行卡密码</span>
  custname <span class="token comment">// 顾客姓名</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">MobilePay</span> <span class="token keyword">extends</span> <span class="token class-name">Pay</span> <span class="token punctuation">{</span>
  type<span class="token operator">:</span> PayType
  change<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token comment">// 支付平台零钱</span>
  opendid<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token comment">// 用户识别身份 id</span>
  appid<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token comment">// 微信小程序 appid</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_07" tabindex="-1"><a class="header-anchor" href="#_07" aria-hidden="true">#</a> 07：</h2>`,13),c=[e];function o(i,l){return s(),a("div",null,c)}const k=n(t,[["render",o],["__file","index-05.html.vue"]]);export{k as default};
