import{_ as a,p as e,q as i,a1 as r}from"./framework-e8cb8151.js";const h="/assets/2023-07-23-17-24-14-image-6f8d5717.png",d="/assets/2023-07-23-17-31-52-image-3affd74f.png",t={},n=r('<h1 id="_02-了解页面生命周期-发现导致性能变慢的原因及解决方案" tabindex="-1"><a class="header-anchor" href="#_02-了解页面生命周期-发现导致性能变慢的原因及解决方案" aria-hidden="true">#</a> 02-了解页面生命周期，发现导致性能变慢的原因及解决方案</h1><h2 id="_01-通过发送请求到页面渲染理解页面的生命周期" tabindex="-1"><a class="header-anchor" href="#_01-通过发送请求到页面渲染理解页面的生命周期" aria-hidden="true">#</a> 01：通过发送请求到页面渲染理解页面的生命周期</h2><h3 id="抛出一个问题" tabindex="-1"><a class="header-anchor" href="#抛出一个问题" aria-hidden="true">#</a> 抛出一个问题</h3><ul><li>从浏览器地址栏输入 URL 后，到页面渲染出来，整个过程都发生了什么？</li></ul><h3 id="给出的一些回答" tabindex="-1"><a class="header-anchor" href="#给出的一些回答" aria-hidden="true">#</a> 给出的一些回答</h3><ul><li><p>初级：首先浏览器发起请求，然后服务器返回数据，最后浏览器执行脚本和页面渲染</p></li><li><p>中级：知道浏览器输入 URL 后会建立 TCP 链接，进行 HTTPS 的请求和响应，在浏览器接收到服务器返回数据之后了解到 Html Css 构建渲染树以及 JS 引擎解析和执行等</p></li><li><p><strong>高级：如何回答？</strong></p></li></ul><h3 id="看一张图-整个链路的流转过程" tabindex="-1"><a class="header-anchor" href="#看一张图-整个链路的流转过程" aria-hidden="true">#</a> 看一张图：整个链路的流转过程</h3><p><img src="'+h+'" alt=""></p><h3 id="为什么要了解页面恒明周期" tabindex="-1"><a class="header-anchor" href="#为什么要了解页面恒明周期" aria-hidden="true">#</a> 为什么要了解页面恒明周期</h3><h4 id="不了解" tabindex="-1"><a class="header-anchor" href="#不了解" aria-hidden="true">#</a> 不了解</h4><ul><li>不能准确定位哪个链路导致性能变差</li></ul><h4 id="只是会具体的性能方法" tabindex="-1"><a class="header-anchor" href="#只是会具体的性能方法" aria-hidden="true">#</a> 只是会具体的性能方法</h4><ul><li>会部分性能优化方法，但是缺乏全面的知识体系----管中窥豹，只见一斑</li></ul><h2 id="_02-根据生命周期分析性能变慢的原因及性能分析方案" tabindex="-1"><a class="header-anchor" href="#_02-根据生命周期分析性能变慢的原因及性能分析方案" aria-hidden="true">#</a> 02: 根据生命周期分析性能变慢的原因及性能分析方案</h2><h3 id="页面生命周期-性能分析方案" tabindex="-1"><a class="header-anchor" href="#页面生命周期-性能分析方案" aria-hidden="true">#</a> 页面生命周期-性能分析方案</h3><p><img src="'+d+'" alt=""></p><h3 id="列举一些性能优化方法" tabindex="-1"><a class="header-anchor" href="#列举一些性能优化方法" aria-hidden="true">#</a> 列举一些性能优化方法</h3><ul><li><p><strong>加载优化</strong>：通过懒加载可以直接减少 HTTP 请求，减少不需要在首屏展示的非关键性信息占用了页面加载时间</p></li><li><p><strong>构建优化</strong>：结合主流的构建工具 webpack，可以合并资源，压缩资源等减少 http 请求数量以及数据包体积</p></li></ul><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h3><ul><li><p>招式 =&gt; 具体的性能优化方案</p></li><li><p>内力 =&gt; 理解页面生命周期</p></li><li><p>招式 + 内力 =&gt; &quot;性能高手&quot;</p></li></ul>',20),l=[n];function s(c,o){return e(),i("div",null,l)}const u=a(t,[["render",s],["__file","index-02.html.vue"]]);export{u as default};
