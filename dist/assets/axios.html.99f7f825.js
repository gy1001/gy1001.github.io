import{r as e,o,c,a as n,b as p,F as l,e as t,d as s}from"./app.11ef605d.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const r={},i=t(`<h1 id="axios-\u6E90\u7801\u89E3\u6790" tabindex="-1"><a class="header-anchor" href="#axios-\u6E90\u7801\u89E3\u6790" aria-hidden="true">#</a> axios \u6E90\u7801\u89E3\u6790</h1><h2 id="_1\u3001\u6267\u884C\u8FC7\u7A0B" tabindex="-1"><a class="header-anchor" href="#_1\u3001\u6267\u884C\u8FC7\u7A0B" aria-hidden="true">#</a> 1\u3001\u6267\u884C\u8FC7\u7A0B</h2><h3 id="axios-\u7F51\u7EDC\u8BF7\u6C42\u6D41\u7A0B\u56FE" tabindex="-1"><a class="header-anchor" href="#axios-\u7F51\u7EDC\u8BF7\u6C42\u6D41\u7A0B\u56FE" aria-hidden="true">#</a> axios \u7F51\u7EDC\u8BF7\u6C42\u6D41\u7A0B\u56FE</h3><p><img src="https://s2.51cto.com/oss/202111/19/dcfed2c454bb95031e4c371da973ea6d.jpg" alt="img"></p><h3 id="\u4ECE\u4E3B\u5165\u53E3\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#\u4ECE\u4E3B\u5165\u53E3\u5206\u6790" aria-hidden="true">#</a> \u4ECE\u4E3B\u5165\u53E3\u5206\u6790</h3><ol><li><p>\u4E0B\u8F7D github \u4E0A axios \u5E93\u6E90\u7801\uFF0C\u6253\u5F00<code>package.json</code>\u6587\u4EF6\u53EF\u4EE5\u770B\u5230</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span> <span class="token string-property property">&quot;main&quot;</span><span class="token operator">:</span> <span class="token string">&quot;index.js&quot;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p>\u6253\u5F00<code>index.js</code>\u6587\u4EF6\uFF0C\u53EF\u4EE5\u770B\u5230\u5982\u4E0B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./lib/axios&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p>\u7EE7\u7EED\u6253\u5F00<code>./libe/axios.js</code>\u6587\u4EF6\uFF0C\u5C31\u53EF\u4EE5\u770B\u5230\u5B9E\u9645\u4E0A\u6211\u4EEC\u5E38\u8C03\u7528\u7684 <code>axios</code>\u7684\u6E90\u7801</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u521B\u5EFA\u5B9E\u4F8B\u51FD\u6570\uFF0C\u53C2\u6570\u4E3A\u914D\u7F6E\u5BF9\u8C61</span>
<span class="token keyword">function</span> <span class="token function">createInstance</span><span class="token punctuation">(</span><span class="token parameter">defaultConfig</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5B9E\u9645\u4E0A\u8FD9\u4E2A\u4E0A\u4E0B\u6587\u6765\u81EA\u4E8EAxios\u51FD\u6570\uFF0C\u4F20\u9012\u7684\u53C2\u6570\u4E5F\u662F\u914D\u7F6E\u961F\u5F62\uFF0C\u4E0B\u5C0F\u8282\u8BB2\u89E3</span>
  <span class="token keyword">const</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Axios</span><span class="token punctuation">(</span>defaultConfig<span class="token punctuation">)</span>

  <span class="token comment">// \u8FD9\u91CC\u4F7F\u7528\u4E00\u4E2Abind\u5DE5\u5177\u51FD\u6570\uFF0C\u7C7B\u4F3C\u4E8E\u51FD\u6570\u7684bind\u65B9\u6CD5\uFF0C\u8FD9\u884C\u4EE3\u7801\u4E4B\u540E\uFF0C\u51FD\u6570\u5C31\u6709\u4E86 request \u65B9\u6CD5</span>
  <span class="token keyword">const</span> instance <span class="token operator">=</span> <span class="token function">bind</span><span class="token punctuation">(</span><span class="token class-name">Axios</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>request<span class="token punctuation">,</span> context<span class="token punctuation">)</span>

  <span class="token comment">// \u6269\u5C55 Axios.prototype \u4E0A\u7684\u65B9\u6CD5\u5230 \u5B9E\u4F8Binstance \u8EAB\u4E0A</span>
  <span class="token comment">// \u8FD9\u91CC\u6269\u5C55\u4E86\u8BF8\u5982\uFF1Adelete\u3001get\u3001head\u3001options\u3001post\u3001put\u3001patch\u3001getUri \u7B49\u65B9\u6CD5</span>
  utils<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>instance<span class="token punctuation">,</span> <span class="token class-name">Axios</span><span class="token punctuation">.</span>prototype<span class="token punctuation">,</span> context<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">allOwnKeys</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token comment">// \u6269\u5C55 Context \u4E0A\u9762\u7684 \u65B9\u6CD5\u5230\u5B9E\u4F8B instance \u8EAB\u4E0A</span>
  <span class="token comment">// \u8FD9\u91CC\u6269\u5C55\u4E86\u8BF8\u5982\uFF1Adefaluts \u5C5E\u6027\u3001interceptors \u5C5E\u6027</span>
  utils<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>instance<span class="token punctuation">,</span> context<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">allOwnKeys</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token comment">// \u521B\u5EFA\u5B9E\u4F8B\u7684\u5DE5\u5382\u51FD\u6570</span>
  instance<span class="token punctuation">.</span><span class="token function-variable function">create</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token parameter">instanceConfig</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">createInstance</span><span class="token punctuation">(</span><span class="token function">mergeConfig</span><span class="token punctuation">(</span>defaultConfig<span class="token punctuation">,</span> instanceConfig<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u8FD4\u56DE\u5B9E\u4F8B</span>
  <span class="token keyword">return</span> instance
<span class="token punctuation">}</span>
<span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u9ED8\u8BA4\u5230\u5904\u7684\u5B9E\u4F8B</span>
<span class="token keyword">var</span> axios <span class="token operator">=</span> <span class="token function">createInstance</span><span class="token punctuation">(</span>defaults<span class="token punctuation">)</span>
<span class="token comment">// \u66B4\u9732\u4E00\u4E2A Axios\u5C5E\u6027\u7C7B\u6765\u5141\u8BB8\u7C7B\u7684\u7EE7\u627F</span>
axios<span class="token punctuation">.</span>Axios <span class="token operator">=</span> Axios
<span class="token comment">// \u66B4\u9732\u4E00\u4E9B\u53D6\u6D88\u76F8\u5173\u7684\u51FD\u6570\u5C5E\u6027</span>
axios<span class="token punctuation">.</span>CanceledError <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./cancel/CanceledError&#39;</span><span class="token punctuation">)</span>
axios<span class="token punctuation">.</span>CancelToken <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./cancel/CancelToken&#39;</span><span class="token punctuation">)</span>
axios<span class="token punctuation">.</span>isCancel <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./cancel/isCancel&#39;</span><span class="token punctuation">)</span>
axios<span class="token punctuation">.</span><span class="token constant">VERSION</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./env/data&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>version
axios<span class="token punctuation">.</span>toFormData <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./helpers/toFormData&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// \u66B4\u9732\u4E00\u4E2A AxiosError \u7C7B\u5C5E\u6027</span>
axios<span class="token punctuation">.</span>AxiosError <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../lib/core/AxiosError&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// CanceledError\u7684\u522B\u540D\uFF0C\u4EE5\u5B9E\u73B0\u5411\u540E\u517C\u5BB9\u6027</span>
axios<span class="token punctuation">.</span>Cancel <span class="token operator">=</span> axios<span class="token punctuation">.</span>CanceledError
<span class="token comment">// \u66B4\u9732 all\u3001spread \u65B9\u6CD5</span>
axios<span class="token punctuation">.</span><span class="token function-variable function">all</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">all</span><span class="token punctuation">(</span><span class="token parameter">promises</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>promises<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
axios<span class="token punctuation">.</span>spread <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./helpers/spread&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// \u66B4\u9732 isAxiosError \u5C5E\u6027</span>
axios<span class="token punctuation">.</span>isAxiosError <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./helpers/isAxiosError&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// \u66B4\u9732 formToJSON \u65B9\u6CD5</span>
axios<span class="token punctuation">.</span><span class="token function-variable function">formToJSON</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">thing</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">formDataToJSON</span><span class="token punctuation">(</span>
    utils<span class="token punctuation">.</span><span class="token function">isHTMLForm</span><span class="token punctuation">(</span>thing<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span>thing<span class="token punctuation">)</span> <span class="token operator">:</span> thing
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u5BFC\u51FA axios \u5C5E\u6027</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> axios
<span class="token comment">// \u5141\u8BB8\u5728 TypeScript \u4E2D\u4F7F\u7528\u9ED8\u8BA4\u5BFC\u5165\u8BED\u6CD5</span>
module<span class="token punctuation">.</span>exports<span class="token punctuation">.</span>default <span class="token operator">=</span> axios
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br></div></div></li><li><p><code>./helpers/bind.js</code> \u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">bind</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> thisArg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">wrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>thisArg<span class="token punctuation">,</span> arguments<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li><li><p><code> utils.extend</code> \u3001 <code>utils.forEach</code>\u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u53EF\u4EE5\u770B\u5230\u5FAA\u73AF b(\u53EF\u80FD\u662F\u5BF9\u8C61\u3001\u6570\u7EC4\u7B49)</span>
<span class="token keyword">function</span> <span class="token function">extend</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> thisArg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">forEach</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token function">assignValue</span><span class="token punctuation">(</span><span class="token parameter">val<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C thisArg \u5B58\u5728\u5E76\u4E14 val \u662F\u4E00\u4E2A\u51FD\u6570\uFF0C\u5C31\u4F7F\u7528 bind \u8D4B\u503C</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>thisArg <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> val <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      a<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">bind</span><span class="token punctuation">(</span>val<span class="token punctuation">,</span> thisArg<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      a<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> val
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> a
<span class="token punctuation">}</span>
<span class="token comment">// forEach \u51FD\u6570\uFF0C\u5FAA\u73AF\u4E00\u4E2A\u53D8\u91CF\uFF0C\u5E76\u4F7F\u7528\u76F8\u5E94\u7684\u51FD\u6570\u51FD\u6570</span>
<span class="token keyword">function</span> <span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5982\u679C\u6CA1\u6709\u63D0\u4F9B\u503C\uFF0C\u5C31\u4E0D\u9700\u8981\u518D\u5904\u7406\u4E86\uFF0C\u76F4\u63A5\u8FD4\u56DE\u5373\u53EF</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>obj <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token keyword">typeof</span> obj <span class="token operator">===</span> <span class="token string">&#39;undefined&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5982\u679C\u5B83\u4E0D\u662F\u4E00\u4E2A\u53EF\u8FED\u4EE3\u5BF9\u8C61\uFF0C\u5219\u5F3A\u5236\u4F7F\u7528\u6570\u7EC4</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> obj <span class="token operator">!==</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    obj <span class="token operator">=</span> <span class="token punctuation">[</span>obj<span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5982\u679C\u662F\u4E00\u4E2A\u6570\u7EC4\uFF0C\u6E90\u7801\u53C2\u89C1\u4E0B\u9762\u7684\u51FD\u6570\u5904\u7406</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isArray</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8FD9\u91CC\u4F7F\u7528 for\u5FAA\u73AF\uFF0C\u8FED\u4EE3\u4E00\u4E2A\u6570\u7EC4\u503C</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> l <span class="token operator">=</span> obj<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> l<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> obj<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> obj<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4F7F\u7528 for...in, \u8FED\u4EE3\u5BF9\u8C61\u952E</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> key <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> obj<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u5224\u65AD\u4E00\u4E2A\u503C\u662F\u4E0D\u662F\u4E00\u4E2A\u6570\u7EC4</span>
<span class="token keyword">function</span> <span class="token function">isArray</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div></li><li><p><code>axios.all</code>\u3001<code>axios.spread</code>\uFF08spread: \u5C55\u5F00\u3001\u6253\u5F00\u3001\u4F38\u5F00\uFF09 \u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>axios<span class="token punctuation">.</span><span class="token function-variable function">all</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">all</span><span class="token punctuation">(</span><span class="token parameter">promises</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>promises<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
axios<span class="token punctuation">.</span>spread <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./helpers/spread&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// ./helpers/spread.js</span>
<span class="token comment">// \u7528\u4E8E\u8C03\u7528\u51FD\u6570\u548C\u6269\u5C55\u53C2\u6570\u6570\u7EC4\u7684\u8BED\u6CD5\u7CD6\u3002</span>
<span class="token comment">//  \u5E38\u89C1\u7684\u7528\u6CD5\u662F\`Function.prototype.apply</span>

<span class="token comment">// function f(x, y, z) {}</span>
<span class="token comment">// var args = [1, 2, 3];</span>
<span class="token comment">// f.apply(null, args);</span>

<span class="token comment">//  \u4F7F\u7528 \`spread\` \u6765\u91CD\u5199\u4E0A\u4F8B</span>
<span class="token comment">// spread(function(x, y, z) {})([1, 2, 3]);</span>
module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">spread</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">wrap</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">callback</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> arr<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>\u4F7F\u7528\u793A\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getA</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;http://localhost:3000/comments&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">getB</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;http://localhost:3000/posts&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u4E0D\u4F7F\u7528 spread \u65F6</span>
axios<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">getA</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">getB</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>data<span class="token punctuation">,</span> res<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>data<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// \u4F7F\u7528 spread \u65F6</span>
axios<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">getA</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">getB</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
  axios<span class="token punctuation">.</span><span class="token function">spread</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resA<span class="token punctuation">,</span> resB</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>resA<span class="token punctuation">.</span>data<span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>resB<span class="token punctuation">.</span>data<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><blockquote><p>\u672C\u8D28\u542B\u4E49</p><p>Promise.all \u7684 then \u65B9\u6CD5\u91CC\u9762\u662F\u4E2A\u51FD\u6570\uFF0C\u51FD\u6570\u7684\u53C2\u6570\u662F\u6240\u6709\u8BF7\u6C42\u7684\u54CD\u5E94\u7EC4\u6210\u7684\u6570\u7EC4\uFF1B</p><p>\u800C axios.all \u7684 then \u65B9\u6CD5\u91CC\u9762\u8C03\u7528\u4E86 axios.spread \u65B9\u6CD5\uFF0Caxios.spread \u65B9\u6CD5\u63A5\u6536\u4E00\u4E2A\u51FD\u6570\u4F5C\u4E3A\u53C2\u6570\uFF0C\u8BE5\u53C2\u6570\u51FD\u6570\u7684\u53C2\u6570\u4E5F\u662F\u6240\u6709\u8BF7\u6C42\u7684\u54CD\u5E94\uFF0C\u65E2\u7136\u4E0A\u6587\u8BF4\u4E86 axios.all \u65B9\u6CD5\u4E0E Promise.all \u65B9\u6CD5\u662F\u4E00\u6A21\u4E00\u6837\u7684\uFF0C\u90A3\u4E48\u6211\u4EEC\u53EA\u9700\u60F3\u529E\u6CD5\u518D\u8BA9\u4E24\u4E2A then \u65B9\u6CD5\u76F8\u540C\u5373\u53EF\u3002</p><p>\u4E5F\u5C31\u662F\u8BF4\u6211\u4EEC\u521B\u5EFA\u4E00\u4E2A axios.spread \u65B9\u6CD5\u5E76\u4E14\u8BA9 axios.spread((acct, perms) =&gt; {})\u7684\u8FD4\u56DE\u503C\u4E0E([acct,perms]) =&gt; {}\u7B49\u4EF7\u5373\u53EF\u3002</p></blockquote><p>\u4E00\u6B65\u6B65\u7406\u89E3</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">all</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>
  <span class="token comment">// \u8FD9\u91CC\u7684 all \u51FD\u6570\u53EF\u4EE5\u7406\u89E3\u4E3A \u4E00\u4E2A\u666E\u901A\u51FD\u6570\uFF0C\u7136\u540E\u8C03\u7528\u65F6\u5019\u53C2\u6570\u662F res\uFF08\u5728promise.all\u4E2D\u5C31\u662F\u4E00\u4E2A\u6570\u7EC4\uFF09,\u7C7B\u4F3C\u8FD9\u6837</span>
  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">(</span>resArr<span class="token punctuation">)</span>

<span class="token comment">// \u521D\u6B65\u5B9E\u73B0 spread, \u53EA\u8FD4\u56DE\u4E00\u4E2A\u7A7A\u51FD\u6570\u65F6</span>
module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">spread</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">wrap</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token function">spread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 1,2,3</span>
<span class="token comment">// \u8FDB\u4E00\u6B65\u5B9E\u73B0 spread, \u628A\u6570\u7EC4\u53C2\u6570\u4F7F\u7528\u53D8\u4E3A\u666E\u901A\u5B57\u7B26\u4E32\u5E76\u8C03\u7528, \u5E76\u8FD4\u56DE\u8C03\u7528\u540E\u7684\u8BA1\u7B97\u503C</span>
module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">spread</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">wrap</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">callback</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> arr<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div></li></ol><h2 id="_2\u3001axios-\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#_2\u3001axios-\u51FD\u6570" aria-hidden="true">#</a> 2\u3001Axios \u51FD\u6570</h2><h3 id="\u5185\u90E8\u7ED3\u6784\u8BE6\u89E3" tabindex="-1"><a class="header-anchor" href="#\u5185\u90E8\u7ED3\u6784\u8BE6\u89E3" aria-hidden="true">#</a> \u5185\u90E8\u7ED3\u6784\u8BE6\u89E3</h3>`,8),k=t(`<li><p>\u5185\u5BB9\u6E90\u7801\u7ED3\u6784</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Axios \u6784\u9020\u51FD\u6570\uFF0C\u6709 defaluts \u5C5E\u6027 \u548C \u62E6\u622A\u5668 interceptors</span>
<span class="token keyword">function</span> <span class="token function">Axios</span><span class="token punctuation">(</span><span class="token parameter">instanceConfig</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>defaults <span class="token operator">=</span> instanceConfig
  <span class="token keyword">this</span><span class="token punctuation">.</span>interceptors <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">request</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">InterceptorManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">response</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">InterceptorManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token class-name">Axioe</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">request</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// .... \u8BF7\u6C42 \u5904\u7406\u94FE</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u83B7\u53D6\u5B8C\u6574\u7684\u8BF7\u6C42\u5730\u5740(\u52A0\u53C2\u6570\u7684)</span>
<span class="token class-name">Axios</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">getUri</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">getUri</span><span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token comment">// \u904D\u5386 delete\u3001get\u3001head\u3001options\uFF0C\u5E76\u8D4B\u4E8E Axios \u539F\u578B\u4E0A</span>
utils<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>
  <span class="token punctuation">[</span><span class="token string">&#39;delete&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;head&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;options&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token keyword">function</span> <span class="token function">forEachMethodNoData</span><span class="token punctuation">(</span><span class="token parameter">method</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Axios</span><span class="token punctuation">.</span>prototype<span class="token punctuation">[</span>method<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> config</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span>
        <span class="token function">mergeConfig</span><span class="token punctuation">(</span>config <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">method</span><span class="token operator">:</span> method<span class="token punctuation">,</span>
          <span class="token literal-property property">url</span><span class="token operator">:</span> url<span class="token punctuation">,</span>
          <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">(</span>config <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>data<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span>
<span class="token comment">// \u904D\u5386 post\u3001put\u3001patch ,\u5E76\u8D4B\u503C\u4E8E Axios\u539F\u578B\u4E0A</span>
utils<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>
  <span class="token punctuation">[</span><span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;put&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;patch&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token keyword">function</span> <span class="token function">forEachMethodWithData</span><span class="token punctuation">(</span><span class="token parameter">method</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">function</span> <span class="token function">generateHTTPMethod</span><span class="token punctuation">(</span><span class="token parameter">isForm</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">httpMethod</span><span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> data<span class="token punctuation">,</span> config</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span>
          <span class="token function">mergeConfig</span><span class="token punctuation">(</span>config <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">method</span><span class="token operator">:</span> method<span class="token punctuation">,</span>
            <span class="token literal-property property">headers</span><span class="token operator">:</span> isForm
              <span class="token operator">?</span> <span class="token punctuation">{</span>
                  <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;multipart/form-data&#39;</span><span class="token punctuation">,</span>
                <span class="token punctuation">}</span>
              <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token literal-property property">url</span><span class="token operator">:</span> url<span class="token punctuation">,</span>
            <span class="token literal-property property">data</span><span class="token operator">:</span> data<span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">Axios</span><span class="token punctuation">.</span>prototype<span class="token punctuation">[</span>method<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">generateHTTPMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token class-name">Axios</span><span class="token punctuation">.</span>prototype<span class="token punctuation">[</span>method <span class="token operator">+</span> <span class="token string">&#39;Form&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">generateHTTPMethod</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br></div></div></li><li><p>\u89E3\u6790\uFF1A</p><ul><li><p>\u7B2C 1 \u8282\u4E2D axios \u8C03\u7528\u7684\u5176\u5B9E\u5C31\u662F\u8FD9\u91CC\u7684 Axios \u7684\u51FD\u6570\u7279\u6027\uFF0C \u5B83\u62E5\u6709\u5C5E\u6027\uFF1Adefaults\u3001interceptors, \u5DF2\u7ECF\u65B9\u6CD5 get\u3001delete\u3001patch\u3001head\u3001options\u3001post\u3001put\u3001request\u3001getUri \u7B49</p></li><li><p>\u8FD9\u91CC\u8FD8\u6D89\u53CA\u5230\u4E00\u4E9B\u4F7F\u7528\u7684\u5DE5\u5177\u51FD\u6570\uFF1A\u62E6\u622A\u5668 InterceptorManager \u51FD\u6570\u3001mergeConfig \u53C2\u6570\u5408\u5E76\u53C2\u6570\u3001buildFullPath\u3001buildURL\u3001utils.forEach \u5FAA\u73AF\u51FD\u6570\u7B49</p></li><li><p>\u5177\u4F53\u67E5\u770B\u53EF\u4EE5\u770B\u5230\uFF0Cget\u3001post\u3001delete\u3001patch \u7B49\u4E00\u7CFB\u5217\u8BF7\u6C42\u65B9\u6CD5\u8C03\u7528\u7684\u5176\u5B9E\u8FD8\u662F request \u65B9\u6CD5</p></li></ul></li><li><p>\u5728\u5177\u4F53\u770B <code>Axios.prototype.request</code> \u65B9\u6CD5\u4E4B\u524D\uFF0C\u53EF\u4EE5\u7B80\u5355\u5148\u770B\u4E00\u4E0B\u91CD\u6784\u524D\u7684 promise \u94FE \u7ECF\u5178\u4EE3\u7801</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Axios</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">request</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>

	<span class="token comment">// \u521B\u5EFA\u5B58\u50A8\u94FE\u5F0F\u8C03\u7528\u7684\u6570\u7EC4 \u9996\u4F4D\u662F\u6838\u5FC3\u8C03\u7528\u65B9\u6CD5 dispatchRequest\uFF0C\u7B2C\u4E8C\u4F4D\u662F\u7A7A</span>
  <span class="token keyword">var</span> chain <span class="token operator">=</span> <span class="token punctuation">[</span>dispatchRequest<span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token comment">// \u521B\u5EFA promise \u4E3A\u4EC0\u4E48resolve(config\uFF09</span>
  <span class="token comment">// \u56E0\u4E3A \u8BF7\u6C42\u62E6\u622A\u5668\u6700\u5148\u6267\u884C \u6240\u4EE5 \u8BBE\u7F6E\u8BF7\u6C42\u62E6\u622A\u5668\u65F6\u53EF\u4EE5\u62FF\u5230\u6BCF\u6B21\u8BF7\u6C42\u7684\u6240\u6709config\u914D\u7F6E</span>
  <span class="token keyword">var</span> promise <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u628A\u8BBE\u7F6E\u7684\u8BF7\u6C42\u62E6\u622A\u5668\u7684\u6210\u529F\u5904\u7406\u51FD\u6570\u3001\u5931\u8D25\u5904\u7406\u51FD\u6570\u653E\u5230\u6570\u7EC4\u6700\u524D\u9762</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">unshiftRequestInterceptors</span><span class="token punctuation">(</span><span class="token parameter">interceptor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6CE8\u610F\u8FD9\u91CC\u5BF9\u4E8E\u8BF7\u6C42\u62E6\u622A\u5668\u7528\u5230\u7684 unshift \u65B9\u6CD5\uFF0C\u6240\u4EE5\u591A\u4E2A\u8BF7\u6C42\u62E6\u622A\u5668\u7684\u6267\u884C\u987A\u5E8F\u9700\u8981\u6CE8\u610F</span>
    chain<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>interceptor<span class="token punctuation">.</span>fulfilled<span class="token punctuation">,</span> interceptor<span class="token punctuation">.</span>rejected<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u628A\u8BBE\u7F6E\u7684\u54CD\u5E94\u62E6\u622A\u5668\u7684\u6210\u529F\u5904\u7406\u51FD\u6570\u3001\u5931\u8D25\u5904\u7406\u51FD\u6570\u653E\u5230\u6570\u7EC4\u6700\u540E\u9762</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">pushResponseInterceptors</span><span class="token punctuation">(</span><span class="token parameter">interceptor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    chain<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>interceptor<span class="token punctuation">.</span>fulfilled<span class="token punctuation">,</span> interceptor<span class="token punctuation">.</span>rejected<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u5FAA\u73AF \u6BCF\u6B21\u53D6\u4E24\u4E2A\u51FA\u6765\u7EC4\u6210promise\u94FE.then\u6267\u884C</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>chain<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    promise <span class="token operator">=</span> promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>chain<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> chain<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u8FD4\u56DEpromise</span>
  <span class="token keyword">return</span> promise<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div></li>`,3),b=n("p",null,[s("\u5177\u4F53\u5206\u6790\u91CD\u65B0\u5199\u7684 "),n("code",null,"Axios.prototype.request"),s(" \u8FD9\u4E2A\u51FD\u6570")],-1),m=n("p",null,"\u6539\u52A8\u7684\u539F\u56E0\uFF1A\u5982\u679C\u8BF7\u6C42\u62E6\u622A\u5668\u4E2D\u5B58\u5728\u4E00\u4E9B\u957F\u65F6\u95F4\u7684\u4EFB\u52A1\uFF0C\u4F1A\u4F7F\u5F97\u4F7F\u7528 axios \u7684\u7F51\u7EDC\u8BF7\u76F8\u8F83\u4E8E\u4E0D\u4F7F\u7528 axios \u7684\u7F51\u7EDC\u8BF7\u6C42\u4F1A\u5EF6\u540E\uFF0C\u4E3A\u6B64\uFF0C\u901A\u8FC7\u4E3A\u62E6\u622A\u7BA1\u7406\u5668\u589E\u52A0 synchronous \u548C runWhen \u5B57\u6BB5\uFF0C\u6765\u5B9E\u73B0\u540C\u6B65\u6267\u884C\u8BF7\u6C42\u65B9\u6CD5\u3002",-1),d=s("\u5177\u4F53\u67E5\u770B\u8FD9\u4E2A "),f={href:"https://github.com/axios/axios/issues/2609",target:"_blank",rel:"noopener noreferrer"},y=s("PR\uFF1APull Request"),g=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Axios</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">request</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token doc-comment comment">/********start: \u8FD9\u91CC\u8FDB\u884C \u914D\u7F6E \u76F8\u5173\u7684\u5904\u7406****************/</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> configOrUrl <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    config <span class="token operator">=</span> config <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    config<span class="token punctuation">.</span>url <span class="token operator">=</span> configOrUrl
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    config <span class="token operator">=</span> configOrUrl <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u914D\u7F6E\u5408\u5E76\u9ED8\u8BA4\u914D\u7F6E</span>
  config <span class="token operator">=</span> <span class="token function">mergeConfig</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>defaults<span class="token punctuation">,</span> config<span class="token punctuation">)</span>
  <span class="token comment">// \u8F6C\u5316\u8BF7\u6C42\u7684\u65B9\u6CD5 \u8F6C\u5316\u4E3A\u5C0F\u5199</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>method<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    config<span class="token punctuation">.</span>method <span class="token operator">=</span> config<span class="token punctuation">.</span>method<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>method<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    config<span class="token punctuation">.</span>method <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>method<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u90FD\u6CA1\u6709\uFF0C\u9ED8\u8BA4\u662F get \u65B9\u6CD5</span>
    config<span class="token punctuation">.</span>method <span class="token operator">=</span> <span class="token string">&#39;get&#39;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">var</span> transitional <span class="token operator">=</span> config<span class="token punctuation">.</span>transitional
  <span class="token keyword">if</span> <span class="token punctuation">(</span>transitional <span class="token operator">!==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    validator<span class="token punctuation">.</span><span class="token function">assertOptions</span><span class="token punctuation">(</span>
      transitional<span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">silentJSONParsing</span><span class="token operator">:</span> validators<span class="token punctuation">.</span><span class="token function">transitional</span><span class="token punctuation">(</span>validators<span class="token punctuation">.</span>boolean<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token literal-property property">forcedJSONParsing</span><span class="token operator">:</span> validators<span class="token punctuation">.</span><span class="token function">transitional</span><span class="token punctuation">(</span>validators<span class="token punctuation">.</span>boolean<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token literal-property property">clarifyTimeoutError</span><span class="token operator">:</span> validators<span class="token punctuation">.</span><span class="token function">transitional</span><span class="token punctuation">(</span>validators<span class="token punctuation">.</span>boolean<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token boolean">false</span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token doc-comment comment">/*********end***************/</span>

  <span class="token doc-comment comment">/********start: \u8FD9\u91CC\u8FDB\u884C\u8BF7\u6C42\u62E6\u622A\u5668\u3001\u8BF7\u6C42\u3001\u54CD\u5E94\u62E6\u622A\u5668\u7684\u5408\u5E76\u904D\u5386 (\u8D23\u4EFB\u94FE\u6A21\u5F0F) ****************/</span>
  <span class="token comment">// \u8BF7\u6C42\u62E6\u622A\u5668\u50A8\u5B58\u6570\u7EC4</span>
  <span class="token keyword">var</span> requestInterceptorChain <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token comment">// \u9ED8\u8BA4\u6240\u6709\u8BF7\u6C42\u62E6\u622A\u5668\u90FD\u4E3A\u540C\u6B65</span>
  <span class="token keyword">var</span> synchronousRequestInterceptors <span class="token operator">=</span> <span class="token boolean">true</span>
  <span class="token comment">// \u904D\u5386 \u8BF7\u6C42\u62E6\u622A\u5668\uFF0C\u62E6\u622A\u5668\u6BCF\u6B21 use \u5C31\u4F1A\u5F80 \u5BF9\u5E94\u62E6\u622A\u5668\u6570\u7EC4 \u4E2D\u6DFB\u52A0\u4E00\u4E2A\uFF0C\u540E\u7EED\u4F1A\u8BB2\u89E3</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">unshiftRequestInterceptors</span><span class="token punctuation">(</span>
    <span class="token parameter">interceptor</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8FD9\u91CCinterceptor\u662F\u6CE8\u518C\u7684\u6BCF\u4E00\u4E2A\u62E6\u622A\u5668\u5BF9\u8C61 axios \u8BF7\u6C42\u62E6\u622A\u5668\u5411\u5916\u66B4\u9732\u4E86runWhen\u914D\u7F6E\u6765\u9488\u5BF9\u4E00\u4E9B\u9700\u8981\u8FD0\u884C\u65F6\u68C0\u6D4B\u6765\u6267\u884C\u7684\u62E6\u622A\u5668</span>
    <span class="token comment">// \u5982\u679C\u914D\u7F6E\u4E86\u8BE5\u51FD\u6570\uFF0C\u5E76\u4E14\u8FD4\u56DE\u7ED3\u679C\u4E3Atrue\uFF0C\u5219\u8BB0\u5F55\u5230\u62E6\u622A\u5668\u94FE\u4E2D\uFF0C\u53CD\u4E4B\u5219\u76F4\u63A5\u7ED3\u675F\u8BE5\u5C42\u5FAA\u73AF</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>
      <span class="token keyword">typeof</span> interceptor<span class="token punctuation">.</span>runWhen <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">&amp;&amp;</span>
      interceptor<span class="token punctuation">.</span><span class="token function">runWhen</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token boolean">false</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// interceptor.synchronous \u662F\u5BF9\u5916\u63D0\u4F9B\u7684\u914D\u7F6E\uFF0C\u53EF\u6807\u8BC6\u8BE5\u62E6\u622A\u5668\u662F\u5F02\u6B65\u8FD8\u662F\u540C\u6B65 \u9ED8\u8BA4\u4E3Afalse(\u5F02\u6B65)</span>
    <span class="token comment">// \u8FD9\u91CC\u662F\u6765\u540C\u6B65\u6574\u4E2A\u6267\u884C\u94FE\u7684\u6267\u884C\u65B9\u5F0F\u7684\uFF0C\u5982\u679C\u6709\u4E00\u4E2A\u8BF7\u6C42\u62E6\u622A\u5668\u4E3A\u5F02\u6B65 \u90A3\u4E48\u4E0B\u9762\u7684promise\u6267\u884C\u94FE\u5219\u4F1A\u6709\u4E0D\u540C\u7684\u6267\u884C\u65B9\u5F0F</span>
    synchronousRequestInterceptors <span class="token operator">=</span>
      synchronousRequestInterceptors <span class="token operator">&amp;&amp;</span> interceptor<span class="token punctuation">.</span>synchronous
    <span class="token comment">// \u585E\u5230\u8BF7\u6C42\u62E6\u622A\u5668\u6570\u7EC4\u4E2D\uFF0C\u6CE8\u610F\u8FD9\u91CC\u7528\u7684 unshift</span>
    requestInterceptorChain<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>
      interceptor<span class="token punctuation">.</span>fulfilled<span class="token punctuation">,</span>
      interceptor<span class="token punctuation">.</span>rejected
    <span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token comment">// \u54CD\u5E94\u62E6\u622A\u5668\u5B58\u50A8\u6570\u7EC4</span>
  <span class="token keyword">var</span> responseInterceptorChain <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token comment">// \u904D\u5386\u6309\u5E8Fpush\u5230\u62E6\u622A\u5668\u5B58\u50A8\u6570\u7EC4\u4E2D</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">pushResponseInterceptors</span><span class="token punctuation">(</span>
    <span class="token parameter">interceptor</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    responseInterceptorChain<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
      interceptor<span class="token punctuation">.</span>fulfilled<span class="token punctuation">,</span>
      interceptor<span class="token punctuation">.</span>rejected
    <span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">var</span> promise
  <span class="token comment">// \u5982\u679C\u4E3A\u5F02\u6B65 \u5176\u5B9E\u4E5F\u662F\u9ED8\u8BA4\u60C5\u51B5</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>synchronousRequestInterceptors<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5B9A\u4E49\u8BF7\u6C42\u961F\u5217</span>
    <span class="token keyword">var</span> chain <span class="token operator">=</span> <span class="token punctuation">[</span>dispatchRequest<span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">]</span>
    <span class="token comment">// \u6DFB\u52A0\u8BF7\u6C42\u62E6\u622A\u961F\u5217\u3001\u54CD\u5E94\u62E6\u622A\u5668\u961F\u5217</span>
    <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>chain<span class="token punctuation">,</span> requestInterceptorChain<span class="token punctuation">)</span>
    chain <span class="token operator">=</span> chain<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>responseInterceptorChain<span class="token punctuation">)</span>
    promise <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>chain<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5F00\u59CB\u904D\u5386 \u8BF7\u6C42\u961F\u5217</span>
      promise <span class="token operator">=</span> promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>chain<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> chain<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u8FD4\u56DE\u7ED3\u679C</span>
    <span class="token keyword">return</span> promise
  <span class="token punctuation">}</span>
  <span class="token comment">// \u8FD9\u91CC\u5219\u662F\u540C\u6B65\u7684\u903B\u8F91</span>
  <span class="token keyword">var</span> newConfig <span class="token operator">=</span> config
  <span class="token comment">// \u8BF7\u6C42\u62E6\u622A\u5668\u4E00\u4E2A\u4E00\u4E2A\u7684\u8D70 \u8FD4\u56DE \u8BF7\u6C42\u524D\u6700\u65B0\u7684config</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>requestInterceptorChain<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> onFulfilled <span class="token operator">=</span> requestInterceptorChain<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">var</span> onRejected <span class="token operator">=</span> requestInterceptorChain<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u6700\u65B0\u7684config</span>
      newConfig <span class="token operator">=</span> <span class="token function">onFulfilled</span><span class="token punctuation">(</span>newConfig<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u505A\u5F02\u5E38\u6355\u83B7 \u6709\u9519\u76F4\u63A5\u629B\u51FA</span>
      <span class="token function">onRejected</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
      <span class="token keyword">break</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5230\u8FD9\u91CC \u5FAE\u4EFB\u52A1\u4E0D\u4F1A\u8FC7\u65E9\u7684\u521B\u5EFA</span>
  <span class="token comment">// \u4E5F\u5C31\u89E3\u51B3\u4E86 \u5FAE\u4EFB\u52A1\u8FC7\u65E9\u521B\u5EFA\u3001\u5F53\u524D\u5B8F\u4EFB\u52A1\u8FC7\u957F\u6216\u67D0\u4E2A\u8BF7\u6C42\u62E6\u622A\u5668\u4E2D\u6709\u5F02\u6B65\u4EFB\u52A1\u800C\u963B\u585E\u771F\u6B63\u7684\u8BF7\u6C42\u5EF6\u65F6\u53D1\u8D77\u95EE\u9898</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    promise <span class="token operator">=</span> <span class="token function">dispatchRequest</span><span class="token punctuation">(</span>newConfig<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u54CD\u5E94\u62E6\u622A\u5668\u6267\u884C</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>responseInterceptorChain<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    promise <span class="token operator">=</span> promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
      responseInterceptorChain<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      responseInterceptorChain<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> promise
  <span class="token doc-comment comment">/*********end***************/</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br></div></div>`,1),h=t(`<li><p>\u62E6\u622A\u5668\u589E\u52A0\u4E24\u4E2A\u914D\u7F6E\u53C2\u6570\uFF1A<code>synchronous</code>\u3001<code>runWhen</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">InterceptorManager</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">use</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">use</span><span class="token punctuation">(</span>
  <span class="token parameter">fulfilled<span class="token punctuation">,</span>
  rejected<span class="token punctuation">,</span>
  options</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>handlers<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">fulfilled</span><span class="token operator">:</span> fulfilled<span class="token punctuation">,</span>
    <span class="token literal-property property">rejected</span><span class="token operator">:</span> rejected<span class="token punctuation">,</span>
    <span class="token comment">// \u9ED8\u8BA4\u60C5\u51B5\u4E0B\u5B83\u4EEC\u88AB\u5047\u5B9A\u4E3A\u5F02\u6B65\u7684</span>
    <span class="token comment">// \u5982\u679C\u60A8\u7684\u8BF7\u6C42\u62E6\u622A\u5668\u662F\u540C\u6B65\u7684\uFF0C\u53EF\u4EE5\u901A\u8FC7\u8FD9\u4E2A\u53C2\u6570\u9ED8\u8BA4\u914D\u7F6E\uFF0C\u5B83\u5C06\u544A\u8BC9 axios \u540C\u6B65\u8FD0\u884C\u4EE3\u7801\u5E76\u907F\u514D\u8BF7\u6C42\u6267\u884C\u4E2D\u7684\u4EFB\u4F55\u5EF6\u8FDF\u3002</span>
    <span class="token literal-property property">synchronous</span><span class="token operator">:</span> options <span class="token operator">?</span> options<span class="token punctuation">.</span>synchronous <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token comment">// \u5982\u679C\u8981\u57FA\u4E8E\u8FD0\u884C\u65F6\u68C0\u67E5\u6267\u884C\u7279\u5B9A\u62E6\u622A\u5668\uFF0C\u53EF\u4EE5\u901A\u8FC7\u8FD9\u4E2ArunWhen\u8FD9\u4E2A\u53C2\u6570\uFF0C\u7C7B\u578B\u4E3A\u51FD\u6570</span>
    <span class="token literal-property property">runWhen</span><span class="token operator">:</span> options <span class="token operator">?</span> options<span class="token punctuation">.</span>runWhen <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>handlers<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div></li>`,1),w=t(`<h3 id="\u62E6\u622A\u5668\u6CE8\u610F\u70B9" tabindex="-1"><a class="header-anchor" href="#\u62E6\u622A\u5668\u6CE8\u610F\u70B9" aria-hidden="true">#</a> \u62E6\u622A\u5668\u6CE8\u610F\u70B9</h3><ol><li><p>\u53EA\u6709\u5F53\u6240\u6709\u62E6\u622A\u5668\u90FD\u662F\u540C\u6B65\u6267\u884C\u65F6\uFF0C\u62E6\u622A\u5668\u624D\u4F1A\u540C\u6B65\u6267\u884C\uFF0C\u5426\u5219\u90FD\u4F1A\u5F02\u6B65\u6267\u884C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u6CE8\u610F\u4EE5\u4E0B\u4EE3\u7801</span>
<span class="token keyword">let</span> synchronousRequestInterceptors <span class="token operator">=</span> <span class="token boolean">true</span>

<span class="token keyword">this</span><span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">unshiftRequestInterceptors</span><span class="token punctuation">(</span><span class="token parameter">interceptor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>
  <span class="token comment">// \u8FD9\u91CC\u4E00\u65E6\u591A\u4E2A\u8BF7\u6C42\u62E6\u622A\u4E2D\u6709\u4E00\u4E2A \u62E6\u622A\u5668\u5C5E\u6027\u4E3A false \uFF0C\u6700\u7EC8\u7ED3\u679C\u5C31\u662F false</span>
  synchronousRequestInterceptors <span class="token operator">=</span> synchronousRequestInterceptors <span class="token operator">&amp;&amp;</span> interceptor<span class="token punctuation">.</span>synchronous
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// \u8FD9\u91CC\u505A\u5F02\u6B65\u5904\u7406</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>synchronousRequestInterceptors<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token operator">...</span>
  <span class="token keyword">return</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u8FD9\u91CC\u505A\u540C\u6B65\u5904\u7406</span>
<span class="token operator">...</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div></li></ol><h2 id="_3\u3001interceptormanager" tabindex="-1"><a class="header-anchor" href="#_3\u3001interceptormanager" aria-hidden="true">#</a> 3\u3001InterceptorManager</h2><h3 id="\u6E90\u7801\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#\u6E90\u7801\u7ED3\u6784" aria-hidden="true">#</a> \u6E90\u7801\u7ED3\u6784</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">InterceptorManager</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u62E6\u622A\u5668\u961F\u5217</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>handlers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u6DFB\u52A0\u4E00\u4E2A\u62E6\u622A\u5668\uFF0C\u53C2\u6570\uFF1A\u6210\u529F\u56DE\u8C03\u3001\u5931\u8D25\u56DE\u8C03\u3001\u914D\u7F6E\u53C2\u6570</span>
  <span class="token function">use</span><span class="token punctuation">(</span><span class="token parameter">fulfilled<span class="token punctuation">,</span> rejected<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>handlers<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      fulfilled<span class="token punctuation">,</span>
      rejected<span class="token punctuation">,</span>
      <span class="token literal-property property">synchronous</span><span class="token operator">:</span> options <span class="token operator">?</span> options<span class="token punctuation">.</span>synchronous <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
      <span class="token literal-property property">runWhen</span><span class="token operator">:</span> options <span class="token operator">?</span> options<span class="token punctuation">.</span>runWhen <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>handlers<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u4ECE\u961F\u5217\u4E2D\u79FB\u9664\u4E00\u4E2A\u62E6\u622A\u5668</span>
  <span class="token function">eject</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>handlers<span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>handlers<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u6E05\u7A7A\u62E6\u622A\u5668\u961F\u5217</span>
  <span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>handlers<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>handlers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u5FAA\u73AF\u62E6\u622A\u5668\u961F\u5217</span>
  <span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    utils<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>handlers<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token function">forEachHandler</span><span class="token punctuation">(</span><span class="token parameter">h</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// h \u662F \u62E6\u622A\u5668 \u5BF9\u8C61</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>h <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">fn</span><span class="token punctuation">(</span>h<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> InterceptorManager
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div><h2 id="_4\u3001dispatchrequest" tabindex="-1"><a class="header-anchor" href="#_4\u3001dispatchrequest" aria-hidden="true">#</a> 4\u3001dispatchRequest</h2><ol><li>\u6B65\u9AA4\u5206\u6790</li></ol><ul><li>\u5904\u7406\u8BF7\u6C42\u5934 config \u914D\u7F6E</li><li>\u8C03\u7528 <code>adapter</code> \u9002\u914D\u5668\u53D1\u8D77\u771F\u6B63\u7684\u8BF7\u6C42\uFF0C\u9488\u5BF9\u6D4F\u89C8\u5668\u73AF\u5883\u53D1\u8D77 ajax \u8BF7\u6C42\uFF0Cnode \u73AF\u5883\u53D1\u8D77 http \u8BF7\u6C42</li><li>\u6784\u9020\u54CD\u5E94\u6570\u636E\uFF0C \u4F1A\u81EA\u52A8\u8F6C\u6362 JSON \u6570\u636E</li></ul><ol start="2"><li><p>\u6E90\u7801\u5185\u5BB9</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">dispatchRequest</span><span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u63D0\u524D\u53D6\u6D88\u8BF7\u6C42</span>
  <span class="token function">throwIfCancellationRequested</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span>
  <span class="token comment">// \u5408\u5E76 headers \u914D\u7F6E\uFF0C \u8FD9\u91CC\u7684 headers \u53EF\u4EE5\u5728 Axios\u57FA\u672C\u4F7F\u7528 \u7AE0\u8282\u770B\u5230\u5177\u4F53\u7684\u903B\u8F91\uFF0C\u7740\u91CD\u6CE8\u610F\u4F18\u5148\u7EA7</span>
  config<span class="token punctuation">.</span>headers <span class="token operator">=</span> AxiosHeaders<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>headers<span class="token punctuation">)</span>
  <span class="token comment">// \u8F6C\u6362\u6570\u636E\uFF0C\u8FD9\u91CC\u56DE\u8C03\u7528\u914D\u7F6E\u4E2D\u7684 transformRequest\uFF0C\u5904\u7406\u8BF7\u6C42\u4E4B\u524D\u7684\u6570\u636E data</span>
  config<span class="token punctuation">.</span>data <span class="token operator">=</span> <span class="token function">transformData</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>config<span class="token punctuation">,</span> config<span class="token punctuation">.</span>transformRequest<span class="token punctuation">)</span>
  <span class="token comment">// \u9002\u914D\u5668 axios\u662F\u53EF\u4EE5\u652F\u6301node\u7AEF\u4E5F\u652F\u6301\u6D4F\u89C8\u5668\u7AEF\u7684</span>
  <span class="token keyword">const</span> adapter <span class="token operator">=</span> config<span class="token punctuation">.</span>adapter <span class="token operator">||</span> defaults<span class="token punctuation">.</span>adapter
  <span class="token comment">// \u6267\u884C\u8BF7\u6C42</span>
  <span class="token keyword">return</span> <span class="token function">adapter</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
    <span class="token keyword">function</span> <span class="token function">onAdapterResolution</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u53D6\u6D88\u8BF7\u6C42\u60C5\u51B5</span>
      <span class="token function">throwIfCancellationRequested</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span>
      <span class="token comment">// \u8F6C\u6362\u6570\u636E\uFF0C\u5177\u4F53\u5C31\u662F\u8C03\u7528 config \u4E2D\u7684 transformResponse</span>
      response<span class="token punctuation">.</span>data <span class="token operator">=</span> <span class="token function">transformData</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>
        config<span class="token punctuation">,</span>
        config<span class="token punctuation">.</span>transformResponse<span class="token punctuation">,</span>
        response
      <span class="token punctuation">)</span>
      response<span class="token punctuation">.</span>headers <span class="token operator">=</span> AxiosHeaders<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>headers<span class="token punctuation">)</span>
      <span class="token keyword">return</span> response
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">function</span> <span class="token function">onAdapterRejection</span><span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isCancel</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u53D6\u6D88\u8BF7\u6C42\u60C5\u51B5</span>
        <span class="token function">throwIfCancellationRequested</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span>
        <span class="token comment">// \u8F6C\u6362\u6570\u636E</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>reason <span class="token operator">&amp;&amp;</span> reason<span class="token punctuation">.</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          reason<span class="token punctuation">.</span>response<span class="token punctuation">.</span>data <span class="token operator">=</span> <span class="token function">transformData</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>
            config<span class="token punctuation">,</span>
            config<span class="token punctuation">.</span>transformResponse<span class="token punctuation">,</span>
            reason<span class="token punctuation">.</span>response
          <span class="token punctuation">)</span>
          reason<span class="token punctuation">.</span>response<span class="token punctuation">.</span>headers <span class="token operator">=</span> AxiosHeaders<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>
            reason<span class="token punctuation">.</span>response<span class="token punctuation">.</span>headers
          <span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">throwIfCancellationRequested</span><span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>cancelToken<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    config<span class="token punctuation">.</span>cancelToken<span class="token punctuation">.</span><span class="token function">throwIfRequested</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>signal <span class="token operator">&amp;&amp;</span> config<span class="token punctuation">.</span>signal<span class="token punctuation">.</span>aborted<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">CanceledError</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br></div></div></li></ol><h2 id="_5\u3001\u9002\u914D\u5668-adapter" tabindex="-1"><a class="header-anchor" href="#_5\u3001\u9002\u914D\u5668-adapter" aria-hidden="true">#</a> 5\u3001\u9002\u914D\u5668 adapter</h2><blockquote><p>\u7ECF\u5178\u7684\u8BBE\u8BA1\u6A21\u5F0F\uFF1A\u9002\u914D\u5668\u6A21\u5F0F\u5E94\u7528\u3002</p></blockquote><ol><li><p><code>dispatchRequest.js</code> \u6587\u4EF6</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// dispatchRequest.js</span>
module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">dispatchRequest</span><span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>
  <span class="token comment">// \u4F7F\u7528\u914D\u7F6E\u4FE1\u606F\u4E2D\u7684 adapter \u6216\u8005 \u4F7F\u7528\u9ED8\u8BA4\u7684 adapter</span>
  <span class="token keyword">var</span> adapter <span class="token operator">=</span> config<span class="token punctuation">.</span>adapter <span class="token operator">||</span> defaults<span class="token punctuation">.</span>adapter<span class="token punctuation">;</span>
  <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></li><li><p><code>defaults/index.js</code> \u6587\u4EF6</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> adapters <span class="token keyword">from</span> <span class="token string">&#39;../adapters&#39;</span>

<span class="token keyword">function</span> <span class="token function">getDefaultAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> adapter
  <span class="token comment">// \u5224\u65ADXMLHttpRequest\u5BF9\u8C61\u662F\u5426\u5B58\u5728 \u5B58\u5728\u5219\u4EE3\u8868\u4E3A\u6D4F\u89C8\u5668\u73AF\u5883</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> XMLHttpRequest <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    adapter <span class="token operator">=</span> adapters<span class="token punctuation">.</span><span class="token function">getAdapter</span><span class="token punctuation">(</span><span class="token string">&#39;xhr&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>
    <span class="token keyword">typeof</span> process <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span> <span class="token operator">&amp;&amp;</span>
    utils<span class="token punctuation">.</span><span class="token function">kindOf</span><span class="token punctuation">(</span>process<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;process&#39;</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token comment">// node\u73AF\u5883 \u4F7F\u7528\u539F\u751Fhttp\u53D1\u8D77\u8BF7\u6C42</span>
    adapter <span class="token operator">=</span> adapters<span class="token punctuation">.</span><span class="token function">getAdapter</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> adapter
<span class="token punctuation">}</span>

<span class="token keyword">var</span> defaults <span class="token operator">=</span> <span class="token punctuation">{</span>
	<span class="token operator">...</span>
  <span class="token literal-property property">adapter</span><span class="token operator">:</span> <span class="token function">getDefaultAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token operator">...</span>
<span class="token punctuation">}</span>
<span class="token comment">// getDefaultAdapter \u51FD\u6570\u7C7B\u4F3C\u5982\u4E0B\uFF0C\u8FD9\u662F\u4E4B\u524D\u7248\u672C\u7684\u5199\u6CD5</span>
<span class="token keyword">function</span> <span class="token function">getDefaultAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> adapter<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> XMLHttpRequest <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// For browsers use XHR adapter</span>
    adapter <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../adapters/xhr&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> process <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>process<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;[object process]&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// For node use HTTP adapter</span>
    adapter <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../adapters/http&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> adapter<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div></li><li><p><code>adapters/index.js</code> \u6587\u4EF6</p><p><code>xhr.js</code> \u662F\u5BF9\u539F\u751F ajax <code>XMLHttpRequest</code> \u5BF9\u8C61\u7684\u7684\u5C01\u88C5</p><p><code>http.js</code>\u662F\u5BF9 node \u4E2D\u7684 <code>http</code> \u6A21\u5757\u7684\u5C01\u88C5\uFF0C\u4E5F\u4F1A\u5BF9 <code>https</code> \u5236\u4F5C\u76F8\u5E94\u5904\u7406</p><p>\u5177\u4F53\u5C01\u88C5\u7EC6\u8282</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> httpAdapter <span class="token keyword">from</span> <span class="token string">&#39;./http.js&#39;</span>
<span class="token keyword">import</span> xhrAdapter <span class="token keyword">from</span> <span class="token string">&#39;./xhr.js&#39;</span>

<span class="token keyword">const</span> adapters <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">http</span><span class="token operator">:</span> httpAdapter<span class="token punctuation">,</span>
  <span class="token literal-property property">xhr</span><span class="token operator">:</span> xhrAdapter<span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">getAdapter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">nameOrAdapter</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// nameOrAdapter \u662F\u5B57\u7B26\u4E32\u7684\u65F6\u5019</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>utils<span class="token punctuation">.</span><span class="token function">isString</span><span class="token punctuation">(</span>nameOrAdapter<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> adapter <span class="token operator">=</span> adapters<span class="token punctuation">[</span>nameOrAdapter<span class="token punctuation">]</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>nameOrAdapter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// adapter \u4E0D\u5B58\u5728\u65F6\u5019</span>
        <span class="token keyword">throw</span> <span class="token function">Error</span><span class="token punctuation">(</span>
          utils<span class="token punctuation">.</span><span class="token function">hasOwnProp</span><span class="token punctuation">(</span>nameOrAdapter<span class="token punctuation">)</span>
            <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Adapter &#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>nameOrAdapter<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39; is not available in the build</span><span class="token template-punctuation string">\`</span></span>
            <span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Can not resolve adapter &#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>nameOrAdapter<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;</span><span class="token template-punctuation string">\`</span></span>
        <span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> adapter
    <span class="token punctuation">}</span>
    <span class="token comment">// \u81EA\u5B9A\u4E49 adapter \u5FC5\u987B\u662F\u51FD\u6570, \u5426\u5219\u5C31\u62A5\u9519</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>utils<span class="token punctuation">.</span><span class="token function">isFunction</span><span class="token punctuation">(</span>nameOrAdapter<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&#39;adapter is not a function&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> nameOrAdapter
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  adapters<span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div></li><li><p><code>/adapters/xhr.js </code> \u6587\u4EF6</p><p>\u5927\u6982\u5206\u4E3A\u4EE5\u4E0B\u51E0\u4E2A\u6B65\u9AA4</p><ul><li>\u5BF9 requestHeader \u505A\u5904\u7406</li><li>\u521B\u5EFA xhr: new XMLHttpRequest</li><li>\u5BF9 xhr.open \u8BBE\u7F6E\u8BF7\u6C42\u65B9\u5F0F</li><li>\u5982\u679C\u914D\u7F6E\u4E86 download \u6216\u8005 upload, \u9488\u5BF9 progress \u4E8B\u4EF6\uFF0C\u5904\u7406\u4E0B\u8F7D\u6216\u8005\u4E0A\u4F20\u8FDB\u5EA6\u4E8B\u4EF6</li><li>\u63D0\u4F9B\u53D6\u6D88\u8BF7\u6C42\u529F\u80FD\uFF0C\u8C03\u7528\u539F\u751F abort \u65B9\u6CD5</li><li>request.send() \u53D1\u9001\u8BF7\u6C42</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">xhrAdapter</span><span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">dispatchXhrRequest</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> requestData <span class="token operator">=</span> config<span class="token punctuation">.</span>data
    <span class="token comment">// \u5BF9 requestHeader \u505A\u5904\u7406</span>
    <span class="token keyword">const</span> requestHeaders <span class="token operator">=</span> AxiosHeaders<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>headers<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">normalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> responseType <span class="token operator">=</span> config<span class="token punctuation">.</span>responseType
    <span class="token keyword">let</span> onCanceled
    <span class="token keyword">function</span> <span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>cancelToken<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        config<span class="token punctuation">.</span>cancelToken<span class="token punctuation">.</span><span class="token function">unsubscribe</span><span class="token punctuation">(</span>onCanceled<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>signal<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        config<span class="token punctuation">.</span>signal<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;abort&#39;</span><span class="token punctuation">,</span> onCanceled<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>utils<span class="token punctuation">.</span><span class="token function">isFormData</span><span class="token punctuation">(</span>requestData<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> utils<span class="token punctuation">.</span><span class="token function">isStandardBrowserEnv</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      requestHeaders<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token comment">//  \u5220\u6389content-type\uFF0C\u8BA9\u6D4F\u89C8\u5668\u6765\u8BBE\u7F6E</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u521B\u5EFAxhr: new XMLHttpRequest</span>
    <span class="token keyword">let</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>auth<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> username <span class="token operator">=</span> config<span class="token punctuation">.</span>auth<span class="token punctuation">.</span>username <span class="token operator">||</span> <span class="token string">&#39;&#39;</span>
      <span class="token keyword">const</span> password <span class="token operator">=</span> config<span class="token punctuation">.</span>auth<span class="token punctuation">.</span>password <span class="token operator">||</span> <span class="token string">&#39;&#39;</span>
      requestHeaders<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>
        <span class="token string">&#39;Authorization&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;Basic &#39;</span> <span class="token operator">+</span> <span class="token function">btoa</span><span class="token punctuation">(</span>username <span class="token operator">+</span> <span class="token string">&#39; &#39;</span> <span class="token operator">+</span> password<span class="token punctuation">)</span>
      <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> fullPath <span class="token operator">=</span> <span class="token function">buildFullPath</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>baseURL<span class="token punctuation">,</span> config<span class="token punctuation">.</span>url<span class="token punctuation">)</span>
    <span class="token comment">// \u5BF9 xhr.open \u8BBE\u7F6E\u8BF7\u6C42\u65B9\u5F0F</span>
    request<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>
      config<span class="token punctuation">.</span>method<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token function">buildURL</span><span class="token punctuation">(</span>fullPath<span class="token punctuation">,</span> config<span class="token punctuation">.</span>params<span class="token punctuation">,</span> config<span class="token punctuation">.</span>paramsSerializer<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token boolean">true</span>
    <span class="token punctuation">)</span>
    <span class="token comment">// \u8BBE\u7F6E\u6BEB\u79D2\u7EA7\u7684\u8D85\u65F6\u65F6\u95F4\u9650\u5236</span>
    request<span class="token punctuation">.</span>timeout <span class="token operator">=</span> config<span class="token punctuation">.</span>timeout
    <span class="token comment">// \u8BBE\u7F6Eloadend\u7684\u56DE\u8C03</span>
    <span class="token keyword">function</span> <span class="token function">onloadend</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u54CD\u5E94\u5934\u5904\u7406</span>
      <span class="token keyword">const</span> responseHeaders <span class="token operator">=</span> AxiosHeaders<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>
        <span class="token string">&#39;getAllResponseHeaders&#39;</span> <span class="token keyword">in</span> request <span class="token operator">&amp;&amp;</span> request<span class="token punctuation">.</span><span class="token function">getAllResponseHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">)</span>
      <span class="token comment">// \u54CD\u5E94\u5185\u5BB9\u5904\u7406</span>
      <span class="token keyword">const</span> responseData <span class="token operator">=</span>
        <span class="token operator">!</span>responseType <span class="token operator">||</span> responseType <span class="token operator">===</span> <span class="token string">&#39;text&#39;</span> <span class="token operator">||</span> responseType <span class="token operator">===</span> <span class="token string">&#39;json&#39;</span>
          <span class="token operator">?</span> request<span class="token punctuation">.</span>responseText
          <span class="token operator">:</span> request<span class="token punctuation">.</span>response
      <span class="token comment">// \u6784\u9020\u51FAresponse</span>
      <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">data</span><span class="token operator">:</span> responseData<span class="token punctuation">,</span>
        <span class="token literal-property property">status</span><span class="token operator">:</span> request<span class="token punctuation">.</span>status<span class="token punctuation">,</span>
        <span class="token literal-property property">statusText</span><span class="token operator">:</span> request<span class="token punctuation">.</span>statusText<span class="token punctuation">,</span>
        <span class="token literal-property property">headers</span><span class="token operator">:</span> responseHeaders<span class="token punctuation">,</span>
        config<span class="token punctuation">,</span>
        request<span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u8C03\u7528settle\u65B9\u6CD5\u6765\u5904\u7406promise</span>
      <span class="token function">settle</span><span class="token punctuation">(</span>
        <span class="token keyword">function</span> <span class="token function">_resolve</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">resolve</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
          <span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token keyword">function</span> <span class="token function">_reject</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
          <span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        response
      <span class="token punctuation">)</span>
      <span class="token comment">// \u6E05\u7A7Arequest</span>
      request <span class="token operator">=</span> <span class="token keyword">null</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5982\u679Crequest\u4E0A\u6709onloadend\u5C5E\u6027\uFF0C\u5219\u76F4\u63A5\u66FF\u6362</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&#39;onloadend&#39;</span> <span class="token keyword">in</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      request<span class="token punctuation">.</span>onloadend <span class="token operator">=</span> onloadend
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5426\u5219\u5C31\u7528onreadystatechange\u6765\u6A21\u62DFonloadend</span>
      request<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">handleLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>request <span class="token operator">||</span> request<span class="token punctuation">.</span>readyState <span class="token operator">!==</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u8BF7\u6C42\u51FA\u9519\uFF0C\u6211\u4EEC\u6CA1\u6709\u5F97\u5230\u54CD\u5E94\uFF0C\u8FD9\u5C06\u7531 onerror \u5904\u7406\u3002</span>
        <span class="token comment">// \u4F46\u53EA\u6709\u4E00\u4E2A\u4F8B\u5916\uFF1A\u8BF7\u6C42\u4F7F\u7528 file:\u534F\u8BAE\uFF0C\u6B64\u65F6\u5373\u4F7F\u5B83\u662F\u4E00\u4E2A\u6210\u529F\u7684\u8BF7\u6C42,\u5927\u591A\u6570\u6D4F\u89C8\u5668\u4E5F\u5C06\u8FD4\u56DE\u72B6\u6001\u4E3A 0\uFF0C</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>
          request<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span>
          <span class="token operator">!</span><span class="token punctuation">(</span>
            request<span class="token punctuation">.</span>responseURL <span class="token operator">&amp;&amp;</span> request<span class="token punctuation">.</span>responseURL<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;file:&#39;</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span>
          <span class="token punctuation">)</span>
        <span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// readystate \u5904\u7406\u5668\u5728 onerror \u6216 ontimeout\u5904\u7406\u5668\u4E4B\u524D\u8C03\u7528\uFF0C \u56E0\u6B64\u6211\u4EEC\u5E94\u8BE5\u5728next &#39;tick&#39; \u4E0A\u8C03\u7528onloadend</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span>onloadend<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5904\u7406\u6D4F\u89C8\u5668\u5BF9request\u7684\u53D6\u6D88(\u4E0E\u624B\u52A8\u53D6\u6D88\u4E0D\u540C)</span>
    request<span class="token punctuation">.</span><span class="token function-variable function">onabort</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">handleAbort</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span>
      <span class="token punctuation">}</span>
      <span class="token function">reject</span><span class="token punctuation">(</span>
        <span class="token keyword">new</span> <span class="token class-name">AxiosError</span><span class="token punctuation">(</span>
          <span class="token string">&#39;Request aborted&#39;</span><span class="token punctuation">,</span>
          AxiosError<span class="token punctuation">.</span><span class="token constant">ECONNABORTED</span><span class="token punctuation">,</span>
          config<span class="token punctuation">,</span>
          request
        <span class="token punctuation">)</span>
      <span class="token punctuation">)</span>
      <span class="token comment">// \u6E05\u7A7Arequest</span>
      request <span class="token operator">=</span> <span class="token keyword">null</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5904\u7406\u66F4\u4F4E\u7EA7\u522B\u7684\u7F51\u7EDC\u9519\u8BEF</span>
    request<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">handleError</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u771F\u6B63\u7684\u9519\u8BEF\u88AB\u6D4F\u89C8\u5668\u63A9\u76D6\u4E86</span>
      <span class="token comment">// onerror\u5E94\u5F53\u53EA\u53EF\u88AB\u7F51\u7EDC\u9519\u8BEF\u89E6\u53D1</span>
      <span class="token function">reject</span><span class="token punctuation">(</span>
        <span class="token keyword">new</span> <span class="token class-name">AxiosError</span><span class="token punctuation">(</span>
          <span class="token string">&#39;NetWork Error&#39;</span><span class="token punctuation">,</span>
          AxiosError<span class="token punctuation">.</span><span class="token constant">ERR_NETWORK</span><span class="token punctuation">,</span>
          config<span class="token punctuation">,</span>
          request
        <span class="token punctuation">)</span>
      <span class="token punctuation">)</span>
      request <span class="token operator">=</span> <span class="token keyword">null</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5904\u7406\u8D85\u65F6</span>
    request<span class="token punctuation">.</span><span class="token function-variable function">ontimeout</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">handleTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> timeoutMessage <span class="token operator">=</span> config<span class="token punctuation">.</span>timeout
        <span class="token operator">?</span> <span class="token string">&#39;timeout of &#39;</span> <span class="token operator">+</span> config<span class="token punctuation">.</span>timeout <span class="token operator">+</span> <span class="token string">&#39;ms exceeded&#39;</span>
        <span class="token operator">:</span> <span class="token string">&#39;timeout exceeded&#39;</span>

      <span class="token keyword">let</span> transitional <span class="token operator">=</span> config<span class="token punctuation">.</span>transitional <span class="token operator">||</span> transitionalDefaults
      <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>timeoutMessage<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        timeoutMessage <span class="token operator">=</span> config<span class="token punctuation">.</span>timeoutMessage
      <span class="token punctuation">}</span>
      <span class="token function">reject</span><span class="token punctuation">(</span>
        <span class="token keyword">new</span> <span class="token class-name">AxiosError</span><span class="token punctuation">(</span>
          timeoutMessage<span class="token punctuation">,</span>
          transitional<span class="token punctuation">.</span>clarifyTimeoutError
            <span class="token operator">?</span> AxiosError<span class="token punctuation">.</span><span class="token constant">ETIMEDOUT</span>
            <span class="token operator">:</span> AxiosError<span class="token punctuation">.</span><span class="token constant">ECONNABORTED</span><span class="token punctuation">,</span>
          config<span class="token punctuation">,</span>
          request
        <span class="token punctuation">)</span>
      <span class="token punctuation">)</span>
      <span class="token comment">// \u6E05\u7A7Arequest</span>
      request <span class="token operator">=</span> <span class="token keyword">null</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u6DFB\u52A0 xsrf \u5934</span>
    <span class="token comment">// \u53EA\u80FD\u5728\u6D4F\u89C8\u5668\u73AF\u5883\u4E2D\u751F\u6548</span>
    <span class="token comment">// \u5728\u5DE5\u4F5C\u8005\u7EBF\u7A0B\u6216\u8005RN\u4E2D\u4E0D\u751F\u6548</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>utils<span class="token punctuation">.</span><span class="token function">isStandardBrowserEnv</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> xsrfValue <span class="token operator">=</span>
        config<span class="token punctuation">.</span>withCredentials <span class="token operator">||</span>
        <span class="token punctuation">(</span><span class="token function">isURLSameOrigin</span><span class="token punctuation">(</span>fullPath<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
          config<span class="token punctuation">.</span>xsrfCookieName <span class="token operator">&amp;&amp;</span>
          cookies<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>xsrfValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u6DFB\u52A0 xsrf \u5934</span>
        requestHeaders<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>xsrfHeaderName<span class="token punctuation">,</span> xsrfValue<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    requestData <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">&amp;&amp;</span> requestHeaders<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&#39;setRequestHeader&#39;</span> <span class="token keyword">in</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      utils<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>
        requestHeaders<span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token keyword">function</span> <span class="token function">setRequestHeader</span><span class="token punctuation">(</span><span class="token parameter">val<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u628Aheader\u6DFB\u52A0\u7ED9request</span>
          request<span class="token punctuation">.</span><span class="token function">setRequestHeader</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> val<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u6DFB\u52A0withCredentials</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>utils<span class="token punctuation">.</span><span class="token function">isUndefined</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>withCredentials<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      request<span class="token punctuation">.</span>withCredentials <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span>config<span class="token punctuation">.</span>withCredentials
    <span class="token punctuation">}</span>
    <span class="token comment">// \u6DFB\u52A0 responseType</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>responseType <span class="token operator">&amp;&amp;</span> responseType <span class="token operator">!==</span> <span class="token string">&#39;json&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      request<span class="token punctuation">.</span>responseType <span class="token operator">=</span> config<span class="token punctuation">.</span>responseType
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5982\u679C\u914D\u7F6E\u4E86 download \u6216\u8005 upload, \u9488\u5BF9 progress \u4E8B\u4EF6\uFF0C\u5904\u7406\u4E0B\u8F7D\u6216\u8005\u4E0A\u4F20\u8FDB\u5EA6\u4E8B\u4EF6</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> config<span class="token punctuation">.</span>onDownloadProgress <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      request<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>
        <span class="token string">&#39;progress&#39;</span><span class="token punctuation">,</span>
        <span class="token function">progressEventReducer</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>onDownloadProgress<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
      <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u4E0D\u662F\u6240\u6709\u7684\u6D4F\u89C8\u5668\u90FD\u652F\u6301\u4E0A\u4F20\u4E8B\u4EF6</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> config<span class="token punctuation">.</span>onUploadProgress <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">&amp;&amp;</span> request<span class="token punctuation">.</span>upload<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      request<span class="token punctuation">.</span>upload<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>
        <span class="token string">&#39;progress&#39;</span><span class="token punctuation">,</span>
        <span class="token function">progressEventReducer</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>onUploadProgress<span class="token punctuation">)</span>
      <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u63D0\u4F9B\u53D6\u6D88\u8BF7\u6C42\u529F\u80FD\uFF0C\u8C03\u7528\u539F\u751F abort \u65B9\u6CD5</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>cancelToken <span class="token operator">||</span> config<span class="token punctuation">.</span>signal<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function-variable function">onCanceled</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">cancel</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span>
        <span class="token punctuation">}</span>
        <span class="token function">reject</span><span class="token punctuation">(</span>
          <span class="token operator">!</span>cancel <span class="token operator">||</span> cancel<span class="token punctuation">.</span>type
            <span class="token operator">?</span> <span class="token keyword">new</span> <span class="token class-name">CanceledError</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> config<span class="token punctuation">,</span> request<span class="token punctuation">)</span>
            <span class="token operator">:</span> cancel
        <span class="token punctuation">)</span>
        request<span class="token punctuation">.</span><span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        request <span class="token operator">=</span> <span class="token keyword">null</span>
      <span class="token punctuation">}</span>
      config<span class="token punctuation">.</span>cancelToken <span class="token operator">&amp;&amp;</span> config<span class="token punctuation">.</span>cancelToken<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>onCanceled<span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>signal<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        config<span class="token punctuation">.</span>signal<span class="token punctuation">.</span>aborted
          <span class="token operator">?</span> <span class="token function">onCanceled</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
          <span class="token operator">:</span> config<span class="token punctuation">.</span>signal<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;abort&#39;</span><span class="token punctuation">,</span> onCanceled<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>
      <span class="token operator">!</span>requestData <span class="token operator">&amp;&amp;</span>
      requestData <span class="token operator">!==</span> <span class="token boolean">false</span> <span class="token operator">&amp;&amp;</span>
      requestData <span class="token operator">!==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span>
      requestData <span class="token operator">!==</span> <span class="token string">&#39;&#39;</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
      requestData <span class="token operator">=</span> <span class="token keyword">null</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">const</span> protocol <span class="token operator">=</span> <span class="token function">parseProtocol</span><span class="token punctuation">(</span>fullPath<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>protocol <span class="token operator">&amp;&amp;</span> platform<span class="token punctuation">.</span>protocols<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>protocol<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">reject</span><span class="token punctuation">(</span>
        <span class="token keyword">new</span> <span class="token class-name">AxiosError</span><span class="token punctuation">(</span>
          <span class="token string">&#39;unSupported protocol &#39;</span> <span class="token operator">+</span> protocol <span class="token operator">+</span> <span class="token string">&#39;:&#39;</span><span class="token punctuation">,</span>
          AxiosError<span class="token punctuation">.</span><span class="token constant">ERR_BAD_REQUEST</span><span class="token punctuation">,</span>
          config
        <span class="token punctuation">)</span>
      <span class="token punctuation">)</span>
      <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// request.send()  \u53D1\u9001\u8BF7\u6C42</span>
    request<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>requestData<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br><span class="line-number">173</span><br><span class="line-number">174</span><br><span class="line-number">175</span><br><span class="line-number">176</span><br><span class="line-number">177</span><br><span class="line-number">178</span><br><span class="line-number">179</span><br><span class="line-number">180</span><br><span class="line-number">181</span><br><span class="line-number">182</span><br><span class="line-number">183</span><br><span class="line-number">184</span><br><span class="line-number">185</span><br><span class="line-number">186</span><br><span class="line-number">187</span><br><span class="line-number">188</span><br><span class="line-number">189</span><br><span class="line-number">190</span><br><span class="line-number">191</span><br><span class="line-number">192</span><br><span class="line-number">193</span><br><span class="line-number">194</span><br><span class="line-number">195</span><br><span class="line-number">196</span><br><span class="line-number">197</span><br><span class="line-number">198</span><br><span class="line-number">199</span><br><span class="line-number">200</span><br><span class="line-number">201</span><br><span class="line-number">202</span><br><span class="line-number">203</span><br><span class="line-number">204</span><br><span class="line-number">205</span><br><span class="line-number">206</span><br><span class="line-number">207</span><br><span class="line-number">208</span><br><span class="line-number">209</span><br><span class="line-number">210</span><br><span class="line-number">211</span><br><span class="line-number">212</span><br><span class="line-number">213</span><br><span class="line-number">214</span><br><span class="line-number">215</span><br><span class="line-number">216</span><br><span class="line-number">217</span><br><span class="line-number">218</span><br><span class="line-number">219</span><br><span class="line-number">220</span><br><span class="line-number">221</span><br><span class="line-number">222</span><br><span class="line-number">223</span><br><span class="line-number">224</span><br><span class="line-number">225</span><br><span class="line-number">226</span><br><span class="line-number">227</span><br><span class="line-number">228</span><br><span class="line-number">229</span><br><span class="line-number">230</span><br><span class="line-number">231</span><br><span class="line-number">232</span><br><span class="line-number">233</span><br><span class="line-number">234</span><br><span class="line-number">235</span><br><span class="line-number">236</span><br><span class="line-number">237</span><br><span class="line-number">238</span><br><span class="line-number">239</span><br><span class="line-number">240</span><br><span class="line-number">241</span><br><span class="line-number">242</span><br><span class="line-number">243</span><br><span class="line-number">244</span><br><span class="line-number">245</span><br></div></div></li><li><p><code>/adapters/http.js </code> \u6587\u4EF6</p><p>\u5927\u6982\u5206\u4E3A\u4EE5\u4E0B\u51E0\u4E2A\u6B65\u9AA4</p><ul><li>\u8F6C\u6362\u6570\u636E\u683C\u5F0F</li><li>\u5904\u7406\u4EE3\u7406</li><li>\u89E3\u6790 <code>URL</code></li><li>\u521B\u5EFA\u8BF7\u6C42</li><li>\u6DFB\u52A0 <code>error</code>\u3001 <code>end</code>\u3001<code>data</code> \u7B49\u4E8B\u4EF6</li><li>\u53D1\u9001\u8BF7\u6C42</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> platform <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../platform&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// \u6587\u4EF6\u5185\u5BB9\u5982\u4E0B</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">isNode</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">classes</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">URLSearchParams</span><span class="token operator">:</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./classes/URLSearchParams&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">FormData</span><span class="token operator">:</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./classes/FormData&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">Blob</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> Blob <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span> <span class="token operator">&amp;&amp;</span> Blob<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// \u4E3B\u8981\u770B\u8FD9\u91CC\uFF0C\u652F\u6301\u7684\u534F\u8BAE\u524D\u7F00</span>
  <span class="token literal-property property">protocols</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;https&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;file&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;data&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">// http.js \u6587\u4EF6</span>

<span class="token comment">//\u8BBE\u7F6E\u4EE3\u7406\u7528\u7684\u65B9\u6CD5</span>
<span class="token keyword">function</span> <span class="token function">setProxy</span><span class="token punctuation">(</span><span class="token parameter">options<span class="token punctuation">,</span> configProxy<span class="token punctuation">,</span> location</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> proxy <span class="token operator">=</span> configProxy
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>proxy <span class="token operator">&amp;&amp;</span> proxy <span class="token operator">!==</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> proxyUrl <span class="token operator">=</span> <span class="token function">getProxyForUrl</span><span class="token punctuation">(</span>location<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>proxyUrl<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      proxy <span class="token operator">=</span> url<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>proxyUrl<span class="token punctuation">)</span>
      <span class="token comment">// replace &#39;host&#39; since the proxy object is not a URL object</span>
      proxy<span class="token punctuation">.</span>host <span class="token operator">=</span> proxy<span class="token punctuation">.</span>hostname
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>proxy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// basic\u5F62\u5F0F\u7684Proxy-Authorization\u5934</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>proxy<span class="token punctuation">.</span>auth<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// Support proxy auth object form</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>proxy<span class="token punctuation">.</span>auth<span class="token punctuation">.</span>username <span class="token operator">||</span> proxy<span class="token punctuation">.</span>auth<span class="token punctuation">.</span>password<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        proxy<span class="token punctuation">.</span>auth <span class="token operator">=</span>
          <span class="token punctuation">(</span>proxy<span class="token punctuation">.</span>auth<span class="token punctuation">.</span>username <span class="token operator">||</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;:&#39;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>proxy<span class="token punctuation">.</span>auth<span class="token punctuation">.</span>password <span class="token operator">||</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">const</span> base64 <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>proxy<span class="token punctuation">.</span>auth<span class="token punctuation">,</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&#39;base64&#39;</span><span class="token punctuation">)</span>
      options<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&#39;Proxy-Authorization&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;Basic &#39;</span> <span class="token operator">+</span> base64
    <span class="token punctuation">}</span>

    options<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>host <span class="token operator">=</span>
      options<span class="token punctuation">.</span>hostname <span class="token operator">+</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>port <span class="token operator">?</span> <span class="token string">&#39;:&#39;</span> <span class="token operator">+</span> options<span class="token punctuation">.</span>port <span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
    options<span class="token punctuation">.</span>hostname <span class="token operator">=</span> proxy<span class="token punctuation">.</span>host
    options<span class="token punctuation">.</span>host <span class="token operator">=</span> proxy<span class="token punctuation">.</span>host
    options<span class="token punctuation">.</span>port <span class="token operator">=</span> proxy<span class="token punctuation">.</span>port
    options<span class="token punctuation">.</span>path <span class="token operator">=</span> location
    <span class="token keyword">if</span> <span class="token punctuation">(</span>proxy<span class="token punctuation">.</span>protocol<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      options<span class="token punctuation">.</span>protocol <span class="token operator">=</span> proxy<span class="token punctuation">.</span>protocol
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5982\u679C\u4F7F\u7528\u4E86\u4EE3\u7406\uFF0C\u90A3\u4E48\u91CD\u5B9A\u5411\u65F6\u5FC5\u987B\u8981\u7ECF\u8FC7\u4EE3\u7406</span>
  options<span class="token punctuation">.</span>beforeRedirects<span class="token punctuation">.</span><span class="token function-variable function">proxy</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">beforeRedirect</span><span class="token punctuation">(</span><span class="token parameter">redirectOptions</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Configure proxy for redirected request, passing the original config proxy to apply</span>
    <span class="token comment">// the exact same logic as if the redirected request was performed by axios directly.</span>
    <span class="token function">setProxy</span><span class="token punctuation">(</span>redirectOptions<span class="token punctuation">,</span> configProxy<span class="token punctuation">,</span> redirectOptions<span class="token punctuation">.</span>href<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">httpAdapter</span><span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">dispatchHttpRequest</span><span class="token punctuation">(</span>
    <span class="token parameter">resolvePromise<span class="token punctuation">,</span>
    rejectPromise</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u83B7\u53D6\u914D\u7F6E\u5E76\u58F0\u660E\u4E00\u4E9B\u53D8\u91CF</span>
    <span class="token keyword">let</span> onCanceled
    <span class="token keyword">let</span> data <span class="token operator">=</span> config<span class="token punctuation">.</span>data
    <span class="token keyword">const</span> responseType <span class="token operator">=</span> config<span class="token punctuation">.</span>responseType
    <span class="token keyword">const</span> responseEncoding <span class="token operator">=</span> config<span class="token punctuation">.</span>responseEncoding
    <span class="token keyword">const</span> method <span class="token operator">=</span> config<span class="token punctuation">.</span>method<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">let</span> isFinished
    <span class="token keyword">let</span> isDone
    <span class="token keyword">let</span> rejected <span class="token operator">=</span> <span class="token boolean">false</span>
    <span class="token keyword">let</span> req
    <span class="token comment">// \u5728AxiosRequest\u7C7B\u5B9E\u73B0\u4E4B\u524D\u7684\u4E34\u65F6\u5185\u90E8\u53D1\u5C04\u5668</span>
    <span class="token comment">// temporary internal emitter until the AxiosRequest class will be implemented</span>
    <span class="token keyword">const</span> emitter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EventEmitter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">function</span> <span class="token function">onFinished</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>isFinished<span class="token punctuation">)</span> <span class="token keyword">return</span>
      isFinished <span class="token operator">=</span> <span class="token boolean">true</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>cancelToken<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        config<span class="token punctuation">.</span>cancelToken<span class="token punctuation">.</span><span class="token function">unsubscribe</span><span class="token punctuation">(</span>onCanceled<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>signal<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        config<span class="token punctuation">.</span>signal<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;abort&#39;</span><span class="token punctuation">,</span> onCanceled<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>

      emitter<span class="token punctuation">.</span><span class="token function">removeAllListeners</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">function</span> <span class="token function">done</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> isRejected</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>isDone<span class="token punctuation">)</span> <span class="token keyword">return</span>

      isDone <span class="token operator">=</span> <span class="token boolean">true</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>isRejected<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        rejected <span class="token operator">=</span> <span class="token boolean">true</span>
        <span class="token function">onFinished</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>

      isRejected <span class="token operator">?</span> <span class="token function">rejectPromise</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">resolvePromise</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u521B\u5EFA\u6210\u529F\u56DE\u8C03\u51FD\u6570</span>
    <span class="token keyword">const</span> <span class="token function-variable function">resolve</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">done</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u521B\u5EFA\u5931\u8D25\u56DE\u8C03\u51FD\u6570</span>
    <span class="token keyword">const</span> <span class="token function-variable function">reject</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">done</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u521B\u5EFA abort \u51FD\u6570</span>
    <span class="token keyword">function</span> <span class="token function">abort</span><span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u89E6\u53D1 abort \u4E8B\u4EF6</span>
      emitter<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span>
        <span class="token string">&#39;abort&#39;</span><span class="token punctuation">,</span>
        <span class="token operator">!</span>reason <span class="token operator">||</span> reason<span class="token punctuation">.</span>type
          <span class="token operator">?</span> <span class="token keyword">new</span> <span class="token class-name">CanceledError</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> config<span class="token punctuation">,</span> req<span class="token punctuation">)</span>
          <span class="token operator">:</span> reason
      <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u76D1\u542C abort \u4E8B\u4EF6</span>
    emitter<span class="token punctuation">.</span><span class="token function">once</span><span class="token punctuation">(</span><span class="token string">&#39;abort&#39;</span><span class="token punctuation">,</span> reject<span class="token punctuation">)</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>cancelToken <span class="token operator">||</span> config<span class="token punctuation">.</span>signal<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      config<span class="token punctuation">.</span>cancelToken <span class="token operator">&amp;&amp;</span> config<span class="token punctuation">.</span>cancelToken<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>abort<span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>signal<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        config<span class="token punctuation">.</span>signal<span class="token punctuation">.</span>aborted
          <span class="token operator">?</span> <span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
          <span class="token operator">:</span> config<span class="token punctuation">.</span>signal<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;abort&#39;</span><span class="token punctuation">,</span> abort<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u89E3\u6790url</span>
    <span class="token keyword">const</span> fullPath <span class="token operator">=</span> <span class="token function">buildFullPath</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>baseURL<span class="token punctuation">,</span> config<span class="token punctuation">.</span>url<span class="token punctuation">)</span>
    <span class="token keyword">const</span> parsed <span class="token operator">=</span> url<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>fullPath<span class="token punctuation">)</span>
    <span class="token keyword">const</span> protocol <span class="token operator">=</span> parsed<span class="token punctuation">.</span>protocol <span class="token operator">||</span> supportedProtocols<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>protocol <span class="token operator">===</span> <span class="token string">&#39;data:&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u534F\u8BAE\u5F00\u5934\u4E3A data:</span>
      <span class="token keyword">let</span> convertedData
      <span class="token keyword">if</span> <span class="token punctuation">(</span>method <span class="token operator">!==</span> <span class="token string">&#39;GET&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5E76\u4E14\u8BF7\u6C42\u65B9\u5F0F\u4E0D\u662F get\uFF0C\u5219\u62D2\u7EDD\uFF1A\u65B9\u6CD5\u4E0D\u5141\u8BB8</span>
        <span class="token keyword">return</span> <span class="token function">settle</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">,</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">405</span><span class="token punctuation">,</span>
          <span class="token literal-property property">statusText</span><span class="token operator">:</span> <span class="token string">&#39;method not allowed&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
          config<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u89E3\u6790 data \u4E3A Buffer \u6216\u8005 Blob</span>
        convertedData <span class="token operator">=</span> <span class="token function">fromDataURI</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>url<span class="token punctuation">,</span> responseType <span class="token operator">===</span> <span class="token string">&#39;blob&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">Blob</span><span class="token operator">:</span> config<span class="token punctuation">.</span>env <span class="token operator">&amp;&amp;</span> config<span class="token punctuation">.</span>env<span class="token punctuation">.</span>Blob<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> AxiosError<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> AxiosError<span class="token punctuation">.</span><span class="token constant">ERR_BAD_REQUEST</span><span class="token punctuation">,</span> config<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u5982\u679C\u54CD\u5E94\u7C7B\u578B\u4E3A text</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>responseType <span class="token operator">===</span> <span class="token string">&#39;text&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u6839\u636E\u76F8\u5E94\u8F6C\u7801\u89C4\u5219\uFF0C\u8F6C\u6362\u4E3A\u5B57\u7B26\u4E32</span>
        convertedData <span class="token operator">=</span> convertedData<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>responseEncoding<span class="token punctuation">)</span>
        <span class="token comment">//</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>responseEncoding <span class="token operator">||</span> responseEncoding <span class="token operator">===</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          data <span class="token operator">=</span> utils<span class="token punctuation">.</span><span class="token function">stripBOM</span><span class="token punctuation">(</span>convertedData<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>responseType <span class="token operator">===</span> <span class="token string">&#39;stream&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        convertedData <span class="token operator">=</span> stream<span class="token punctuation">.</span>Readable<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>convertedData<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u8FD4\u56DE</span>
      <span class="token keyword">return</span> <span class="token function">settle</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">data</span><span class="token operator">:</span> convertedData<span class="token punctuation">,</span>
        <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
        <span class="token literal-property property">statusText</span><span class="token operator">:</span> <span class="token string">&#39;OK&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        config<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5982\u679C\u662F\u4E0D\u652F\u6301\u7684\u534F\u8BAE\uFF0C\u5C31\u8FD4\u56DE\u5E76\u63D0\u793A\u534F\u8BAE\u4E0D\u652F\u6301</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>supportedProtocols<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>protocol<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">reject</span><span class="token punctuation">(</span>
        <span class="token keyword">new</span> <span class="token class-name">AxiosError</span><span class="token punctuation">(</span>
          <span class="token string">&#39;Unsupported protocol &#39;</span> <span class="token operator">+</span> protocol<span class="token punctuation">,</span>
          AxiosError<span class="token punctuation">.</span><span class="token constant">ERR_BAD_REQUEST</span><span class="token punctuation">,</span>
          config
        <span class="token punctuation">)</span>
      <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">const</span> headers <span class="token operator">=</span> AxiosHeaders<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>headers<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">normalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token comment">// Set User-Agent (required by some servers)</span>
    <span class="token comment">// See https://github.com/axios/axios/issues/69</span>
    <span class="token comment">// User-Agent is specified; handle case where no UA header is desired</span>
    <span class="token comment">// Only set header if it hasn&#39;t been set in config</span>
    headers<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;User-Agent&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;axios/&#39;</span> <span class="token operator">+</span> <span class="token constant">VERSION</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>

    <span class="token keyword">const</span> onDownloadProgress <span class="token operator">=</span> config<span class="token punctuation">.</span>onDownloadProgress
    <span class="token keyword">const</span> onUploadProgress <span class="token operator">=</span> config<span class="token punctuation">.</span>onUploadProgress
    <span class="token keyword">const</span> maxRate <span class="token operator">=</span> config<span class="token punctuation">.</span>maxRate
    <span class="token keyword">let</span> maxUploadRate <span class="token operator">=</span> <span class="token keyword">undefined</span>
    <span class="token keyword">let</span> maxDownloadRate <span class="token operator">=</span> <span class="token keyword">undefined</span>

    <span class="token comment">// support for https://www.npmjs.com/package/form-data api</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>utils<span class="token punctuation">.</span><span class="token function">isFormData</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> utils<span class="token punctuation">.</span><span class="token function">isFunction</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>getHeaders<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      headers<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">getHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>utils<span class="token punctuation">.</span><span class="token function">isStream</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>Buffer<span class="token punctuation">.</span><span class="token function">isBuffer</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Nothing to do...</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>utils<span class="token punctuation">.</span><span class="token function">isArrayBuffer</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        data <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>utils<span class="token punctuation">.</span><span class="token function">isString</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        data <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">reject</span><span class="token punctuation">(</span>
          <span class="token keyword">new</span> <span class="token class-name">AxiosError</span><span class="token punctuation">(</span>
            <span class="token string">&#39;Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream&#39;</span><span class="token punctuation">,</span>
            AxiosError<span class="token punctuation">.</span><span class="token constant">ERR_BAD_REQUEST</span><span class="token punctuation">,</span>
            config
          <span class="token punctuation">)</span>
        <span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u5982\u679Cdata \u5B58\u5728\u7684\u8BDD\uFF0C\u5C31\u6DFB\u52A0 Content-Length header\u5C5E\u6027</span>
      headers<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;Content-Length&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span>length<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
      <span class="token comment">// \u5982\u679C data.length \u8D85\u8FC7 \u914D\u7F6E\u4E2D\u7684 config.maxBodyLength \u5C31\u62A5\u9519\u5E76\u8FD4\u56DE</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>maxBodyLength <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">&amp;&amp;</span> data<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> config<span class="token punctuation">.</span>maxBodyLength<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">reject</span><span class="token punctuation">(</span>
          <span class="token keyword">new</span> <span class="token class-name">AxiosError</span><span class="token punctuation">(</span>
            <span class="token string">&#39;Request body larger than maxBodyLength limit&#39;</span><span class="token punctuation">,</span>
            AxiosError<span class="token punctuation">.</span><span class="token constant">ERR_BAD_REQUEST</span><span class="token punctuation">,</span>
            config
          <span class="token punctuation">)</span>
        <span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">const</span> contentLength <span class="token operator">=</span> <span class="token operator">+</span>headers<span class="token punctuation">.</span><span class="token function">getContentLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>utils<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>maxRate<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      maxUploadRate <span class="token operator">=</span> maxRate<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
      maxDownloadRate <span class="token operator">=</span> maxRate<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      maxUploadRate <span class="token operator">=</span> maxDownloadRate <span class="token operator">=</span> maxRate
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>onUploadProgress <span class="token operator">||</span> maxUploadRate<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>utils<span class="token punctuation">.</span><span class="token function">isStream</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        data <span class="token operator">=</span> stream<span class="token punctuation">.</span>Readable<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">objectMode</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>

      data <span class="token operator">=</span> stream<span class="token punctuation">.</span><span class="token function">pipeline</span><span class="token punctuation">(</span>
        <span class="token punctuation">[</span>
          data<span class="token punctuation">,</span>
          <span class="token keyword">new</span> <span class="token class-name">AxiosTransformStream</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">length</span><span class="token operator">:</span> utils<span class="token punctuation">.</span><span class="token function">toFiniteNumber</span><span class="token punctuation">(</span>contentLength<span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token literal-property property">maxRate</span><span class="token operator">:</span> utils<span class="token punctuation">.</span><span class="token function">toFiniteNumber</span><span class="token punctuation">(</span>maxUploadRate<span class="token punctuation">)</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
        utils<span class="token punctuation">.</span>noop
      <span class="token punctuation">)</span>

      onUploadProgress <span class="token operator">&amp;&amp;</span>
        data<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;progress&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">progress</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">onUploadProgress</span><span class="token punctuation">(</span>
            Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>progress<span class="token punctuation">,</span> <span class="token punctuation">{</span>
              <span class="token literal-property property">upload</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
          <span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// HTTP basic authentication</span>
    <span class="token keyword">let</span> auth <span class="token operator">=</span> <span class="token keyword">undefined</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>auth<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> username <span class="token operator">=</span> config<span class="token punctuation">.</span>auth<span class="token punctuation">.</span>username <span class="token operator">||</span> <span class="token string">&#39;&#39;</span>
      <span class="token keyword">const</span> password <span class="token operator">=</span> config<span class="token punctuation">.</span>auth<span class="token punctuation">.</span>password <span class="token operator">||</span> <span class="token string">&#39;&#39;</span>
      auth <span class="token operator">=</span> username <span class="token operator">+</span> <span class="token string">&#39;:&#39;</span> <span class="token operator">+</span> password
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>auth <span class="token operator">&amp;&amp;</span> parsed<span class="token punctuation">.</span>auth<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> urlAuth <span class="token operator">=</span> parsed<span class="token punctuation">.</span>auth<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;:&#39;</span><span class="token punctuation">)</span>
      <span class="token keyword">const</span> urlUsername <span class="token operator">=</span> urlAuth<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token string">&#39;&#39;</span>
      <span class="token keyword">const</span> urlPassword <span class="token operator">=</span> urlAuth<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token string">&#39;&#39;</span>
      auth <span class="token operator">=</span> urlUsername <span class="token operator">+</span> <span class="token string">&#39;:&#39;</span> <span class="token operator">+</span> urlPassword
    <span class="token punctuation">}</span>

    auth <span class="token operator">&amp;&amp;</span> headers<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">&#39;authorization&#39;</span><span class="token punctuation">)</span>

    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token function">buildURL</span><span class="token punctuation">(</span>parsed<span class="token punctuation">.</span>path<span class="token punctuation">,</span> config<span class="token punctuation">.</span>params<span class="token punctuation">,</span> config<span class="token punctuation">.</span>paramsSerializer<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>
        <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\?</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
        <span class="token string">&#39;&#39;</span>
      <span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> customErr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span>message<span class="token punctuation">)</span>
      customErr<span class="token punctuation">.</span>config <span class="token operator">=</span> config
      customErr<span class="token punctuation">.</span>url <span class="token operator">=</span> config<span class="token punctuation">.</span>url
      customErr<span class="token punctuation">.</span>exists <span class="token operator">=</span> <span class="token boolean">true</span>
      <span class="token keyword">return</span> <span class="token function">reject</span><span class="token punctuation">(</span>customErr<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    headers<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;Accept-Encoding&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;gzip, deflate, gzip, br&#39;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>

    <span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token function">buildURL</span><span class="token punctuation">(</span>
        parsed<span class="token punctuation">.</span>path<span class="token punctuation">,</span>
        config<span class="token punctuation">.</span>params<span class="token punctuation">,</span>
        config<span class="token punctuation">.</span>paramsSerializer
      <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\?</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      method<span class="token punctuation">,</span>
      <span class="token literal-property property">headers</span><span class="token operator">:</span> headers<span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token literal-property property">agents</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">http</span><span class="token operator">:</span> config<span class="token punctuation">.</span>httpAgent<span class="token punctuation">,</span> <span class="token literal-property property">https</span><span class="token operator">:</span> config<span class="token punctuation">.</span>httpsAgent <span class="token punctuation">}</span><span class="token punctuation">,</span>
      auth<span class="token punctuation">,</span>
      protocol<span class="token punctuation">,</span>
      <span class="token literal-property property">beforeRedirect</span><span class="token operator">:</span> dispatchBeforeRedirect<span class="token punctuation">,</span>
      <span class="token literal-property property">beforeRedirects</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>socketPath<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      options<span class="token punctuation">.</span>socketPath <span class="token operator">=</span> config<span class="token punctuation">.</span>socketPath
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      options<span class="token punctuation">.</span>hostname <span class="token operator">=</span> parsed<span class="token punctuation">.</span>hostname
      options<span class="token punctuation">.</span>port <span class="token operator">=</span> parsed<span class="token punctuation">.</span>port
      <span class="token function">setProxy</span><span class="token punctuation">(</span>
        options<span class="token punctuation">,</span>
        config<span class="token punctuation">.</span>proxy<span class="token punctuation">,</span>
        protocol <span class="token operator">+</span>
          <span class="token string">&#39;//&#39;</span> <span class="token operator">+</span>
          parsed<span class="token punctuation">.</span>hostname <span class="token operator">+</span>
          <span class="token punctuation">(</span>parsed<span class="token punctuation">.</span>port <span class="token operator">?</span> <span class="token string">&#39;:&#39;</span> <span class="token operator">+</span> parsed<span class="token punctuation">.</span>port <span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span>
          options<span class="token punctuation">.</span>path
      <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">let</span> transport
    <span class="token keyword">const</span> isHttpsRequest <span class="token operator">=</span> isHttps<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>protocol<span class="token punctuation">)</span>
    <span class="token comment">// \u5224\u65AD\u662F http \u8FD8\u662F https</span>
    options<span class="token punctuation">.</span>agent <span class="token operator">=</span> isHttpsRequest <span class="token operator">?</span> config<span class="token punctuation">.</span>httpsAgent <span class="token operator">:</span> config<span class="token punctuation">.</span>httpAgent
    <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>transport<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      transport <span class="token operator">=</span> config<span class="token punctuation">.</span>transport
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>maxRedirects <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      transport <span class="token operator">=</span> isHttpsRequest <span class="token operator">?</span> https <span class="token operator">:</span> http
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>maxRedirects<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        options<span class="token punctuation">.</span>maxRedirects <span class="token operator">=</span> config<span class="token punctuation">.</span>maxRedirects
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>beforeRedirect<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        options<span class="token punctuation">.</span>beforeRedirects<span class="token punctuation">.</span>config <span class="token operator">=</span> config<span class="token punctuation">.</span>beforeRedirect
      <span class="token punctuation">}</span>
      transport <span class="token operator">=</span> isHttpsRequest <span class="token operator">?</span> httpsFollow <span class="token operator">:</span> httpFollow
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>maxBodyLength <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      options<span class="token punctuation">.</span>maxBodyLength <span class="token operator">=</span> config<span class="token punctuation">.</span>maxBodyLength
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// follow-redirects does not skip comparison, so it should always succeed for axios -1 unlimited</span>
      options<span class="token punctuation">.</span>maxBodyLength <span class="token operator">=</span> <span class="token number">Infinity</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>insecureHTTPParser<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      options<span class="token punctuation">.</span>insecureHTTPParser <span class="token operator">=</span> config<span class="token punctuation">.</span>insecureHTTPParser
    <span class="token punctuation">}</span>

    <span class="token comment">// \u521B\u5EFA request</span>
    req <span class="token operator">=</span> transport<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span>options<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token function">handleResponse</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>req<span class="token punctuation">.</span>destroyed<span class="token punctuation">)</span> <span class="token keyword">return</span>

      <span class="token keyword">const</span> streams <span class="token operator">=</span> <span class="token punctuation">[</span>res<span class="token punctuation">]</span>
      <span class="token comment">// \u5728\u9700\u8981\u7684\u60C5\u51B5\u4E0B\uFF0C\u81EA\u52A8\u89E3\u538B\u54CD\u5E94\u4F53</span>
      <span class="token keyword">let</span> responseStream <span class="token operator">=</span> res
      <span class="token comment">// \u5982\u679C\u91CD\u5B9A\u5411\uFF0C\u5219\u8FD4\u56DE\u6700\u540E\u4E00\u6B21\u8BF7\u6C42\u7684\u4FE1\u606F</span>
      <span class="token keyword">const</span> lastRequest <span class="token operator">=</span> res<span class="token punctuation">.</span>req <span class="token operator">||</span> req

      <span class="token comment">// if decompress disabled we should not decompress</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>decompress <span class="token operator">!==</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// if no content, but headers still say that it is encoded,</span>
        <span class="token comment">// remove the header not confuse downstream operations</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token operator">&amp;&amp;</span> data<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> res<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&#39;content-encoding&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">delete</span> res<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&#39;content-encoding&#39;</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">switch</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&#39;content-encoding&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">/*eslint default-case:0*/</span>
          <span class="token keyword">case</span> <span class="token string">&#39;gzip&#39;</span><span class="token operator">:</span>
          <span class="token keyword">case</span> <span class="token string">&#39;compress&#39;</span><span class="token operator">:</span>
          <span class="token keyword">case</span> <span class="token string">&#39;deflate&#39;</span><span class="token operator">:</span>
            <span class="token comment">// add the unzipper to the body stream processing pipeline</span>
            streams<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>zlib<span class="token punctuation">.</span><span class="token function">createUnzip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

            <span class="token comment">// remove the content-encoding in order to not confuse downstream operations</span>
            <span class="token keyword">delete</span> res<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&#39;content-encoding&#39;</span><span class="token punctuation">]</span>
            <span class="token keyword">break</span>
          <span class="token keyword">case</span> <span class="token string">&#39;br&#39;</span><span class="token operator">:</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>isBrotliSupported<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              streams<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>zlib<span class="token punctuation">.</span><span class="token function">createBrotliDecompress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
              <span class="token keyword">delete</span> res<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&#39;content-encoding&#39;</span><span class="token punctuation">]</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>onDownloadProgress<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> responseLength <span class="token operator">=</span> <span class="token operator">+</span>res<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&#39;content-length&#39;</span><span class="token punctuation">]</span>

        <span class="token keyword">const</span> transformStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AxiosTransformStream</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token literal-property property">length</span><span class="token operator">:</span> utils<span class="token punctuation">.</span><span class="token function">toFiniteNumber</span><span class="token punctuation">(</span>responseLength<span class="token punctuation">)</span><span class="token punctuation">,</span>
          <span class="token literal-property property">maxRate</span><span class="token operator">:</span> utils<span class="token punctuation">.</span><span class="token function">toFiniteNumber</span><span class="token punctuation">(</span>maxDownloadRate<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>

        onDownloadProgress <span class="token operator">&amp;&amp;</span>
          transformStream<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;progress&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">progress</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">onDownloadProgress</span><span class="token punctuation">(</span>
              Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>progress<span class="token punctuation">,</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">download</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
              <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">)</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span>

        streams<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>transformStream<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>

      responseStream <span class="token operator">=</span>
        streams<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">1</span>
          <span class="token operator">?</span> stream<span class="token punctuation">.</span><span class="token function">pipeline</span><span class="token punctuation">(</span>streams<span class="token punctuation">,</span> utils<span class="token punctuation">.</span>noop<span class="token punctuation">)</span>
          <span class="token operator">:</span> streams<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>

      <span class="token keyword">const</span> offListeners <span class="token operator">=</span> stream<span class="token punctuation">.</span><span class="token function">finished</span><span class="token punctuation">(</span>responseStream<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">offListeners</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token function">onFinished</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>

      <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">status</span><span class="token operator">:</span> res<span class="token punctuation">.</span>statusCode<span class="token punctuation">,</span>
        <span class="token literal-property property">statusText</span><span class="token operator">:</span> res<span class="token punctuation">.</span>statusMessage<span class="token punctuation">,</span>
        <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">AxiosHeaders</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>headers<span class="token punctuation">)</span><span class="token punctuation">,</span>
        config<span class="token punctuation">,</span>
        <span class="token literal-property property">request</span><span class="token operator">:</span> lastRequest<span class="token punctuation">,</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>responseType <span class="token operator">===</span> <span class="token string">&#39;stream&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        response<span class="token punctuation">.</span>data <span class="token operator">=</span> responseStream
        <span class="token function">settle</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">,</span> response<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> responseBuffer <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token keyword">let</span> totalResponseBytes <span class="token operator">=</span> <span class="token number">0</span>

        responseStream<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token function">handleStreamData</span><span class="token punctuation">(</span><span class="token parameter">chunk</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          responseBuffer<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>chunk<span class="token punctuation">)</span>
          totalResponseBytes <span class="token operator">+=</span> chunk<span class="token punctuation">.</span>length

          <span class="token comment">// make sure the content length is not over the maxContentLength if specified</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>
            config<span class="token punctuation">.</span>maxContentLength <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">&amp;&amp;</span>
            totalResponseBytes <span class="token operator">&gt;</span> config<span class="token punctuation">.</span>maxContentLength
          <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// stream.destroy() emit aborted event before calling reject() on Node.js v16</span>
            rejected <span class="token operator">=</span> <span class="token boolean">true</span>
            responseStream<span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token function">reject</span><span class="token punctuation">(</span>
              <span class="token keyword">new</span> <span class="token class-name">AxiosError</span><span class="token punctuation">(</span>
                <span class="token string">&#39;maxContentLength size of &#39;</span> <span class="token operator">+</span>
                  config<span class="token punctuation">.</span>maxContentLength <span class="token operator">+</span>
                  <span class="token string">&#39; exceeded&#39;</span><span class="token punctuation">,</span>
                AxiosError<span class="token punctuation">.</span><span class="token constant">ERR_BAD_RESPONSE</span><span class="token punctuation">,</span>
                config<span class="token punctuation">,</span>
                lastRequest
              <span class="token punctuation">)</span>
            <span class="token punctuation">)</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>

        responseStream<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;aborted&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token function">handlerStreamAborted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>rejected<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span>
          <span class="token punctuation">}</span>

          <span class="token keyword">const</span> err <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AxiosError</span><span class="token punctuation">(</span>
            <span class="token string">&#39;maxContentLength size of &#39;</span> <span class="token operator">+</span>
              config<span class="token punctuation">.</span>maxContentLength <span class="token operator">+</span>
              <span class="token string">&#39; exceeded&#39;</span><span class="token punctuation">,</span>
            AxiosError<span class="token punctuation">.</span><span class="token constant">ERR_BAD_RESPONSE</span><span class="token punctuation">,</span>
            config<span class="token punctuation">,</span>
            lastRequest
          <span class="token punctuation">)</span>
          responseStream<span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
          <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>

        responseStream<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token function">handleStreamError</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>req<span class="token punctuation">.</span>destroyed<span class="token punctuation">)</span> <span class="token keyword">return</span>
          <span class="token function">reject</span><span class="token punctuation">(</span>AxiosError<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> config<span class="token punctuation">,</span> lastRequest<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>

        responseStream<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;end&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token function">handleStreamEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> responseData <span class="token operator">=</span>
              responseBuffer<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">1</span>
                <span class="token operator">?</span> responseBuffer<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
                <span class="token operator">:</span> Buffer<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>responseBuffer<span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>responseType <span class="token operator">!==</span> <span class="token string">&#39;arraybuffer&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              responseData <span class="token operator">=</span> responseData<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>responseEncoding<span class="token punctuation">)</span>
              <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>responseEncoding <span class="token operator">||</span> responseEncoding <span class="token operator">===</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                responseData <span class="token operator">=</span> utils<span class="token punctuation">.</span><span class="token function">stripBOM</span><span class="token punctuation">(</span>responseData<span class="token punctuation">)</span>
              <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            response<span class="token punctuation">.</span>data <span class="token operator">=</span> responseData
          <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">reject</span><span class="token punctuation">(</span>
              AxiosError<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> config<span class="token punctuation">,</span> response<span class="token punctuation">.</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span>
            <span class="token punctuation">)</span>
          <span class="token punctuation">}</span>
          <span class="token function">settle</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">,</span> response<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>

      emitter<span class="token punctuation">.</span><span class="token function">once</span><span class="token punctuation">(</span><span class="token string">&#39;abort&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>responseStream<span class="token punctuation">.</span>destroyed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          responseStream<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
          responseStream<span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    emitter<span class="token punctuation">.</span><span class="token function">once</span><span class="token punctuation">(</span><span class="token string">&#39;abort&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
      req<span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token comment">// Handle errors</span>
    req<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token function">handleRequestError</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// @todo remove</span>
      <span class="token comment">// if (req.aborted &amp;&amp; err.code !== AxiosError.ERR_FR_TOO_MANY_REDIRECTS) return;</span>
      <span class="token function">reject</span><span class="token punctuation">(</span>AxiosError<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> config<span class="token punctuation">,</span> req<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token comment">// set tcp keep alive to prevent drop connection by peer</span>
    req<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;socket&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token function">handleRequestSocket</span><span class="token punctuation">(</span><span class="token parameter">socket</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// default interval of sending ack packet is 1 minute</span>
      socket<span class="token punctuation">.</span><span class="token function">setKeepAlive</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token comment">// Handle request timeout</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>timeout<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// This is forcing a int timeout to avoid problems if the \`req\` interface doesn&#39;t handle other types.</span>
      <span class="token keyword">const</span> timeout <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>timeout<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isNaN</span><span class="token punctuation">(</span>timeout<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">reject</span><span class="token punctuation">(</span>
          <span class="token keyword">new</span> <span class="token class-name">AxiosError</span><span class="token punctuation">(</span>
            <span class="token string">&#39;error trying to parse \`config.timeout\` to int&#39;</span><span class="token punctuation">,</span>
            AxiosError<span class="token punctuation">.</span><span class="token constant">ERR_BAD_OPTION_VALUE</span><span class="token punctuation">,</span>
            config<span class="token punctuation">,</span>
            req
          <span class="token punctuation">)</span>
        <span class="token punctuation">)</span>

        <span class="token keyword">return</span>
      <span class="token punctuation">}</span>

      <span class="token comment">// Sometime, the response will be very slow, and does not respond, the connect event will be block by event loop system.</span>
      <span class="token comment">// And timer callback will be fired, and abort() will be invoked before connection, then get &quot;socket hang up&quot; and code ECONNRESET.</span>
      <span class="token comment">// At this time, if we have a large number of request, nodejs will hang up some socket on background. and the number will up and up.</span>
      <span class="token comment">// And then these socket which be hang up will devouring CPU little by little.</span>
      <span class="token comment">// ClientRequest.setTimeout will be fired on the specify milliseconds, and can make sure that abort() will be fired after connect.</span>
      req<span class="token punctuation">.</span><span class="token function">setTimeout</span><span class="token punctuation">(</span>timeout<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token function">handleRequestTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>isDone<span class="token punctuation">)</span> <span class="token keyword">return</span>
        <span class="token keyword">let</span> timeoutErrorMessage <span class="token operator">=</span> config<span class="token punctuation">.</span>timeout
          <span class="token operator">?</span> <span class="token string">&#39;timeout of &#39;</span> <span class="token operator">+</span> config<span class="token punctuation">.</span>timeout <span class="token operator">+</span> <span class="token string">&#39;ms exceeded&#39;</span>
          <span class="token operator">:</span> <span class="token string">&#39;timeout exceeded&#39;</span>
        <span class="token keyword">const</span> transitional <span class="token operator">=</span> config<span class="token punctuation">.</span>transitional <span class="token operator">||</span> transitionalDefaults
        <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>timeoutErrorMessage<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          timeoutErrorMessage <span class="token operator">=</span> config<span class="token punctuation">.</span>timeoutErrorMessage
        <span class="token punctuation">}</span>
        <span class="token function">reject</span><span class="token punctuation">(</span>
          <span class="token keyword">new</span> <span class="token class-name">AxiosError</span><span class="token punctuation">(</span>
            timeoutErrorMessage<span class="token punctuation">,</span>
            transitional<span class="token punctuation">.</span>clarifyTimeoutError
              <span class="token operator">?</span> AxiosError<span class="token punctuation">.</span><span class="token constant">ETIMEDOUT</span>
              <span class="token operator">:</span> AxiosError<span class="token punctuation">.</span><span class="token constant">ECONNABORTED</span><span class="token punctuation">,</span>
            config<span class="token punctuation">,</span>
            req
          <span class="token punctuation">)</span>
        <span class="token punctuation">)</span>
        <span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Send the request</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>utils<span class="token punctuation">.</span><span class="token function">isStream</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> ended <span class="token operator">=</span> <span class="token boolean">false</span>
      <span class="token keyword">let</span> errored <span class="token operator">=</span> <span class="token boolean">false</span>

      data<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;end&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        ended <span class="token operator">=</span> <span class="token boolean">true</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>

      data<span class="token punctuation">.</span><span class="token function">once</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        errored <span class="token operator">=</span> <span class="token boolean">true</span>
        req<span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>

      data<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;close&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ended <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>errored<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">abort</span><span class="token punctuation">(</span>
            <span class="token keyword">new</span> <span class="token class-name">CanceledError</span><span class="token punctuation">(</span><span class="token string">&#39;Request stream has been aborted&#39;</span><span class="token punctuation">,</span> config<span class="token punctuation">,</span> req<span class="token punctuation">)</span>
          <span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>

      data<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      req<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br><span class="line-number">173</span><br><span class="line-number">174</span><br><span class="line-number">175</span><br><span class="line-number">176</span><br><span class="line-number">177</span><br><span class="line-number">178</span><br><span class="line-number">179</span><br><span class="line-number">180</span><br><span class="line-number">181</span><br><span class="line-number">182</span><br><span class="line-number">183</span><br><span class="line-number">184</span><br><span class="line-number">185</span><br><span class="line-number">186</span><br><span class="line-number">187</span><br><span class="line-number">188</span><br><span class="line-number">189</span><br><span class="line-number">190</span><br><span class="line-number">191</span><br><span class="line-number">192</span><br><span class="line-number">193</span><br><span class="line-number">194</span><br><span class="line-number">195</span><br><span class="line-number">196</span><br><span class="line-number">197</span><br><span class="line-number">198</span><br><span class="line-number">199</span><br><span class="line-number">200</span><br><span class="line-number">201</span><br><span class="line-number">202</span><br><span class="line-number">203</span><br><span class="line-number">204</span><br><span class="line-number">205</span><br><span class="line-number">206</span><br><span class="line-number">207</span><br><span class="line-number">208</span><br><span class="line-number">209</span><br><span class="line-number">210</span><br><span class="line-number">211</span><br><span class="line-number">212</span><br><span class="line-number">213</span><br><span class="line-number">214</span><br><span class="line-number">215</span><br><span class="line-number">216</span><br><span class="line-number">217</span><br><span class="line-number">218</span><br><span class="line-number">219</span><br><span class="line-number">220</span><br><span class="line-number">221</span><br><span class="line-number">222</span><br><span class="line-number">223</span><br><span class="line-number">224</span><br><span class="line-number">225</span><br><span class="line-number">226</span><br><span class="line-number">227</span><br><span class="line-number">228</span><br><span class="line-number">229</span><br><span class="line-number">230</span><br><span class="line-number">231</span><br><span class="line-number">232</span><br><span class="line-number">233</span><br><span class="line-number">234</span><br><span class="line-number">235</span><br><span class="line-number">236</span><br><span class="line-number">237</span><br><span class="line-number">238</span><br><span class="line-number">239</span><br><span class="line-number">240</span><br><span class="line-number">241</span><br><span class="line-number">242</span><br><span class="line-number">243</span><br><span class="line-number">244</span><br><span class="line-number">245</span><br><span class="line-number">246</span><br><span class="line-number">247</span><br><span class="line-number">248</span><br><span class="line-number">249</span><br><span class="line-number">250</span><br><span class="line-number">251</span><br><span class="line-number">252</span><br><span class="line-number">253</span><br><span class="line-number">254</span><br><span class="line-number">255</span><br><span class="line-number">256</span><br><span class="line-number">257</span><br><span class="line-number">258</span><br><span class="line-number">259</span><br><span class="line-number">260</span><br><span class="line-number">261</span><br><span class="line-number">262</span><br><span class="line-number">263</span><br><span class="line-number">264</span><br><span class="line-number">265</span><br><span class="line-number">266</span><br><span class="line-number">267</span><br><span class="line-number">268</span><br><span class="line-number">269</span><br><span class="line-number">270</span><br><span class="line-number">271</span><br><span class="line-number">272</span><br><span class="line-number">273</span><br><span class="line-number">274</span><br><span class="line-number">275</span><br><span class="line-number">276</span><br><span class="line-number">277</span><br><span class="line-number">278</span><br><span class="line-number">279</span><br><span class="line-number">280</span><br><span class="line-number">281</span><br><span class="line-number">282</span><br><span class="line-number">283</span><br><span class="line-number">284</span><br><span class="line-number">285</span><br><span class="line-number">286</span><br><span class="line-number">287</span><br><span class="line-number">288</span><br><span class="line-number">289</span><br><span class="line-number">290</span><br><span class="line-number">291</span><br><span class="line-number">292</span><br><span class="line-number">293</span><br><span class="line-number">294</span><br><span class="line-number">295</span><br><span class="line-number">296</span><br><span class="line-number">297</span><br><span class="line-number">298</span><br><span class="line-number">299</span><br><span class="line-number">300</span><br><span class="line-number">301</span><br><span class="line-number">302</span><br><span class="line-number">303</span><br><span class="line-number">304</span><br><span class="line-number">305</span><br><span class="line-number">306</span><br><span class="line-number">307</span><br><span class="line-number">308</span><br><span class="line-number">309</span><br><span class="line-number">310</span><br><span class="line-number">311</span><br><span class="line-number">312</span><br><span class="line-number">313</span><br><span class="line-number">314</span><br><span class="line-number">315</span><br><span class="line-number">316</span><br><span class="line-number">317</span><br><span class="line-number">318</span><br><span class="line-number">319</span><br><span class="line-number">320</span><br><span class="line-number">321</span><br><span class="line-number">322</span><br><span class="line-number">323</span><br><span class="line-number">324</span><br><span class="line-number">325</span><br><span class="line-number">326</span><br><span class="line-number">327</span><br><span class="line-number">328</span><br><span class="line-number">329</span><br><span class="line-number">330</span><br><span class="line-number">331</span><br><span class="line-number">332</span><br><span class="line-number">333</span><br><span class="line-number">334</span><br><span class="line-number">335</span><br><span class="line-number">336</span><br><span class="line-number">337</span><br><span class="line-number">338</span><br><span class="line-number">339</span><br><span class="line-number">340</span><br><span class="line-number">341</span><br><span class="line-number">342</span><br><span class="line-number">343</span><br><span class="line-number">344</span><br><span class="line-number">345</span><br><span class="line-number">346</span><br><span class="line-number">347</span><br><span class="line-number">348</span><br><span class="line-number">349</span><br><span class="line-number">350</span><br><span class="line-number">351</span><br><span class="line-number">352</span><br><span class="line-number">353</span><br><span class="line-number">354</span><br><span class="line-number">355</span><br><span class="line-number">356</span><br><span class="line-number">357</span><br><span class="line-number">358</span><br><span class="line-number">359</span><br><span class="line-number">360</span><br><span class="line-number">361</span><br><span class="line-number">362</span><br><span class="line-number">363</span><br><span class="line-number">364</span><br><span class="line-number">365</span><br><span class="line-number">366</span><br><span class="line-number">367</span><br><span class="line-number">368</span><br><span class="line-number">369</span><br><span class="line-number">370</span><br><span class="line-number">371</span><br><span class="line-number">372</span><br><span class="line-number">373</span><br><span class="line-number">374</span><br><span class="line-number">375</span><br><span class="line-number">376</span><br><span class="line-number">377</span><br><span class="line-number">378</span><br><span class="line-number">379</span><br><span class="line-number">380</span><br><span class="line-number">381</span><br><span class="line-number">382</span><br><span class="line-number">383</span><br><span class="line-number">384</span><br><span class="line-number">385</span><br><span class="line-number">386</span><br><span class="line-number">387</span><br><span class="line-number">388</span><br><span class="line-number">389</span><br><span class="line-number">390</span><br><span class="line-number">391</span><br><span class="line-number">392</span><br><span class="line-number">393</span><br><span class="line-number">394</span><br><span class="line-number">395</span><br><span class="line-number">396</span><br><span class="line-number">397</span><br><span class="line-number">398</span><br><span class="line-number">399</span><br><span class="line-number">400</span><br><span class="line-number">401</span><br><span class="line-number">402</span><br><span class="line-number">403</span><br><span class="line-number">404</span><br><span class="line-number">405</span><br><span class="line-number">406</span><br><span class="line-number">407</span><br><span class="line-number">408</span><br><span class="line-number">409</span><br><span class="line-number">410</span><br><span class="line-number">411</span><br><span class="line-number">412</span><br><span class="line-number">413</span><br><span class="line-number">414</span><br><span class="line-number">415</span><br><span class="line-number">416</span><br><span class="line-number">417</span><br><span class="line-number">418</span><br><span class="line-number">419</span><br><span class="line-number">420</span><br><span class="line-number">421</span><br><span class="line-number">422</span><br><span class="line-number">423</span><br><span class="line-number">424</span><br><span class="line-number">425</span><br><span class="line-number">426</span><br><span class="line-number">427</span><br><span class="line-number">428</span><br><span class="line-number">429</span><br><span class="line-number">430</span><br><span class="line-number">431</span><br><span class="line-number">432</span><br><span class="line-number">433</span><br><span class="line-number">434</span><br><span class="line-number">435</span><br><span class="line-number">436</span><br><span class="line-number">437</span><br><span class="line-number">438</span><br><span class="line-number">439</span><br><span class="line-number">440</span><br><span class="line-number">441</span><br><span class="line-number">442</span><br><span class="line-number">443</span><br><span class="line-number">444</span><br><span class="line-number">445</span><br><span class="line-number">446</span><br><span class="line-number">447</span><br><span class="line-number">448</span><br><span class="line-number">449</span><br><span class="line-number">450</span><br><span class="line-number">451</span><br><span class="line-number">452</span><br><span class="line-number">453</span><br><span class="line-number">454</span><br><span class="line-number">455</span><br><span class="line-number">456</span><br><span class="line-number">457</span><br><span class="line-number">458</span><br><span class="line-number">459</span><br><span class="line-number">460</span><br><span class="line-number">461</span><br><span class="line-number">462</span><br><span class="line-number">463</span><br><span class="line-number">464</span><br><span class="line-number">465</span><br><span class="line-number">466</span><br><span class="line-number">467</span><br><span class="line-number">468</span><br><span class="line-number">469</span><br><span class="line-number">470</span><br><span class="line-number">471</span><br><span class="line-number">472</span><br><span class="line-number">473</span><br><span class="line-number">474</span><br><span class="line-number">475</span><br><span class="line-number">476</span><br><span class="line-number">477</span><br><span class="line-number">478</span><br><span class="line-number">479</span><br><span class="line-number">480</span><br><span class="line-number">481</span><br><span class="line-number">482</span><br><span class="line-number">483</span><br><span class="line-number">484</span><br><span class="line-number">485</span><br><span class="line-number">486</span><br><span class="line-number">487</span><br><span class="line-number">488</span><br><span class="line-number">489</span><br><span class="line-number">490</span><br><span class="line-number">491</span><br><span class="line-number">492</span><br><span class="line-number">493</span><br><span class="line-number">494</span><br><span class="line-number">495</span><br><span class="line-number">496</span><br><span class="line-number">497</span><br><span class="line-number">498</span><br><span class="line-number">499</span><br><span class="line-number">500</span><br><span class="line-number">501</span><br><span class="line-number">502</span><br><span class="line-number">503</span><br><span class="line-number">504</span><br><span class="line-number">505</span><br><span class="line-number">506</span><br><span class="line-number">507</span><br><span class="line-number">508</span><br><span class="line-number">509</span><br><span class="line-number">510</span><br><span class="line-number">511</span><br><span class="line-number">512</span><br><span class="line-number">513</span><br><span class="line-number">514</span><br><span class="line-number">515</span><br><span class="line-number">516</span><br><span class="line-number">517</span><br><span class="line-number">518</span><br><span class="line-number">519</span><br><span class="line-number">520</span><br><span class="line-number">521</span><br><span class="line-number">522</span><br><span class="line-number">523</span><br><span class="line-number">524</span><br><span class="line-number">525</span><br><span class="line-number">526</span><br><span class="line-number">527</span><br><span class="line-number">528</span><br><span class="line-number">529</span><br><span class="line-number">530</span><br><span class="line-number">531</span><br><span class="line-number">532</span><br><span class="line-number">533</span><br><span class="line-number">534</span><br><span class="line-number">535</span><br><span class="line-number">536</span><br><span class="line-number">537</span><br><span class="line-number">538</span><br><span class="line-number">539</span><br><span class="line-number">540</span><br><span class="line-number">541</span><br><span class="line-number">542</span><br><span class="line-number">543</span><br><span class="line-number">544</span><br><span class="line-number">545</span><br><span class="line-number">546</span><br><span class="line-number">547</span><br><span class="line-number">548</span><br><span class="line-number">549</span><br><span class="line-number">550</span><br><span class="line-number">551</span><br><span class="line-number">552</span><br><span class="line-number">553</span><br><span class="line-number">554</span><br><span class="line-number">555</span><br><span class="line-number">556</span><br><span class="line-number">557</span><br><span class="line-number">558</span><br><span class="line-number">559</span><br><span class="line-number">560</span><br><span class="line-number">561</span><br><span class="line-number">562</span><br><span class="line-number">563</span><br><span class="line-number">564</span><br><span class="line-number">565</span><br><span class="line-number">566</span><br><span class="line-number">567</span><br><span class="line-number">568</span><br><span class="line-number">569</span><br><span class="line-number">570</span><br><span class="line-number">571</span><br><span class="line-number">572</span><br><span class="line-number">573</span><br><span class="line-number">574</span><br><span class="line-number">575</span><br><span class="line-number">576</span><br><span class="line-number">577</span><br><span class="line-number">578</span><br><span class="line-number">579</span><br><span class="line-number">580</span><br><span class="line-number">581</span><br><span class="line-number">582</span><br><span class="line-number">583</span><br><span class="line-number">584</span><br><span class="line-number">585</span><br><span class="line-number">586</span><br><span class="line-number">587</span><br><span class="line-number">588</span><br><span class="line-number">589</span><br><span class="line-number">590</span><br><span class="line-number">591</span><br><span class="line-number">592</span><br><span class="line-number">593</span><br><span class="line-number">594</span><br><span class="line-number">595</span><br><span class="line-number">596</span><br><span class="line-number">597</span><br><span class="line-number">598</span><br><span class="line-number">599</span><br><span class="line-number">600</span><br><span class="line-number">601</span><br><span class="line-number">602</span><br><span class="line-number">603</span><br><span class="line-number">604</span><br><span class="line-number">605</span><br><span class="line-number">606</span><br><span class="line-number">607</span><br><span class="line-number">608</span><br><span class="line-number">609</span><br><span class="line-number">610</span><br><span class="line-number">611</span><br><span class="line-number">612</span><br><span class="line-number">613</span><br><span class="line-number">614</span><br></div></div></li></ol><h2 id="_6\u3001\u53D6\u6D88\u8BF7\u6C42" tabindex="-1"><a class="header-anchor" href="#_6\u3001\u53D6\u6D88\u8BF7\u6C42" aria-hidden="true">#</a> 6\u3001\u53D6\u6D88\u8BF7\u6C42</h2><h3 id="\u53D6\u6D88\u8BF7\u6C42\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u53D6\u6D88\u8BF7\u6C42\u793A\u4F8B" aria-hidden="true">#</a> \u53D6\u6D88\u8BF7\u6C42\u793A\u4F8B</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> cancel <span class="token operator">=</span> <span class="token keyword">null</span>
<span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;http://localhost:3000/posts&#39;</span><span class="token punctuation">,</span>
  <span class="token comment">// 1. \u6DFB\u52A0\u914D\u7F6E\u5BF9\u8C61\u7684\u5C5E\u6027</span>
  <span class="token literal-property property">cancelToken</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">axios<span class="token punctuation">.</span>CancelToken</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">c</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 3. \u5C06 C \u7684\u503C\u8D4B\u503C\u7ED9 cancel</span>
    cancel <span class="token operator">=</span> c
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span>
  cancel <span class="token operator">=</span> <span class="token keyword">null</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;button&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u53D6\u6D88\u8BF7\u6C42</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>cancel<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h3 id="\u6E90\u7801\u89E3\u6790" tabindex="-1"><a class="header-anchor" href="#\u6E90\u7801\u89E3\u6790" aria-hidden="true">#</a> \u6E90\u7801\u89E3\u6790</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// CancelToken.js</span>

<span class="token keyword">class</span> <span class="token class-name">CancelToken</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">executor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u53C2\u6570\u5FC5\u987B\u662F\u4E00\u4E2A\u51FD\u6570</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> executor <span class="token operator">!==</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&#39;executor must be a function.&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">let</span> resolvePromise
    <span class="token comment">// \u8BBE\u5B9A\u4E00\u4E2A promise \u5B9E\u4F8B</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">promiseExecutor</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      resolvePromise <span class="token operator">=</span> resolve
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token keyword">const</span> token <span class="token operator">=</span> <span class="token keyword">this</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">cancel</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>token<span class="token punctuation">.</span>_listeners<span class="token punctuation">)</span> <span class="token keyword">return</span>

      <span class="token keyword">let</span> i <span class="token operator">=</span> token<span class="token punctuation">.</span>_listeners<span class="token punctuation">.</span>length

      <span class="token keyword">while</span> <span class="token punctuation">(</span>i<span class="token operator">--</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        token<span class="token punctuation">.</span>_listeners<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">(</span>cancel<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      token<span class="token punctuation">.</span>_listeners <span class="token operator">=</span> <span class="token keyword">null</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token comment">// \u91CD\u5199 then \u51FD\u6570</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>promise<span class="token punctuation">.</span><span class="token function-variable function">then</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">onfulfilled</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> _resolve
      <span class="token comment">// eslint-disable-next-line func-names</span>
      <span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        token<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>resolve<span class="token punctuation">)</span>
        _resolve <span class="token operator">=</span> resolve
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>onfulfilled<span class="token punctuation">)</span>

      promise<span class="token punctuation">.</span><span class="token function-variable function">cancel</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        token<span class="token punctuation">.</span><span class="token function">unsubscribe</span><span class="token punctuation">(</span>_resolve<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">return</span> promise
    <span class="token punctuation">}</span>

    <span class="token function">executor</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">cancel</span><span class="token punctuation">(</span><span class="token parameter">message<span class="token punctuation">,</span> config<span class="token punctuation">,</span> request</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>token<span class="token punctuation">.</span>reason<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u53D6\u6D88\u96C6\u5408\u5DF2\u7ECF\u88AB \u6267\u884C\u4E86</span>
        <span class="token comment">// Cancellation has already been requested</span>
        <span class="token keyword">return</span>
      <span class="token punctuation">}</span>

      token<span class="token punctuation">.</span>reason <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CanceledError</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> config<span class="token punctuation">,</span> request<span class="token punctuation">)</span>
      <span class="token function">resolvePromise</span><span class="token punctuation">(</span>token<span class="token punctuation">.</span>reason<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * Throws a \`CanceledError\` if cancellation has been requested.
   */</span>
  <span class="token function">throwIfRequested</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>reason<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">this</span><span class="token punctuation">.</span>reason
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u8BA2\u9605 \u76D1\u542C\u51FD\u6570</span>
  <span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token parameter">listener</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>reason<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">listener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>reason<span class="token punctuation">)</span>
      <span class="token keyword">return</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_listeners<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>_listeners<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>listener<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>_listeners <span class="token operator">=</span> <span class="token punctuation">[</span>listener<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u53D6\u6D88 \u76D1\u542C\u51FD\u6570</span>
  <span class="token function">unsubscribe</span><span class="token punctuation">(</span><span class="token parameter">listener</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>_listeners<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> index <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_listeners<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>listener<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>_listeners<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * Returns an object that contains a new \`CancelToken\` and a function that, when called,
   * cancels the \`CancelToken\`.
   */</span>
  <span class="token keyword">static</span> <span class="token function">source</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> cancel
    <span class="token keyword">const</span> token <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CancelToken</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">executor</span><span class="token punctuation">(</span><span class="token parameter">c</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      cancel <span class="token operator">=</span> c
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      token<span class="token punctuation">,</span>
      cancel<span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> CancelToken
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br></div></div><p>\u5177\u4F53\u6D41\u7A0B\u53EF\u4EE5\u53C2\u8003\u5982\u4E0B\uFF1A</p><ol><li><p>\u58F0\u660E\u65F6\u5019\u58F0\u660E cancel \u53D8\u91CF\u5E76\u8D4B\u503C</p></li><li><p>\u8BF7\u6C42\u5185\u90E8\u7684 <code>xhr.js</code> \u8FDB\u884C\u8BA2\u9605 <code>subscribe</code> \u4E00\u4E2A\u53D6\u6D88\u51FD\u6570(\u5185\u90E8\u6709 abort \u76F8\u5173\u903B\u8F91)</p></li><li><p><code>subscribe</code> \u65B9\u6CD5\u5B9E\u9645\u4E0A\u662F\u5F80 cancelToken \u5B9E\u4F8B\u4E2D\u521B\u5EFA\u4E00\u4E2A<code> listener</code> \u6570\u7EC4\uFF0C\u5E76 push \u53D6\u6D88\u8BF7\u6C42\u51FD\u6570</p></li><li><p>\u5F53\u8C03\u7528 <code>cancel()</code> \u65F6\u5019\uFF0C \u5B9E\u4F8B\u4E0A\u7684 <code>this.promise</code> \u53D8\u4E3A fullefilled \u72B6\u6001\uFF0C\u6267\u884C <code>.then</code> \u76F8\u5173\u903B\u8F91 \uFF08\u904D\u5386 <code>listener</code> \u6570\u7EC4\uFF0C\u5E76\u4F20\u5165\u53C2\u6570 new Cancel\uFF08meesage\uFF09 \u793A\u4F8B\uFF09</p></li><li><p>\u4E00\u4E00\u6267\u884C \u6B65\u9AA4 3 \u4E2D \u88AB push \u7684 \u53D6\u6D88\u8BF7\u6C42\u903B\u8F91 ( \u6267\u884C request.abort() \u53D6\u6D88\u8BF7\u6C42 )</p></li></ol><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3378643bc45c4d928d1b9eaba7d053c2~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp" alt="img"></p><h2 id="_7\u3001csrf-\u9632\u5FA1" tabindex="-1"><a class="header-anchor" href="#_7\u3001csrf-\u9632\u5FA1" aria-hidden="true">#</a> 7\u3001CSRF \u9632\u5FA1</h2><p>Axios \u652F\u6301\u9632\u5FA1 CSRF(Cross-site request forgery\uFF0C\u8DE8\u7AD9\u8BF7\u6C42\u4F2A\u9020)\u653B\u51FB\uFF0C\u800C\u9632\u5FA1 CSRF \u653B\u51FB\u7684\u6700\u7B80\u5355\u65B9\u5F0F\u5C31\u662F\u52A0 Token\u3002</p><p>CSRF \u7684\u653B\u51FB\u53EF\u4EE5\u7B80\u8FF0\u4E3A\uFF1A\u670D\u52A1\u5668\u9519\u628A\u653B\u51FB\u8005\u7684\u8BF7\u6C42\u5F53\u6210\u4E86\u6B63\u5E38\u7528\u6237\u7684\u8BF7\u6C42\u3002</p><p>\u52A0\u4E00\u4E2A Token \u4E3A\u4EC0\u4E48\u5C31\u80FD\u89E3\u51B3\u5450?\u9996\u5148 Token \u662F\u670D\u52A1\u7AEF\u968F\u7528\u6237\u6BCF\u6B21\u8BF7\u6C42\u52A8\u6001\u751F\u6210\u4E0B\u53D1\u7684\uFF0C\u7528\u6237\u5728\u63D0\u4EA4\u8868\u5355\u3001\u67E5\u8BE2\u6570\u636E\u7B49\u884C\u4E3A\u7684\u65F6\u5019\uFF0C\u9700\u8981\u5728\u7F51\u7EDC\u8BF7\u6C42\u4F53\u52A0\u4E0A\u8FD9\u4E2A\u4E34\u65F6\u6027\u7684 Token \u503C\uFF0C\u653B\u51FB\u8005\u65E0\u6CD5\u5728\u4E09\u65B9\u7F51\u7AD9\u4E2D\u83B7\u53D6\u5F53\u524D Token\uFF0C\u56E0\u6B64\u670D\u52A1\u7AEF\u5C31\u53EF\u4EE5\u901A\u8FC7\u9A8C\u8BC1 Token \u6765\u533A\u5206\u662F\u5426\u662F\u6B63\u5E38\u7528\u6237\u7684\u8BF7\u6C42\u3002</p><p>Axios \u5728\u8BF7\u6C42\u914D\u7F6E\u4E2D\u63D0\u4F9B\u4E86\u4E24\u4E2A\u5B57\u6BB5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// cookie \u4E2D\u643A\u5E26\u7684 Token \u540D\u79F0\uFF0C\u901A\u8FC7\u8BE5\u540D\u79F0\u53EF\u4EE5\u4ECE cookie \u4E2D\u62FF\u5230 Token \u503C</span>
<span class="token literal-property property">xsrfCookieName</span><span class="token operator">:</span> <span class="token string">&#39;XSRF-TOKEN&#39;</span><span class="token punctuation">,</span>
<span class="token comment">// \u8BF7\u6C42 Header \u4E2D\u643A\u5E26\u7684 Token \u540D\u79F0\uFF0C\u901A\u8FC7\u8BE5\u6210\u540D\u53EF\u4ECE Header \u4E2D\u62FF\u5230 Token \u503C</span>
<span class="token literal-property property">xsrfHeaderName</span><span class="token operator">:</span> <span class="token string">&#39;X-XSRF-TOKEN&#39;</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u7528\u4E8E\u9644\u52A0\u9A8C\u8BC1\u9632\u5FA1 CSRF \u653B\u51FB\u7684 Token</p><h2 id="_8\u3001\u4E00\u4E9B\u5DE5\u5177\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#_8\u3001\u4E00\u4E9B\u5DE5\u5177\u51FD\u6570" aria-hidden="true">#</a> 8\u3001\u4E00\u4E9B\u5DE5\u5177\u51FD\u6570</h2><h3 id="mergeconfig-\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#mergeconfig-\u51FD\u6570" aria-hidden="true">#</a> mergeConfig \u51FD\u6570</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">mergeConfig</span><span class="token punctuation">(</span><span class="token parameter">config1<span class="token punctuation">,</span> config2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// eslint-disable-next-line no-param-reassign</span>
  config2 <span class="token operator">=</span> config2 <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

  <span class="token keyword">function</span> <span class="token function">getMergedValue</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> source</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>utils<span class="token punctuation">.</span><span class="token function">isPlainObject</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> utils<span class="token punctuation">.</span><span class="token function">isPlainObject</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> utils<span class="token punctuation">.</span><span class="token function">merge</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> source<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>utils<span class="token punctuation">.</span><span class="token function">isPlainObject</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> utils<span class="token punctuation">.</span><span class="token function">merge</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> source<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>utils<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> source<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> source
  <span class="token punctuation">}</span>

  <span class="token comment">// eslint-disable-next-line consistent-return</span>
  <span class="token keyword">function</span> <span class="token function">mergeDeepProperties</span><span class="token punctuation">(</span><span class="token parameter">prop</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>utils<span class="token punctuation">.</span><span class="token function">isUndefined</span><span class="token punctuation">(</span>config2<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">getMergedValue</span><span class="token punctuation">(</span>config1<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">,</span> config2<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>utils<span class="token punctuation">.</span><span class="token function">isUndefined</span><span class="token punctuation">(</span>config1<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">getMergedValue</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">,</span> config1<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// eslint-disable-next-line consistent-return</span>
  <span class="token keyword">function</span> <span class="token function">valueFromConfig2</span><span class="token punctuation">(</span><span class="token parameter">prop</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>utils<span class="token punctuation">.</span><span class="token function">isUndefined</span><span class="token punctuation">(</span>config2<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">getMergedValue</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">,</span> config2<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// eslint-disable-next-line consistent-return</span>
  <span class="token keyword">function</span> <span class="token function">defaultToConfig2</span><span class="token punctuation">(</span><span class="token parameter">prop</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>utils<span class="token punctuation">.</span><span class="token function">isUndefined</span><span class="token punctuation">(</span>config2<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">getMergedValue</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">,</span> config2<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>utils<span class="token punctuation">.</span><span class="token function">isUndefined</span><span class="token punctuation">(</span>config1<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">getMergedValue</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">,</span> config1<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// eslint-disable-next-line consistent-return</span>
  <span class="token keyword">function</span> <span class="token function">mergeDirectKeys</span><span class="token punctuation">(</span><span class="token parameter">prop</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>prop <span class="token keyword">in</span> config2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">getMergedValue</span><span class="token punctuation">(</span>config1<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">,</span> config2<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>prop <span class="token keyword">in</span> config1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">getMergedValue</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">,</span> config1<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> mergeMap <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> valueFromConfig2<span class="token punctuation">,</span>
    <span class="token literal-property property">method</span><span class="token operator">:</span> valueFromConfig2<span class="token punctuation">,</span>
    <span class="token literal-property property">data</span><span class="token operator">:</span> valueFromConfig2<span class="token punctuation">,</span>
    <span class="token literal-property property">baseURL</span><span class="token operator">:</span> defaultToConfig2<span class="token punctuation">,</span>
    <span class="token literal-property property">transformRequest</span><span class="token operator">:</span> defaultToConfig2<span class="token punctuation">,</span>
    <span class="token literal-property property">transformResponse</span><span class="token operator">:</span> defaultToConfig2<span class="token punctuation">,</span>
    <span class="token literal-property property">paramsSerializer</span><span class="token operator">:</span> defaultToConfig2<span class="token punctuation">,</span>
    <span class="token literal-property property">timeout</span><span class="token operator">:</span> defaultToConfig2<span class="token punctuation">,</span>
    <span class="token literal-property property">timeoutMessage</span><span class="token operator">:</span> defaultToConfig2<span class="token punctuation">,</span>
    <span class="token literal-property property">withCredentials</span><span class="token operator">:</span> defaultToConfig2<span class="token punctuation">,</span>
    <span class="token literal-property property">adapter</span><span class="token operator">:</span> defaultToConfig2<span class="token punctuation">,</span>
    <span class="token literal-property property">responseType</span><span class="token operator">:</span> defaultToConfig2<span class="token punctuation">,</span>
    <span class="token literal-property property">xsrfCookieName</span><span class="token operator">:</span> defaultToConfig2<span class="token punctuation">,</span>
    <span class="token literal-property property">xsrfHeaderName</span><span class="token operator">:</span> defaultToConfig2<span class="token punctuation">,</span>
    <span class="token literal-property property">onUploadProgress</span><span class="token operator">:</span> defaultToConfig2<span class="token punctuation">,</span>
    <span class="token literal-property property">onDownloadProgress</span><span class="token operator">:</span> defaultToConfig2<span class="token punctuation">,</span>
    <span class="token literal-property property">decompress</span><span class="token operator">:</span> defaultToConfig2<span class="token punctuation">,</span>
    <span class="token literal-property property">maxContentLength</span><span class="token operator">:</span> defaultToConfig2<span class="token punctuation">,</span>
    <span class="token literal-property property">maxBodyLength</span><span class="token operator">:</span> defaultToConfig2<span class="token punctuation">,</span>
    <span class="token literal-property property">beforeRedirect</span><span class="token operator">:</span> defaultToConfig2<span class="token punctuation">,</span>
    <span class="token literal-property property">transport</span><span class="token operator">:</span> defaultToConfig2<span class="token punctuation">,</span>
    <span class="token literal-property property">httpAgent</span><span class="token operator">:</span> defaultToConfig2<span class="token punctuation">,</span>
    <span class="token literal-property property">httpsAgent</span><span class="token operator">:</span> defaultToConfig2<span class="token punctuation">,</span>
    <span class="token literal-property property">cancelToken</span><span class="token operator">:</span> defaultToConfig2<span class="token punctuation">,</span>
    <span class="token literal-property property">socketPath</span><span class="token operator">:</span> defaultToConfig2<span class="token punctuation">,</span>
    <span class="token literal-property property">responseEncoding</span><span class="token operator">:</span> defaultToConfig2<span class="token punctuation">,</span>
    <span class="token literal-property property">validateStatus</span><span class="token operator">:</span> mergeDirectKeys<span class="token punctuation">,</span>
  <span class="token punctuation">}</span>

  utils<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>
    Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>config1<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>config2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">function</span> <span class="token function">computeConfigValue</span><span class="token punctuation">(</span><span class="token parameter">prop</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> merge <span class="token operator">=</span> mergeMap<span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">||</span> mergeDeepProperties
      <span class="token keyword">const</span> configValue <span class="token operator">=</span> <span class="token function">merge</span><span class="token punctuation">(</span>prop<span class="token punctuation">)</span>
      <span class="token punctuation">;</span><span class="token punctuation">(</span>utils<span class="token punctuation">.</span><span class="token function">isUndefined</span><span class="token punctuation">(</span>configValue<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> merge <span class="token operator">!==</span> mergeDirectKeys<span class="token punctuation">)</span> <span class="token operator">||</span>
        <span class="token punctuation">(</span>config<span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">=</span> configValue<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">)</span>

  <span class="token keyword">return</span> config
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br></div></div><h2 id="_9\u3001\u4E00\u4E9B\u62D3\u5C55\u70B9" tabindex="-1"><a class="header-anchor" href="#_9\u3001\u4E00\u4E9B\u62D3\u5C55\u70B9" aria-hidden="true">#</a> 9\u3001\u4E00\u4E9B\u62D3\u5C55\u70B9</h2><h3 id="axios-\u4E0E-axios-\u7684\u5173\u7CFB" tabindex="-1"><a class="header-anchor" href="#axios-\u4E0E-axios-\u7684\u5173\u7CFB" aria-hidden="true">#</a> axios \u4E0E Axios \u7684\u5173\u7CFB</h3><ol><li>\u4ECE\u8BED\u6CD5\u4E0A\u6765\u8BF4\uFF0Caxios \u4E0D\u662F Axios \u7684\u5B9E\u4F8B</li><li>\u4ECE\u529F\u80FD\u4E0A\u6765\u8BF4\uFF0Caxios \u662F Axios \u7684\u5B9E\u4F8B</li><li>axios \u662F Axios.prototype.request \u51FD\u6570 bind() \u8FD4\u56DE\u7684\u51FD\u6570</li><li>axios \u4F5C\u4E3A\u5BF9\u8C61\u7531 Axios \u539F\u578B\u5BF9\u8C61\u4E0A\u7684\u6240\u6709\u65B9\u6CD5\uFF08get/post/put \u7B49\uFF09\uFF0C\u6709 Axios \u5BF9\u8C61\u4E0A\u6240\u6709\u5C5E\u6027(defaults, inteceptors)</li></ol><h3 id="instance-\u4E0E-axios-\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#instance-\u4E0E-axios-\u7684\u533A\u522B" aria-hidden="true">#</a> instance \u4E0E axios \u7684\u533A\u522B</h3><ol><li>\u76F8\u540C <ul><li>\u90FD\u662F\u4E00\u4E2A\u80FD\u53D1\u9001\u4EFB\u610F\u8BF7\u6C42\u7684\u51FD\u6570\uFF1Arequest(config)</li><li>\u90FD\u80FD\u53D1\u9001\u7279\u5B9A\u8BF7\u6C42\u7684\u5404\u79CD\u653E\u65B9\u6CD5\uFF1Aget/put/post/delete \u7B49</li><li>\u90FD\u6709\u9ED8\u8BA4\u914D\u7F6E\u548C\u62E6\u622A\u5668\u7684\u5C5E\u6027\uFF1Adefaults \u548C interceptors</li></ul></li><li>\u4E0D\u540C <ul><li>\u9ED8\u8BA4\u5339\u914D\u7684\u503C\u5F88\u53EF\u80FD\u4E0D\u4E00\u6837</li><li>instance \u6CA1\u6709 axios \u540E\u9762\u6DFB\u52A0\u7684\u4E00\u4E9B\u65B9\u6CD5\uFF1A create/CancelToken/all \u7B49\u65B9\u6CD5</li></ul></li></ol><h3 id="axios-\u7684\u8BF7\u6C42-\u54CD\u5E94\u6570\u636E\u8F6C\u6362\u5668\u662F\u4EC0\u4E48" tabindex="-1"><a class="header-anchor" href="#axios-\u7684\u8BF7\u6C42-\u54CD\u5E94\u6570\u636E\u8F6C\u6362\u5668\u662F\u4EC0\u4E48" aria-hidden="true">#</a> axios \u7684\u8BF7\u6C42/\u54CD\u5E94\u6570\u636E\u8F6C\u6362\u5668\u662F\u4EC0\u4E48</h3><ol><li><p>\u8BF7\u6C42\u8F6C\u6362\u5668\uFF1A\u5BF9\u8BF7\u6C42\u5934\u548C\u8BF7\u6C42\u4F53\u6570\u636E\u8FDB\u884C\u7279\u5B9A\u5904\u7406\u7684\u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token literal-property property">transformRequest</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token keyword">function</span> <span class="token function">transformRequest</span><span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> headers</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>
  <span class="token keyword">const</span> hasJSONContentType <span class="token operator">=</span> contentType<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;application/json&#39;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> isObjectPayload <span class="token operator">=</span> utils<span class="token punctuation">.</span><span class="token function">isObject</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token operator">...</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>isObjectPayload <span class="token operator">||</span> hasJSONContentType <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    headers<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">&#39;application/json&#39;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">stringifySafely</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> data<span class="token punctuation">;</span>
  <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div></li><li><p>\u54CD\u5E94\u8F6C\u6362\u5668\uFF1A\u5C06\u54CD\u5E94\u4F53 json \u5B57\u7B26\u4E32\u89E3\u6790\u4E3A js \u5BF9\u8C61\u6216\u8005\u6570\u7EC4 \u7684\u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token literal-property property">transformResponse</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token keyword">function</span> <span class="token function">transformResponse</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token operator">...</span>
     <span class="token keyword">try</span> <span class="token punctuation">{</span>
     		<span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token operator">...</span>
      <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
 	<span class="token keyword">return</span> data<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div></li></ol><h3 id="axios-create-\u7684\u53D8\u5316" tabindex="-1"><a class="header-anchor" href="#axios-create-\u7684\u53D8\u5316" aria-hidden="true">#</a> <code>axios.create</code> \u7684\u53D8\u5316</h3>`,38),x=s("\u9488\u5BF9"),v=n("code",null,"axios.create",-1),q=s(" \u65B9\u6CD5\uFF0C\u6B63\u5F53\u6574\u7406\u5199\u6B64\u7BC7\u89E3\u6790\u6587\u7AE0\u671F\u95F4\uFF0C\u53D1\u73B0\u4E86 \u4E8E"),j=n("em",null,"2021 \u5E74 9 \u6708 5 \u53F7",-1),R=s("\u6709\u4E86\u8FD9\u4E48\u4E00\u6761 PR \u66F4\u65B0\uFF0C\u4E3A\u4EC0\u4E48\u8FD9\u4E48\u505A\u90A3\uFF1A\u662F\u4E3A\u4E86\u5927\u578B\u5E94\u7528\u3001\u6216\u591A\u57DF\u4F7F\u7528\u591A\u5B9E\u4F8B\u60C5\u51B5\u4E0B\uFF0C \u53EF\u4EE5\u9488\u5BF9\u5DF2\u7ECF\u6784\u9020\u7684\u5B9E\u4F8B\u518D\u6B21\u5C01\u88C5\u6784\u9020\uFF0C\u63D0\u4F9B\u6DF1\u5EA6\u6784\u9020\u63A7\u5236\u5668\u80FD\u529B\uFF1A"),A={href:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Faxios%2Faxios%2Fpull%2F2795",target:"_blank",rel:"noopener noreferrer"},C=n("strong",null,"\u8BE6\u60C5\u89C1\u6B64\u6761 PR",-1),E=t(`<p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/45e67be3bd784d82a636307ca7710eb2~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp" alt="img"></p><p>\u5728\u521B\u5EFA axios \u5B9E\u4F8B\u7684\u5DE5\u5382\u65B9\u6CD5\u5185\uFF0C\u7ED1\u5B9A\u5DE5\u5382\u65B9\u6CD5\u5230\u5B9E\u4F8B\u7684 create \u5C5E\u6027\u4E0A\u3002\u4E3A\u4EC0\u4E48\u4E0D\u662F\u5728\u5DE5\u5382\u65B9\u6CD5\u5916\u7ED1\u5B9A\u5450?\u8FD9\u662F\u6211\u4EEC\u53EF\u80FD\u7684\u4E60\u60EF\u505A\u6CD5\uFF0CAxios \u4E4B\u524D\u786E\u5B9E\u4E5F\u662F\u8FD9\u4E48\u505A\u7684\u3002</p><p>\u539F\u56E0\u7B80\u5355\u6765\u8BF4\u5C31\u662F\uFF0C\u7528\u6237\u81EA\u5DF1\u521B\u5EFA\u7684\u5B9E\u4F8B\u4F9D\u7136\u53EF\u4EE5\u8C03\u7528 create \u65B9\u6CD5\u521B\u5EFA\u65B0\u7684\u5B9E\u4F8B\uFF0C\u4F8B\u5982\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> axios <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;axios&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> jsonClient <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">responseType</span><span class="token operator">:</span> <span class="token string">&#39;json&#39;</span><span class="token punctuation">,</span> <span class="token comment">// \u8BE5\u9879\u914D\u7F6E\u53EF\u4EE5\u5728\u540E\u7EED\u521B\u5EFA\u7684\u5B9E\u4F8B\u4E2D\u590D\u7528\uFF0C\u800C\u4E0D\u5FC5\u91CD\u590D\u7F16\u7801</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> serviceOne <span class="token operator">=</span> jsonClient<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">baseURL</span><span class="token operator">:</span> <span class="token string">&#39;https://service.one/&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> serviceTwo <span class="token operator">=</span> jsonClient<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">baseURL</span><span class="token operator">:</span> <span class="token string">&#39;https://service.two/&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// \u8FD9\u6837\u6709\u52A9\u4E8E\u590D\u7528\u5B9E\u4F8B\u7684\u516C\u5171\u53C2\u6570\u590D\u7528\uFF0C\u51CF\u5C11\u91CD\u590D\u7F16\u7801\u3002</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div>`,4),T=t(`<p>\u4E00\u4E2A\u65B0\u7684 PR</p><blockquote><p>\u94FE\u5F0F\u8C03\u7528\u9AA8\u67B6\u8FD9\u91CC\u5728 6 \u4E2A\u6708\u524D\u4E00\u4E2A\u65B0\u7684 pr\uFF0C\u91CD\u6784\u4E86\u8FD9\u90E8\u5206\u7684\u4EE3\u7801\u903B\u8F91\uFF0C<em>\u8FD9\u4E2A pr \u5185\u5BB9\u5F88\u5927\uFF0C\u4F60\u5FCD\u4E00\u4E0B</em>\uFF1A</p><p><strong><em>\u8FD9\u91CC\u4E3B\u8981\u662F\u9488\u5BF9\u4E86\u8BF7\u6C42\u62E6\u622A\u5668\u53EF\u80FD\u4F1A\u51FA\u73B0\u5F02\u6B65\u60C5\u51B5\u3001\u6216\u6709\u5F88\u957F\u7684\u5B8F\u4EFB\u52A1\u6267\u884C\uFF0C\u5E76\u4E14\u91CD\u6784\u4E4B\u524D\u7684\u4EE3\u7801\u4E2D\uFF0C\u56E0\u4E3A\u8BF7\u6C42\u4E8B\u653E\u5230\u5FAE\u4EFB\u52A1\u4E2D\u6267\u884C\u7684\uFF0C\u5FAE\u4EFB\u52A1\u521B\u5EFA\u7684\u65F6\u673A\u5728\u6784\u5EFA promise \u94FE\u4E4B\u524D\uFF0C\u5982\u679C\u5F53\u6267\u884C\u5230\u8BF7\u6C42\u4E4B\u524D\u5B8F\u4EFB\u52A1\u8017\u65F6\u6BD4\u8F83\u4E45\uFF0C\u6216\u8005\u67D0\u4E2A\u8BF7\u6C42\u62E6\u622A\u5668\u6709\u505A\u5F02\u6B65\uFF0C\u4F1A\u5BFC\u81F4\u771F\u6B63\u7684</em></strong><code>ajax</code><strong><em>\u8BF7\u6C42\u53D1\u9001\u65F6\u673A\u4F1A\u6709\u4E00\u5B9A\u7684\u5EF6\u8FDF\uFF0C\u6240\u4EE5\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\u662F\u5F88\u6709\u5FC5\u8981\u7684\u3002</em></strong></p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u8BF7\u6C42\u62E6\u622A\u5668\u50A8\u5B58\u6570\u7EC4</span>
<span class="token keyword">var</span> requestInterceptorChain <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token comment">// \u9ED8\u8BA4\u6240\u6709\u8BF7\u6C42\u62E6\u622A\u5668\u90FD\u4E3A\u540C\u6B65</span>
<span class="token keyword">var</span> synchronousRequestInterceptors <span class="token operator">=</span> <span class="token boolean">true</span>
<span class="token comment">// \u904D\u5386\u6CE8\u518C\u597D\u7684\u8BF7\u6C42\u62E6\u622A\u5668\u6570\u7EC4</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">unshiftRequestInterceptors</span><span class="token punctuation">(</span>
  <span class="token parameter">interceptor</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u8FD9\u91CCinterceptor\u662F\u6CE8\u518C\u7684\u6BCF\u4E00\u4E2A\u62E6\u622A\u5668\u5BF9\u8C61 axios\u8BF7\u6C42\u62E6\u622A\u5668\u5411\u5916\u66B4\u9732\u4E86runWhen\u914D\u7F6E\u6765\u9488\u5BF9\u4E00\u4E9B\u9700\u8981\u8FD0\u884C\u65F6\u68C0\u6D4B\u6765\u6267\u884C\u7684\u62E6\u622A\u5668</span>
  <span class="token comment">// \u5982\u679C\u914D\u7F6E\u4E86\u8BE5\u51FD\u6570\uFF0C\u5E76\u4E14\u8FD4\u56DE\u7ED3\u679C\u4E3Atrue\uFF0C\u5219\u8BB0\u5F55\u5230\u62E6\u622A\u5668\u94FE\u4E2D\uFF0C\u53CD\u4E4B\u5219\u76F4\u63A5\u7ED3\u675F\u8BE5\u5C42\u5FAA\u73AF</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>
    <span class="token keyword">typeof</span> interceptor<span class="token punctuation">.</span>runWhen <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">&amp;&amp;</span>
    interceptor<span class="token punctuation">.</span><span class="token function">runWhen</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token boolean">false</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// interceptor.synchronous \u662F\u5BF9\u5916\u63D0\u4F9B\u7684\u914D\u7F6E\uFF0C\u53EF\u6807\u8BC6\u8BE5\u62E6\u622A\u5668\u662F\u5F02\u6B65\u8FD8\u662F\u540C\u6B65 \u9ED8\u8BA4\u4E3Afalse(\u5F02\u6B65)</span>
  <span class="token comment">// \u8FD9\u91CC\u662F\u6765\u540C\u6B65\u6574\u4E2A\u6267\u884C\u94FE\u7684\u6267\u884C\u65B9\u5F0F\u7684\uFF0C\u5982\u679C\u6709\u4E00\u4E2A\u8BF7\u6C42\u62E6\u622A\u5668\u4E3A\u5F02\u6B65 \u90A3\u4E48\u4E0B\u9762\u7684promise\u6267\u884C\u94FE\u5219\u4F1A\u6709\u4E0D\u540C\u7684\u6267\u884C\u65B9\u5F0F</span>
  synchronousRequestInterceptors <span class="token operator">=</span>
    synchronousRequestInterceptors <span class="token operator">&amp;&amp;</span> interceptor<span class="token punctuation">.</span>synchronous
  <span class="token comment">// \u585E\u5230\u8BF7\u6C42\u62E6\u622A\u5668\u6570\u7EC4\u4E2D</span>
  requestInterceptorChain<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>
    interceptor<span class="token punctuation">.</span>fulfilled<span class="token punctuation">,</span>
    interceptor<span class="token punctuation">.</span>rejected
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// \u76F8\u5E94\u62E6\u622A\u5668\u5B58\u50A8\u6570\u7EC4</span>
<span class="token keyword">var</span> responseInterceptorChain <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token comment">// \u904D\u5386\u6309\u5E8Fpush\u5230\u62E6\u622A\u5668\u5B58\u50A8\u6570\u7EC4\u4E2D</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">pushResponseInterceptors</span><span class="token punctuation">(</span>
  <span class="token parameter">interceptor</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  responseInterceptorChain<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>interceptor<span class="token punctuation">.</span>fulfilled<span class="token punctuation">,</span> interceptor<span class="token punctuation">.</span>rejected<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">var</span> promise
<span class="token comment">// \u5982\u679C\u4E3A\u5F02\u6B65 \u5176\u5B9E\u4E5F\u662F\u9ED8\u8BA4\u60C5\u51B5</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>synchronousRequestInterceptors<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u8FD9\u91CC\u548C\u91CD\u6784\u4E4B\u524D\u7684\u903B\u8F91\u662F\u4E00\u81F4\u7684\u4E86</span>
  <span class="token keyword">var</span> chain <span class="token operator">=</span> <span class="token punctuation">[</span>dispatchRequest<span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">]</span>
  <span class="token comment">// \u8BF7\u6C42\u62E6\u622A\u5668\u585E\u5230\u524D\u9762</span>
  <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>chain<span class="token punctuation">,</span> requestInterceptorChain<span class="token punctuation">)</span>
  <span class="token comment">// \u54CD\u5E94\u62E6\u622A\u5668\u585E\u5230\u540E\u9762</span>
  chain <span class="token operator">=</span> chain<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>responseInterceptorChain<span class="token punctuation">)</span>
  promise <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span>
  <span class="token comment">// \u5FAA\u73AF \u6267\u884C</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>chain<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    promise <span class="token operator">=</span> promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>chain<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> chain<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u8FD4\u56DEpromise</span>
  <span class="token keyword">return</span> promise
<span class="token punctuation">}</span>

<span class="token comment">// \u8FD9\u91CC\u5219\u662F\u540C\u6B65\u7684\u903B\u8F91</span>
<span class="token keyword">var</span> newConfig <span class="token operator">=</span> config
<span class="token comment">// \u8BF7\u6C42\u62E6\u622A\u5668\u4E00\u4E2A\u4E00\u4E2A\u7684\u8D70 \u8FD4\u56DE \u8BF7\u6C42\u524D\u6700\u65B0\u7684config</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>requestInterceptorChain<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> onFulfilled <span class="token operator">=</span> requestInterceptorChain<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">var</span> onRejected <span class="token operator">=</span> requestInterceptorChain<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token comment">// \u505A\u5F02\u5E38\u6355\u83B7 \u6709\u9519\u76F4\u63A5\u629B\u51FA</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    newConfig <span class="token operator">=</span> <span class="token function">onFulfilled</span><span class="token punctuation">(</span>newConfig<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">onRejected</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
    <span class="token keyword">break</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u5230\u8FD9\u91CC \u5FAE\u4EFB\u52A1\u4E0D\u4F1A\u8FC7\u65E9\u7684\u521B\u5EFA</span>
<span class="token comment">// \u4E5F\u5C31\u89E3\u51B3\u4E86 \u5FAE\u4EFB\u52A1\u8FC7\u65E9\u521B\u5EFA\u3001\u5F53\u524D\u5B8F\u4EFB\u52A1\u8FC7\u957F\u6216\u67D0\u4E2A\u8BF7\u6C42\u62E6\u622A\u5668\u4E2D\u6709\u5F02\u6B65\u4EFB\u52A1\u800C\u963B\u585E\u771F\u6B63\u7684\u8BF7\u6C42\u5EF6\u65F6\u53D1\u8D77\u95EE\u9898</span>
<span class="token keyword">try</span> <span class="token punctuation">{</span>
  promise <span class="token operator">=</span> <span class="token function">dispatchRequest</span><span class="token punctuation">(</span>newConfig<span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u54CD\u5E94\u62E6\u622A\u5668\u6267\u884C</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>responseInterceptorChain<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  promise <span class="token operator">=</span> promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
    responseInterceptorChain<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    responseInterceptorChain<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">return</span> promise
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br></div></div>`,3),_=s("\u4E0A\u9762\u7684\u5185\u5BB9\u9700\u8981\u53CD\u590D\u7684\u68B3\u7406\uFF0C\u7B14\u8005\u4E5F\u662F\u7ED3\u5408\u6E90\u7801\u53CA\u5C31\u8BE5\u6B21\u91CD\u6784\u7684 PR \u7684\u8BA8\u8BBA\u8FDB\u884C\u4E86\u4ED4\u7EC6\u5206\u6790\uFF1A "),P={href:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Faxios%2Faxios%2Fissues%2F2609",target:"_blank",rel:"noopener noreferrer"},S=n("strong",null,"\u8BE6\u60C5\u89C1\u6B64\u6761 PR",-1),D=s(" !!!"),O=n("p",null,[n("img",{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6a9e873564e74066a76bd1993b94c220~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp",alt:"img"})],-1),I=n("p",null,[n("img",{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9b0b2bfbf3d2496ca9f1b586a8d2e68a~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp",alt:"img"})],-1),U=n("p",null,"\u4F5C\u8005\uFF1A\u601D\u552F \u94FE\u63A5\uFF1Ahttps://juejin.cn/post/7016255507392364557 \u6765\u6E90\uFF1A\u7A00\u571F\u6398\u91D1 \u8457\u4F5C\u6743\u5F52\u4F5C\u8005\u6240\u6709\u3002\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u8054\u7CFB\u4F5C\u8005\u83B7\u5F97\u6388\u6743\uFF0C\u975E\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u6CE8\u660E\u51FA\u5904\u3002",-1),L=t('<h3 id="\u8F6C\u6362\u5668\u548C\u62E6\u622A\u5668\u7684\u5173\u7CFB" tabindex="-1"><a class="header-anchor" href="#\u8F6C\u6362\u5668\u548C\u62E6\u622A\u5668\u7684\u5173\u7CFB" aria-hidden="true">#</a> \u8F6C\u6362\u5668\u548C\u62E6\u622A\u5668\u7684\u5173\u7CFB</h3><blockquote><p>\u8F6C\u6362\u5668\u548C\u62E6\u622A\u5668\u7684\u6700\u5927\u7684\u533A\u522B\u4E4B\u4E00\uFF0Ctransformer \u91CC\u9762\u53EA\u80FD\u201C\u540C\u6B65\u201D\u64CD\u4F5C\uFF0Cinterceptor \u91CC\u9762\u53EF\u4EE5\u201C\u5F02\u6B65\u201D\u3002</p></blockquote><p>\u8BF7\u6C42\u8F6C\u6362\u5668\uFF08transformRequest\uFF09\u4E3B\u8981\u7528\u6765\u6839\u636E data \u683C\u5F0F\uFF0C\u8BBE\u7F6E http \u8BF7\u6C42\u5934\uFF1B \u54CD\u5E94\u8F6C\u6362\u5668\uFF08transformResponse\uFF09\u53EF\u4EE5\u6839\u636E\u5B9E\u9645\u4E1A\u52A1\u4E2D\u670D\u52A1\u7AEF\u8FD4\u56DE\u7684\u6570\u636E\u683C\u5F0F\uFF0C\u7EDF\u4E00\u8BBE\u7F6E\u8F6C\u6362\u65B9\u6CD5\u3002 \u62E6\u622A\u5668\u662F\u88AB\u5305\u88C5\u6210\u4E86 Promise\uFF0C\u663E\u7136\u4E3B\u8981\u662F\u60F3\u7528\u5B83\u6765\u5904\u7406\u5F02\u6B65\u7684\u3002</p><p>\u6C47\u603B\u4E0B\u5C31\u662F\uFF1A</p><p><strong>\u8F6C\u6362\u5668\u662F\u5904\u7406\u6570\u636E\u548C\u8BF7\u6C42\u5934\u7684\uFF0C\u4E0D\u80FD\u5904\u7406\u5F02\u6B65\uFF0C\u4E0D\u4F1A\u963B\u65AD\u8BF7\u6C42\u548C\u54CD\u5E94\u6D41\u7A0B\uFF1B</strong></p><p><strong>\u62E6\u622A\u5668\u53EF\u4EE5\u5904\u7406\u5F02\u6B65\u9700\u6C42\uFF0C\u53EF\u4EE5\u4F7F\u7528\u62E6\u622A\u5668\u963B\u65AD\u8BF7\u6C42\u6216\u54CD\u5E94\u6D41\u7A0B\u3002</strong></p><h3 id="\u6D89\u53CA\u5230\u7684\u8BBE\u8BA1\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u6D89\u53CA\u5230\u7684\u8BBE\u8BA1\u6A21\u5F0F" aria-hidden="true">#</a> \u6D89\u53CA\u5230\u7684\u8BBE\u8BA1\u6A21\u5F0F</h3><p>Axios \u6D89\u53CA\u5230\u7684\u8BBE\u8BA1\u6A21\u5F0F\u5C31\u6709\uFF1A<strong>\u5355\u4F8B\u6A21\u5F0F</strong>\u3001<strong>\u5DE5\u5382\u6A21\u5F0F</strong>\u3001<strong>\u804C\u8D23\u94FE\u6A21\u5F0F</strong>\u3001<strong>\u9002\u914D\u5668\u6A21\u5F0F</strong>\uFF0C\u56E0\u6B64\u7EDD\u5BF9\u662F\u503C\u5F97\u5B66\u4E60\u7684\u4E00\u4E2A\u5DE5\u5177\u5E93\uFF0C\u68B3\u7406\u4E4B\u540E\u4E0D\u4EC5\u5229\u4E8E\u6211\u4EEC\u7075\u6D3B\u4F7F\u7528\u5176 API\uFF0C\u66F4\u6709\u52A9\u4E8E\u6839\u636E\u4E1A\u52A1\u53BB\u81EA\u5B9A\u4E49\u6269\u5C55\u5C01\u88C5\u7F51\u7EDC\u8BF7\u6C42\uFF0C\u5C06\u7F51\u7EDC\u8BF7\u6C42\u7EDF\u4E00\u6536\u53E3\u3002</p><h3 id="\u53C2\u8003\u6587\u732E" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u6587\u732E" aria-hidden="true">#</a> \u53C2\u8003\u6587\u732E</h3>',9),B={href:"https://juejin.cn/post/7016255507392364557#comment",target:"_blank",rel:"noopener noreferrer"},F=s("\u6700\u5168\u3001\u6700\u8BE6\u7EC6 Axios \u6E90\u7801\u89E3\u8BFB---\u770B\u8FD9\u4E00\u7BC7\u5C31\u8DB3\u591F\u4E86"),H={href:"https://juejin.cn/post/7029729114378469383",target:"_blank",rel:"noopener noreferrer"},N=s("\u8FD9\u6B21\u7EC8\u4E8E\u5F04\u61C2 Axios \u662F\u5982\u4F55\u4E2D\u65AD\u8BF7\u6C42\u4E86"),M={href:"https://developer.51cto.com/article/691169.html",target:"_blank",rel:"noopener noreferrer"},z=s("\u521A\u51FA\u9505\u7684 Axios \u7F51\u7EDC\u8BF7\u6C42\u6E90\u7801\u9605\u8BFB\u7B14\u8BB0\uFF0C\u4F60\u4F1A\u5417"),V={href:"https://linjingyi.cn/posts/fe9fb5af.html",target:"_blank",rel:"noopener noreferrer"},W=s("Axios \u6E90\u7801\u89E3\u6790\uFF08\u4E8C\uFF09\uFF1A\u901A\u7528\u5DE5\u5177\u65B9\u6CD5"),X={href:"https://i-fanr.com/2022/03/22/axios-resource/",target:"_blank",rel:"noopener noreferrer"},J=s("Axios \u6E90\u7801\u89E3\u8BFB\u770B\u8FD9\u4E00\u7BC7\u5C31\u591F\u4E86");function K(Q,$){const a=e("ExternalLinkIcon");return o(),c(l,null,[i,n("ol",null,[k,n("li",null,[b,n("blockquote",null,[m,n("p",null,[d,n("a",f,[y,p(a)])])]),g]),h]),w,n("ol",null,[n("li",null,[n("p",null,[x,v,q,j,R,n("a",A,[C,p(a)])]),E]),n("li",null,[T,n("p",null,[_,n("a",P,[S,p(a)]),D]),O,I,U])]),L,n("p",null,[n("a",B,[F,p(a)])]),n("p",null,[n("a",H,[N,p(a)])]),n("p",null,[n("a",M,[z,p(a)])]),n("p",null,[n("a",V,[W,p(a)])]),n("p",null,[n("a",X,[J,p(a)])])],64)}var Z=u(r,[["render",K]]);export{Z as default};
