import{r as t,o as e,c as o,a as n,b as c,F as l,e as s,d as a}from"./app.5054972b.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const r={},i=s(`<h1 id="\u4E00\u4E9B\u5DE5\u5177\u5E93\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u4E00\u4E9B\u5DE5\u5177\u5E93\u51FD\u6570" aria-hidden="true">#</a> \u4E00\u4E9B\u5DE5\u5177\u5E93\u51FD\u6570</h1><h2 id="_1\u3001\u51FD\u6570\u76F8\u5173" tabindex="-1"><a class="header-anchor" href="#_1\u3001\u51FD\u6570\u76F8\u5173" aria-hidden="true">#</a> 1\u3001\u51FD\u6570\u76F8\u5173</h2><h3 id="_1-1-call-apply-bind" tabindex="-1"><a class="header-anchor" href="#_1-1-call-apply-bind" aria-hidden="true">#</a> 1.1 call/apply/bind</h3><h4 id="_1-1-1-call-\u51FD\u6570\u5C01\u88C5\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_1-1-1-call-\u51FD\u6570\u5C01\u88C5\u5B9E\u73B0" aria-hidden="true">#</a> 1.1.1 call \u51FD\u6570\u5C01\u88C5\u5B9E\u73B0</h4><ul><li>\u8BED\u6CD5\uFF1Acall(fn, obj, ...args)</li><li>\u529F\u80FD\uFF1A\u6267\u884C fn \uFF0C\u4F7F this \u6307\u5411\u4E3A obj\uFF0C \u5E76\u5C06\u540E\u9762\u7684 n \u4E2A\u53C2\u6570\u4F20\u7ED9 fn(\u529F\u80FD\u7B49\u540C\u4E8E\u51FD\u6570\u5BF9\u8C61\u7684 calll \u65B9\u6CD5)</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> obj<span class="token punctuation">,</span> <span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>obj <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">||</span> obj <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6839\u636E mdn \u6587\u6863\uFF0Cthis \u4E3A undefined \u6216\u8005 null \u6307\u5411 \u5168\u5C40\u5BF9\u8C61</span>
    obj <span class="token operator">=</span> globalThis <span class="token comment">// globalThis \u8868\u793A\u5F53\u524D\u5168\u5C40\u5BF9\u8C61 \uFF0Cwindow \u6216\u8005 node</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u4E3A obj \u6DFB\u52A0\u4E34\u65F6\u7684\u65B9\u6CD5</span>
  obj<span class="token punctuation">.</span>temp <span class="token operator">=</span> fn
  <span class="token comment">// \u8C03\u7528 temp\u65B9\u6CD5</span>
  <span class="token keyword">let</span> result <span class="token operator">=</span> obj<span class="token punctuation">.</span><span class="token function">temp</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span>
  <span class="token comment">// \u5220\u9664 temp \u5C5E\u6027\u65B9\u6CD5</span>
  <span class="token keyword">delete</span> obj<span class="token punctuation">.</span>temp
  <span class="token comment">// \u8FD4\u56DE\u6267\u884C\u7ED3\u679C</span>
  <span class="token keyword">return</span> result
<span class="token punctuation">}</span>

<span class="token comment">// \u6D4B\u8BD5\u4EE3\u7801</span>

<span class="token comment">// \u58F0\u660E\u4E00\u4E2A\u51FD\u6570</span>
<span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> a <span class="token operator">+</span> b <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>c
<span class="token punctuation">}</span>
<span class="token comment">// \u58F0\u660E\u4E00\u4E2A\u5BF9\u8C61</span>
<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">521</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6DFB\u52A0\u5168\u5C40\u5C5E\u6027</span>
window<span class="token punctuation">.</span>c <span class="token operator">=</span> <span class="token number">1314</span>

<span class="token comment">// \u6267\u884C call \u51FD\u6570</span>

<span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token function">call</span><span class="token punctuation">(</span>add<span class="token punctuation">,</span> obj<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
<span class="token keyword">const</span> result2 <span class="token operator">=</span> <span class="token function">call</span><span class="token punctuation">(</span>add<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result2<span class="token punctuation">)</span>

<span class="token comment">// \u539F\u751F\u51FD\u6570\u7684 call \u65B9\u6CD5</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">add</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">add</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div><h4 id="_1-1-2-apply-\u51FD\u6570\u5C01\u88C5\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_1-1-2-apply-\u51FD\u6570\u5C01\u88C5\u5B9E\u73B0" aria-hidden="true">#</a> 1.1.2 apply \u51FD\u6570\u5C01\u88C5\u5B9E\u73B0</h4><ul><li>\u8BED\u6CD5\uFF1Aapply(fn, obj, args)</li><li>\u529F\u80FD\uFF1A\u6267\u884C fn, \u4F7F this \u4E3A obj, \u5E76\u5C06 args \u6570\u7EC4\u4E2D\u7684\u5143\u7D20\u4F20\u7ED9 fn\uFF08\u529F\u80FD\u7B49\u540C\u4E8E\u51FD\u6570\u5BF9\u8C61\u7684 apply \u65B9\u6CD5\uFF09</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// args \u662F\u4E00\u4E2A\u6570\u7EC4\u7C7B\u578B</span>
<span class="token keyword">function</span> <span class="token function">apply</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> obj<span class="token punctuation">,</span> args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>obj <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">||</span> obj <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    obj <span class="token operator">=</span> globalThis
  <span class="token punctuation">}</span>
  <span class="token comment">// \u4E3A obj \u6DFB\u52A0 \u4E34\u65F6\u65B9\u6CD5</span>
  obj<span class="token punctuation">.</span>temp <span class="token operator">=</span> fn
  <span class="token comment">// \u6267\u884C\u65B9\u6CD5</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> obj<span class="token punctuation">.</span><span class="token function">temp</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span>
  <span class="token comment">// \u5220\u9664 temp \u5C5E\u6027\u65B9\u6CD5</span>
  <span class="token keyword">delete</span> obj<span class="token punctuation">.</span>temp
  <span class="token keyword">return</span> result
<span class="token punctuation">}</span>

<span class="token comment">// \u58F0\u660E\u4E00\u4E2A\u51FD\u6570</span>
<span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> a <span class="token operator">+</span> b <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>c
<span class="token punctuation">}</span>
<span class="token comment">// \u58F0\u660E\u4E00\u4E2A\u5BF9\u8C61</span>
<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">521</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6DFB\u52A0\u5168\u5C40\u5C5E\u6027</span>
window<span class="token punctuation">.</span>c <span class="token operator">=</span> <span class="token number">1314</span>

<span class="token comment">// \u6267\u884C apply \u51FD\u6570</span>
<span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token function">apply</span><span class="token punctuation">(</span>add<span class="token punctuation">,</span> obj<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
<span class="token keyword">const</span> result2 <span class="token operator">=</span> <span class="token function">apply</span><span class="token punctuation">(</span>add<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result2<span class="token punctuation">)</span>

<span class="token comment">// \u539F\u751F\u51FD\u6570\u7684 apply \u65B9\u6CD5</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">add</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">add</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><h4 id="_1-1-3-bind-\u51FD\u6570\u5C01\u88C5\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_1-1-3-bind-\u51FD\u6570\u5C01\u88C5\u5B9E\u73B0" aria-hidden="true">#</a> 1.1.3 bind \u51FD\u6570\u5C01\u88C5\u5B9E\u73B0</h4><ul><li>\u8BED\u6CD5\uFF1Abind(fn, obj, ...args)</li><li>\u529F\u80FD\uFF1A\u7ED9 fn \u7ED1\u5B9A this \u4E3A obj\uFF0C\u5E76\u5236\u5B9A\u53C2\u6570\u4E3A\u540E\u9762\u7684 n \u4E2A\u53C2\u6570(\u529F\u80FD\u7B49\u540C\u4E8E\u51FD\u6570\u5BF9\u8C61\u7684 bind \u65B9\u6CD5 )</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5B9E\u73B0\u65B9\u5F0F\u4F9D\u8D56 call</span>
<span class="token keyword">function</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> obj<span class="token punctuation">,</span> <span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>obj <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">||</span> obj <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    obj <span class="token operator">=</span> globalThis
  <span class="token punctuation">}</span>
  obj<span class="token punctuation">.</span>temp <span class="token operator">=</span> fn
  <span class="token keyword">let</span> result <span class="token operator">=</span> obj<span class="token punctuation">.</span><span class="token function">temp</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span>
  <span class="token keyword">delete</span> obj<span class="token punctuation">.</span>temp
  <span class="token keyword">return</span> result
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">bind</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> obj<span class="token punctuation">,</span> <span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684\u51FD\u6570</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6307\u5411 call \u51FD\u6570, \u6CE8\u610F\u53C2\u6570\u7684\u987A\u5E8F</span>
    <span class="token keyword">return</span> <span class="token function">call</span><span class="token punctuation">(</span>fn<span class="token punctuation">,</span> obj<span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token punctuation">,</span> <span class="token operator">...</span>args2<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u58F0\u660E\u4E00\u4E2A\u51FD\u6570</span>
<span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> a <span class="token operator">+</span> b <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>c
<span class="token punctuation">}</span>
<span class="token comment">// \u58F0\u660E\u4E00\u4E2A\u5BF9\u8C61</span>
<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">521</span> <span class="token punctuation">}</span>

<span class="token comment">// \u6DFB\u52A0\u5168\u5C40\u5C5E\u6027</span>
window<span class="token punctuation">.</span>c <span class="token operator">=</span> <span class="token number">1314</span>

<span class="token comment">// \u6267\u884C bind \u51FD\u6570</span>
<span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token function">bind</span><span class="token punctuation">(</span>add<span class="token punctuation">,</span> obj<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
<span class="token keyword">const</span> result2 <span class="token operator">=</span> <span class="token function">bind</span><span class="token punctuation">(</span>add<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result2<span class="token punctuation">)</span>

<span class="token comment">// \u539F\u751F\u51FD\u6570\u7684 apply \u65B9\u6CD5</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">add</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">add</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br></div></div><h3 id="_1-1-2-\u5B9E\u73B0\u8BF4\u660E" tabindex="-1"><a class="header-anchor" href="#_1-1-2-\u5B9E\u73B0\u8BF4\u660E" aria-hidden="true">#</a> 1.1.2 \u5B9E\u73B0\u8BF4\u660E</h3><ul><li>\u533A\u522B\uFF1Acall/apply/bind <ul><li>call(obj)/apply(obj)\uFF1A\u8C03\u7528\u51FD\u6570\uFF0C\u6307\u5B9A\u51FD\u6570\u4E2D\u7684 this \u4E3A\u7B2C\u4E00\u4E2A\u53C2\u6570\u7684\u503C</li><li>bind(obj)\uFF1A\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684\u51FD\u6570\uFF0C\u65B0\u51FD\u6570\u5185\u90E8\u4F1A\u8C03\u7528\u539F\u6765\u7684\u51FD\u6570\uFF0C\u4E14 this \u4E3A bind() \u6307\u5B9A\u7684\u7B2C\u4E00\u53C2\u6570\u7684\u503C</li><li>\u6CE8\u610F\uFF1A\u5982\u679C obj \u662F null/undefined, this \u6307\u5411 \u5168\u5C40\u5BF9\u8C61 window / node</li></ul></li><li>\u5E94\u7528 <ul><li>call/apply \u5E94\u7528\uFF1A\u6839\u636E\u4F2A\u6570\u7EC4\u751F\u6210\u771F\u6570\u7EC4</li><li>bind \u5E94\u7528: react \u4E2D\u7EC4\u4EF6\u7684\u81EA\u5B9A\u4E49\u65B9\u6CD5\u3001vue \u4E2D\u7684\u4E8B\u4EF6\u56DE\u8C03\u51FD\u6570\u5185\u90E8</li></ul></li><li>\u81EA\u5B9A\u4E49 call/apply <ul><li>\u7ED9 obj \u6DFB\u52A0\u4E00\u4E2A\u4E34\u65F6\u65B9\u6CD5\uFF0C\u65B9\u6CD5\u540D\u4EFB\u610F\uFF0C\u503C\u4E3A\u5F53\u671F\u51FD\u6570</li><li>\u901A\u8FC7 obj \u8C03\u7528\u8FD9\u4E2A\u4E34\u65F6\u65B9\u6CD5\uFF0C\u5E76\u5C06\u63A5\u6536\u7684\u53C2\u6570\u4F20\u5165</li><li>\u5220\u9664 obj \u4E0A\u7684\u8FD9\u4E2A\u4E34\u65F6\u65B9\u6CD5\u5C5E\u6027</li></ul></li><li>\u81EA\u5B9A\u4E49 bind <ul><li>\u8FD4\u56DE\u4E00\u4E2A\u65B0\u51FD\u6570</li><li>\u5728\u65B0\u51FD\u6570\u5185\u90E8\u901A\u8FC7\u539F\u51FD\u6570\u5BF9\u8C61\u7684 call \u65B9\u6CD5\u6765\u6267\u884C\u539F\u51FD\u6570</li><li>\u6307\u5B9A\u539F\u51FD\u6570\u7684 this \u4E3A obj</li><li>\u6307\u5B9A\u53C2\u6570\u4E3A bind \u8C03\u7528\u7684\u53C2\u6570\u548C\u540E\u9762\u65B0\u51FD\u6570\u8C03\u7528\u7684\u53C2\u6570</li></ul></li></ul><h3 id="_1-2-\u51FD\u6570\u8282\u6D41\u4E0E\u51FD\u6570\u9632\u6296" tabindex="-1"><a class="header-anchor" href="#_1-2-\u51FD\u6570\u8282\u6D41\u4E0E\u51FD\u6570\u9632\u6296" aria-hidden="true">#</a> 1.2 \u51FD\u6570\u8282\u6D41\u4E0E\u51FD\u6570\u9632\u6296</h3><h4 id="_1-2-1-\u76F8\u5173\u7406\u89E3" tabindex="-1"><a class="header-anchor" href="#_1-2-1-\u76F8\u5173\u7406\u89E3" aria-hidden="true">#</a> 1.2.1 \u76F8\u5173\u7406\u89E3</h4><ul><li>\u4E8B\u4EF6\u9891\u7E41\u89E6\u53D1\u53EF\u80FD\u9020\u6210\u7684\u95EE\u9898\uFF1F <ul><li>\u4E00\u4E9B\u6D4F\u89C8\u5668\u4E8B\u4EF6\uFF1Awindow.onresize/window.mouseomove \u7B49\uFF0C\u89E6\u53D1\u7684\u9891\u7387\u975E\u5E38\u9AD8\uFF0C\u4F1A\u9020\u6210\u754C\u9762\u5361\u987F</li><li>\u5982\u679C\u5411\u540E\u53F0\u53D1\u9001\u8BF7\u6C42\uFF0C\u9891\u7E41\u8BF7\u6C42\uFF0C\u5BF9\u670D\u52A1\u5668\u9020\u6210\u4E0D\u5FC5\u8981\u7684\u538B\u529B</li></ul></li><li>\u5982\u4F55\u9650\u5236\u4E8B\u4EF6\u5904\u7406\u51FD\u6570\u9891\u7E41\u8C03\u7528 <ul><li>\u51FD\u6570\u8282\u6D41</li><li>\u51FD\u6570\u9632\u6296</li></ul></li><li>\u51FD\u6570\u8282\u6D41 throttle: <ul><li>\u7406\u89E3 <ul><li>\u5728\u51FD\u6570\u9700\u8981\u9891\u7E41\u89E6\u53D1\u65F6\uFF0C\u51FD\u6570\u6267\u884C\u4E00\u6B21\u540E\uFF0C\u53EA\u6709\u5927\u4E8E\u8BBE\u5B9A\u7684\u6267\u884C\u5468\u671F\u540E\u624D\u4F1A\u6267\u884C\u7B2C\u4E8C\u6B21</li><li>\u9002\u5408\u591A\u6B21\u4E8B\u4EF6\u6309\u5E73\u5747\u65F6\u95F4\u505A\u5E73\u5747\u5206\u914D\u89E6\u53D1</li></ul></li><li>\u573A\u666F <ul><li>\u7A97\u53E3\u8C03\u6574 resize</li><li>\u9875\u9762\u6EDA\u52A8 scroll</li><li>DOM \u5143\u7D20\u7684\u62D6\u62FD\u529F\u80FD\u5B9E\u73B0 mousemove</li><li>\u62A2\u8D2D\u75AF\u72C2\u70B9\u51FB click</li></ul></li></ul></li><li>\u51FD\u6570\u9632\u6296 debounce <ul><li>\u7406\u89E3 <ul><li>\u5728\u51FD\u6570\u9700\u8981\u9891\u7E41\u89E6\u53D1\u65F6\uFF1A\u5728\u89C4\u5B9A\u65F6\u95F4\u5185\uFF0C\u53EA\u8BA9\u6700\u540E\u4E00\u6B21\u751F\u6548\uFF0C\u524D\u9762\u7684\u4E0D\u751F\u6548</li><li>\u9002\u5408\u591A\u6B21\u4E8B\u4EF6\u4E00\u6B21\u54CD\u5E94\u7684\u60C5\u51B5</li></ul></li><li>\u573A\u666F <ul><li>\u8F93\u5165\u6846\u5B9E\u65F6\u641C\u7D22\u8054\u60F3 keyup/input</li></ul></li></ul></li><li>\u533A\u522B\u51FD\u6570\u8282\u6D41\u4E0E\u9632\u6296 <ul><li>\u51FD\u6570\u8282\u6D41\uFF1An \u79D2\u5185\u53EA\u8FD0\u884C\u4E00\u6B21\uFF0C\u82E5\u5728 n \u79D2\u5185\u91CD\u590D\u89E6\u53D1\uFF0C\u53EA\u6709\u4E00\u6B21\u751F\u6548</li><li>\u51FD\u6570\u9632\u6296\uFF1An \u79D2\u540E\u518D\u6267\u884C\u8BE5\u4E8B\u4EF6\uFF0C\u82E5\u5728 n \u79D2\u5185\u91CD\u590D\u89E6\u53D1\uFF0C\u5219\u91CD\u65B0\u8BA1\u65F6</li></ul></li></ul><h4 id="_1-2-2-api-\u8BF4\u660E" tabindex="-1"><a class="header-anchor" href="#_1-2-2-api-\u8BF4\u660E" aria-hidden="true">#</a> 1.2.2 API \u8BF4\u660E</h4><ul><li>throttle \u8282\u6D41 <ul><li>\u8BED\u6CD5\uFF1Athrottle(callback, wait)</li><li>\u529F\u80FD\uFF1A\u521B\u5EFA\u4E00\u4E2A\u8282\u6D41\u51FD\u6570\uFF0C\u5728 wait \u6BEB\u79D2\u5185\u6700\u591A\u6267\u884C callback \u4E00\u6B21</li></ul></li><li>debounce \u9632\u6296 <ul><li>\u8BED\u6CD5\uFF1Adebounce(callback, wait)</li><li>\u529F\u80FD\uFF1A\u521B\u5EFA\u4E00\u4E2A\u9632\u6296\u52A8\u51FD\u6570\uFF0C\u8BE5\u51FD\u6570\u4ECE\u4E0A\u4E00\u6B21\u88AB\u8C03\u7528\u540E\uFF0C\u5EF6\u8FDF wait \u6BEB\u79D2\u540E\u8C03\u7528 callback</li></ul></li></ul><h4 id="_1-2-3-\u7F16\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_1-2-3-\u7F16\u7801\u5B9E\u73B0" aria-hidden="true">#</a> 1.2.3 \u7F16\u7801\u5B9E\u73B0</h4><ol><li><p>\u51FD\u6570\u8282\u6D41\u5B9E\u73B0</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">throttle</span><span class="token punctuation">(</span><span class="token parameter">callback<span class="token punctuation">,</span> wait</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5B9A\u4E49\u5F00\u59CB\u65F6\u95F4</span>
  <span class="token keyword">let</span> start <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token comment">// \u8FD4\u56DE\u7ED3\u679C\u662F\u4E00\u4E2A\u51FD\u6570</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u53EA\u6709\u8DDD\u79BB\u4E0A\u6B21\u5904\u7406\u7684\u65F6\u95F4\u95F4\u9694\u8D85\u8FC7\u4E86wait \u65F6\uFF0C\u624D\u6267\u884C\u5904\u7406\u4E8B\u4EF6\u7684\u51FD\u6570</span>
    <span class="token keyword">const</span> current <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>current <span class="token operator">-</span> start <span class="token operator">&gt;</span> wait<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">callback</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> event<span class="token punctuation">)</span> <span class="token comment">// \u6307\u5B9A this \u548C \u53C2\u6570</span>
      start <span class="token operator">=</span> current
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u8C03\u7528\u65B9\u5F0F</span>
window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>
  <span class="token string">&#39;scroll&#39;</span><span class="token punctuation">,</span>
  <span class="token function">throttle</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div></li><li><p>\u51FD\u6570\u9632\u6296</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// html:  &lt;button id=&quot;btn&quot;&gt;\u6D4B\u8BD5\u51FD\u6570\u9632\u6296&lt;/button&gt;</span>

<span class="token keyword">function</span> <span class="token function">debounce</span><span class="token punctuation">(</span><span class="token parameter">callback<span class="token punctuation">,</span> wait</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u7528\u6765 \u4FDD\u5B58\u5B9A\u65F6\u5668\u4EFB\u52A1\u7684\u6807\u8BC6 id</span>
  <span class="token keyword">let</span> timerId <span class="token operator">=</span> <span class="token keyword">null</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>timerId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5982\u679C\u5B9A\u65F6\u5668\u5B58\u5728\u5C31\u6E05\u9664</span>
      <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timerId<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u542F\u52A8\u5EF6\u8FDF wait \u65F6\u95F4\u540E\u6267\u884C\u7684\u5B9A\u65F6\u5668\u4EFB\u52A1</span>
    timerId <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u8C03\u7528 callback \u5904\u7406\u4E8B\u4EF6</span>
      <span class="token function">callback</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> event<span class="token punctuation">)</span>
      <span class="token comment">// \u5904\u7406\u540E\u91CD\u7F6E\u5B9A\u65F6\u5668\u6807\u8BC6</span>
      timerId <span class="token operator">=</span> <span class="token keyword">null</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> wait<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;btn&#39;</span><span class="token punctuation">)</span>
btn<span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token function">debounce</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u70B9\u51FB\u4E8B\u4EF6\u89E6\u53D1\u4E86&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div></li></ol><h2 id="_2\u3001\u6570\u7EC4\u76F8\u5173" tabindex="-1"><a class="header-anchor" href="#_2\u3001\u6570\u7EC4\u76F8\u5173" aria-hidden="true">#</a> 2\u3001\u6570\u7EC4\u76F8\u5173</h2><h3 id="_2-1-\u6570\u7EC4\u58F0\u660E\u5F0F\u7CFB\u5217\u65B9\u5F0F" tabindex="-1"><a class="header-anchor" href="#_2-1-\u6570\u7EC4\u58F0\u660E\u5F0F\u7CFB\u5217\u65B9\u5F0F" aria-hidden="true">#</a> 2.1 \u6570\u7EC4\u58F0\u660E\u5F0F\u7CFB\u5217\u65B9\u5F0F</h3><h4 id="map-\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#map-\u51FD\u6570" aria-hidden="true">#</a> map \u51FD\u6570</h4><blockquote><p>\u8FD4\u56DE\u4E00\u4E2A\u7531\u56DE\u8C03\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u7EC4\u6210\u7684\u65B0\u6570\u7EC4</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// map \u51FD\u6570\uFF1A\u63A5\u53D7\u4E00\u4E2A\u6570\u7EC4 \u548C \u4E00\u4E2A\u56DE\u8C03\u51FD\u6570</span>
<span class="token keyword">function</span> <span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> newArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    newArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">callback</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> newArr
<span class="token punctuation">}</span>
<span class="token comment">// \u6D4B\u8BD5\u4EE3\u7801</span>
<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">map</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> item <span class="token operator">*</span> <span class="token number">10</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h4 id="reduce-\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#reduce-\u51FD\u6570" aria-hidden="true">#</a> reduce \u51FD\u6570</h4><blockquote><p>\u4ECE\u5DE6\u5230\u53F3\u4E3A\u6BCF\u4E2A\u6570\u7EC4\u5143\u7D20\u6267\u884C\u4E00\u6B21\u56DE\u8C03\u51FD\u6570\uFF0C\u5E76\u628A\u4E0A\u6B21\u56DE\u8C03\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u653E\u5728\u4E00\u4E2A\u6682\u5B58\u5668\u4E2D\u4F20\u7ED9\u4E0B\u6B21\u56DE\u8C03\u51FD\u6570\uFF0C\u5E76\u8FD4\u56DE\u6700\u540E\u4E00\u6B21\u56DE\u8C03\u51FD\u6570\u7684\u8FD4\u56DE\u503C</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">reduce</span><span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> callback<span class="token punctuation">,</span> initValue</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> result <span class="token operator">=</span> initValue
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8C03\u7528\u56DE\u8C03\u51FD\u6570\u5C06\u8FD4\u56DE\u7684\u7ED3\u679C\u8D4B\u503C\u7ED9result</span>
    result <span class="token operator">=</span> <span class="token function">callback</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> arr<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result
<span class="token punctuation">}</span>

<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">reduce</span><span class="token punctuation">(</span>
  arr<span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token parameter">prev<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>prev<span class="token punctuation">,</span> next<span class="token punctuation">)</span>
    prev<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>next <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> prev
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token comment">// [2, 4, 6, 8, 10, 12, 14, 16, 18, 20]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h4 id="filter-\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#filter-\u51FD\u6570" aria-hidden="true">#</a> filter \u51FD\u6570</h4><blockquote><p>\u5C06\u6240\u6709\u5728\u8FC7\u6EE4\u51FD\u6570\u4E2D\u8FD4\u56DE <code>true</code>\u7684 \u6570\u7EC4\u5143\u7D20\u653E\u8FDB\u4E00\u4E2A\u6570\u7EC4\u4E2D\u5E76\u8FD4\u56DE</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> newArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">callback</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      newArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> newArr
<span class="token punctuation">}</span>

<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">filter</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> item <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token comment">// [2,4,6,8,10]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h4 id="find-\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#find-\u51FD\u6570" aria-hidden="true">#</a> find \u51FD\u6570</h4><blockquote><p>\u627E\u5230\u7B2C\u4E00\u4E2A\u6EE1\u8DB3\u6D4B\u8BD5\u51FD\u6570\u7684\u5143\u7D20\u5E76\u8FD4\u56DE\u8FD9\u4E2A\u5143\u7D20\u7684\u503C\uFF0C\u5982\u679C\u627E\u4E0D\u5230\uFF0C\u5219\u8FD4\u56DE undefined</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">callback</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> arr<span class="token punctuation">[</span>index<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">find</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> item <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token comment">// 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h4 id="findindex-\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#findindex-\u51FD\u6570" aria-hidden="true">#</a> findIndex \u51FD\u6570</h4><blockquote><p>\u627E\u5230\u7B2C\u4E00\u4E2A\u6EE1\u8DB3\u6D4B\u8BD5\u51FD\u6570\u7684\u5143\u7D20\u5E76\u8FD4\u56DE\u90A3\u4E2A\u5143\u7D20\u7684\u7D22\u5F15\uFF0C\u5982\u679C\u627E\u4E0D\u5230\uFF0C\u8FD4\u56DE -1</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">callback</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> index
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">findIndex</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> item <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">5</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token comment">// 9</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h4 id="every-\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#every-\u51FD\u6570" aria-hidden="true">#</a> every \u51FD\u6570</h4><blockquote><p>\u5982\u679C\u6570\u7EC4\u4E2D\u7684\u6BCF\u4E2A\u5143\u7D20\u90FD\u7B26\u5408\u6D4B\u8BD5\u51FD\u6570\uFF0C\u5219\u8FD4\u56DE true\uFF0C \u5426\u5219\u8FD4\u56DE false</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">every</span><span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u53EA\u8981\u6709\u4E00\u4E2A\u56DE\u8C03\u51FD\u6570\u7ED3\u679C\u4E3Afalse, \u5219\u7ACB\u5373\u8FD4\u56DE false</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">callback</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5426\u5219\u8FD4\u56DE true</span>
  <span class="token keyword">return</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">every</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> item <span class="token operator">&gt;</span> <span class="token number">0</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h4 id="some-\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#some-\u51FD\u6570" aria-hidden="true">#</a> some \u51FD\u6570</h4><blockquote><p>\u5982\u679C\u6570\u7EC4\u4E2D\u81F3\u5C11\u6709\u4E00\u4E2A\u5143\u7D20\u6EE1\u8DB3\u6D4B\u8BD5\u51FD\u6570\uFF0C\u5219\u8FD4\u56DE true\uFF0C \u5426\u5219\u8FD4\u56DE false</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">some</span><span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">callback</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">some</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> item <span class="token operator">&gt;</span> <span class="token number">9</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="_2-2-\u6570\u7EC4\u53BB\u91CD" tabindex="-1"><a class="header-anchor" href="#_2-2-\u6570\u7EC4\u53BB\u91CD" aria-hidden="true">#</a> 2.2 \u6570\u7EC4\u53BB\u91CD</h3><h4 id="_2-2-1-api-\u8BF4\u660E" tabindex="-1"><a class="header-anchor" href="#_2-2-1-api-\u8BF4\u660E" aria-hidden="true">#</a> 2.2.1 API \u8BF4\u660E</h4><p>\u6839\u636E\u5F53\u524D\u6570\u7EC4\u4EA7\u751F\u4E00\u4E2A\u53BB\u91CD\u91CD\u590D\u5143\u7D20\u540E\u7684\u65B0\u6570\u7EC4</p><h4 id="_2-2-2-\u5B9E\u73B0\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#_2-2-2-\u5B9E\u73B0\u601D\u8DEF" aria-hidden="true">#</a> 2.2.2 \u5B9E\u73B0\u601D\u8DEF</h4><ol><li>\u5229\u7528 forEach \u548C indexOf() <ul><li>\u8BF4\u660E\uFF1A\u672C\u8D28\u662F\u53CC\u91CD\u904D\u5386\uFF0C\u6548\u7387\u5DEE\u4E9B</li></ul></li><li>\u5229\u7528 forEach() + \u5BF9\u8C61\u5BB9\u5668 <ul><li>\u8BF4\u660E\uFF1A\u53EA\u9700\u4E00\u91CD\u904D\u5386\uFF0C\u6548\u7387\u9AD8\u4E9B</li></ul></li><li>\u5229\u7528 ES6 \u8BED\u6CD5\uFF1Afrom + Set \u6216\u8005 ... + Set <ul><li>\u8BF4\u660E\uFF1A\u7F16\u7801\u7B80\u6D01</li></ul></li></ol><h4 id="_2-2-3-\u4EE3\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_2-2-3-\u4EE3\u7801\u5B9E\u73B0" aria-hidden="true">#</a> 2.2.3 \u4EE3\u7801\u5B9E\u73B0</h4><ol><li><p>\u7B2C\u4E00\u7248\uFF1A\u4F7F\u7528 forEach \u548C indexOf \u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">unique1</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> newArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>newArr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      newArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> newArr
<span class="token punctuation">}</span>

<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">unique1</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div></li><li><p>\u7B2C\u4E8C\u7248\uFF1A\u4F7F\u7528 forEach \u548C \u5BF9\u8C61\u5BB9\u5668</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">unique2</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> newArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">const</span> newObj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> item <span class="token operator">=</span> arr<span class="token punctuation">[</span>index<span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>newObj<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      newObj<span class="token punctuation">[</span>item<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span>
      newArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> newArr
<span class="token punctuation">}</span>

<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">unique2</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div></li><li><p>\u7B2C\u4E09\u7248\uFF1A\u4F7F\u7528 ES6 \u8BED\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">unique3</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">unique3</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></li></ol><h3 id="_2-3-\u6570\u7EC4\u5408\u5E76\u4E0E\u5207\u7247" tabindex="-1"><a class="header-anchor" href="#_2-3-\u6570\u7EC4\u5408\u5E76\u4E0E\u5207\u7247" aria-hidden="true">#</a> 2.3 \u6570\u7EC4\u5408\u5E76\u4E0E\u5207\u7247</h3><h4 id="concat-\u5408\u5E76\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#concat-\u5408\u5E76\u51FD\u6570" aria-hidden="true">#</a> concat()\uFF1A\u5408\u5E76\u51FD\u6570</h4><ul><li><p>\u8BED\u6CD5\uFF1A var newArr = concat(array, value1 [, value2, ...[,valueN]])</p></li><li><p>\u529F\u80FD\uFF1A\u5C06 n \u4E2A\u6570\u7EC4\u6216\u503C\u4E0E\u5F53\u524D\u6570\u7EC4\u5408\u5E76\u5728\u4E00\u4E2A\u65B0\u6570\u7EC4\uFF0C\u539F\u59CB\u6570\u7EC4\u4E0D\u4F1A\u88AB\u6539\u53D8</p></li><li><p>\u7F16\u7801\u5B9E\u73B0</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">concat</span><span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> <span class="token operator">...</span>value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> newArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>arr<span class="token punctuation">]</span>
  value<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      newArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span>item<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      newArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> newArr
<span class="token punctuation">}</span>

<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">concat</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token comment">// [2, 3, 2, 7, 6, 7, 8, 9, 8, 9, 10, 11, 12, 13, 14]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div></li></ul><h4 id="slice-\u5207\u7247\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#slice-\u5207\u7247\u51FD\u6570" aria-hidden="true">#</a> slice()\uFF1A\u5207\u7247\u51FD\u6570</h4><ul><li><p>\u8BED\u6CD5\uFF1Avar newArr = slice(array, [begin, [,end]])</p></li><li><p>\u529F\u80FD\uFF1A\u8FD4\u56DE\u4E00\u4E2A\u7531 begin \u548C end \u51B3\u5B9A\u7684\u539F\u6570\u7EC4\u7684\u6D45\u62F7\u8D1D\uFF0C\u539F\u59CB\u6570\u7EC4\u4E0D\u4F1A\u88AB\u6539\u53D8</p></li><li><p>\u7F16\u7801\u5B9E\u73B0</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">slice</span><span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> begin<span class="token punctuation">,</span> end</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5982\u679C\u5F53\u524D\u6570\u7EC4\u662F [], \u76F4\u63A5\u8FD4\u56DE[]</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  begin <span class="token operator">=</span> begin <span class="token operator">||</span> <span class="token number">0</span>
  <span class="token comment">// \u5982\u679C begin \u8D85\u8FC7\u6700\u5927\u4E0B\u6807\uFF0C\u76F4\u63A5\u8FD4\u56DE[]</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>begin <span class="token operator">&gt;=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u5982\u679C\u6570\u7EC4\u8D85\u8FC7\u6570\u7EC4\u957F\u5EA6\uFF0C\u5219\u622A\u53D6\u5230\u6570\u7EC4\u957F\u5EA6</span>
  end <span class="token operator">=</span> end <span class="token operator">||</span> arr<span class="token punctuation">.</span>length
  <span class="token keyword">if</span> <span class="token punctuation">(</span>end <span class="token operator">&gt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    end <span class="token operator">=</span> arr<span class="token punctuation">.</span>length
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5982\u679C end \u5C0F\u4E8E begin, \u5219\u76F4\u63A5\u8FD4\u56DE []</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>end <span class="token operator">&lt;=</span> begin<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> newArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token comment">// \u53D6\u51FA\u4E0B\u6807\u5728 [begin,end) \u533A\u95F4\u7684\u5143\u7D20\uFF0C\u5E76\u4FDD\u5B58\u5230\u6700\u7EC8\u7684\u6570\u7EC4\u4E2D</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> begin<span class="token punctuation">;</span> index <span class="token operator">&lt;</span> end<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    newArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> newArr
<span class="token punctuation">}</span>

<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">slice</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">slice</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">slice</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div></li></ul><h3 id="_2-4-\u6570\u7EC4\u6241\u5E73\u5316" tabindex="-1"><a class="header-anchor" href="#_2-4-\u6570\u7EC4\u6241\u5E73\u5316" aria-hidden="true">#</a> 2.4 \u6570\u7EC4\u6241\u5E73\u5316</h3><h4 id="_2-4-1-api-\u8BF4\u660E" tabindex="-1"><a class="header-anchor" href="#_2-4-1-api-\u8BF4\u660E" aria-hidden="true">#</a> 2.4.1 API \u8BF4\u660E</h4><ul><li>\u8BED\u6CD5\uFF1Aflatten(array)</li><li>\u53D6\u51FA\u5D4C\u5957\u6570\u7EC4\uFF08\u591A\u7EF4\uFF09\u4E2D\u7684\u6240\u6709\u5143\u7D20\u653E\u5230\u4E00\u4E2A\u65B0\u6570\u7EC4\u4E2D(\u4E00\u7EF4)\u4E2D</li><li>\u5982\uFF1A[1,[3,[2,4]]] =&gt; [1,2,3,4]</li></ul><h4 id="_2-4-2-\u7F16\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_2-4-2-\u7F16\u7801\u5B9E\u73B0" aria-hidden="true">#</a> 2.4.2 \u7F16\u7801\u5B9E\u73B0</h4><ol><li><p>\u65B9\u6CD5 1: \u4F7F\u7528 \u9012\u5F52 + reduce + concat</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">flatten1</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">prev<span class="token punctuation">,</span> item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> item<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">cItem</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>cItem<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> prev<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token function">flatten1</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> prev<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">65</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7888</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">flatten1</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token comment">// [1, 3, 2, 4, 5, 65, 6, 7888, 8]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div></li><li><p>\u65B9\u6CD5 2: some + concat</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">flatten2</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5148\u521B\u5EFA\u4E00\u4E2A\u603B\u6570\u7EC4</span>
  <span class="token keyword">let</span> newArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token operator">...</span>arr<span class="token punctuation">)</span>
  <span class="token comment">// \u904D\u5386\uFF1A\u53EA\u8981\u6570\u7EC4\u4E2D\u8FD8\u6709\u6570\u7EC4\uFF0C\u5C31\u8FDB\u884C\u5408\u5E76\u5C55\u5F00\u5904\u7406\uFF0C\u76F4\u81F3\u6570\u7EC4\u4E2D\u6CA1\u6709\u6570\u7EC4</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>newArr<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    newArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token operator">...</span>newArr<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> newArr
<span class="token punctuation">}</span>

<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">65</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7888</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">flatten2</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token comment">// [1, 3, 2, 4, 5, 65, 6, 7888, 8]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div></li></ol><h3 id="_2-5-\u6570\u7EC4\u5206\u5757" tabindex="-1"><a class="header-anchor" href="#_2-5-\u6570\u7EC4\u5206\u5757" aria-hidden="true">#</a> 2.5 \u6570\u7EC4\u5206\u5757</h3><h4 id="_2-5-1-api-\u8BF4\u660E" tabindex="-1"><a class="header-anchor" href="#_2-5-1-api-\u8BF4\u660E" aria-hidden="true">#</a> 2.5.1 API \u8BF4\u660E</h4><ul><li><p>\u8BED\u6CD5\uFF1Achunk(array, size)</p></li><li><p>\u529F\u80FD\uFF1A\u5C06\u6570\u7EC4\u62C6\u5206\u4E3A\u591A\u4E2A size \u957F\u5EA6\u7684\u533A\u5757\uFF0C\u6BCF\u4E2A\u533A\u5757\u7EC4\u6210\u5C0F\u6570\u7EC4\uFF0C\u6574\u4F53\u7EC4\u6210\u4E00\u4E2A\u4E8C\u7EF4\u6570\u7EC4</p></li><li><p>\u5982 [1,3,5,6,7,8] \u8C03\u7528 chunk(arr, 4) ====&gt; [[1,3,5,6], [7,8]]</p></li><li><p>\u7F16\u7801\u5B9E\u73B0</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">chunk</span><span class="token punctuation">(</span><span class="token parameter">array<span class="token punctuation">,</span> size</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  size <span class="token operator">=</span> size <span class="token operator">||</span> <span class="token number">1</span>
  <span class="token keyword">const</span> bigArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">let</span> smallArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  array<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>smallArr<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      bigArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>smallArr<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    smallArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
    <span class="token comment">// \u5DE7\u5999\u7684\u7528\u5230\u4E86\u5730\u5740\u5F15\u7528</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>smallArr<span class="token punctuation">.</span>length <span class="token operator">===</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      smallArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> bigArr
<span class="token punctuation">}</span>
<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">chunk</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// [[1, 2, 3, 4], [5, 6, 7, 8]\uFF0C [9, 10], [9, 10]]</span>

<span class="token comment">// \u4E0A\u8FF0\u793A\u4F8B\u6D89\u53CA\u5230\u4E00\u4E2A\u5730\u5740\u5F15\u7528\u7684\u60C5\u51B5\uFF0C\u4F1A\u6709\u4E00\u5B9A\u7684\u7406\u89E3\u4EE3\u4EF7\uFF0C\u53EF\u4EE5\u66F4\u7B80\u5355\u4E00\u70B9\uFF0C\u5982\u4E0B</span>
<span class="token keyword">function</span> <span class="token function">chunk2</span><span class="token punctuation">(</span><span class="token parameter">array<span class="token punctuation">,</span> size</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> outPutArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">const</span> forTime <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>array<span class="token punctuation">.</span>length <span class="token operator">/</span> size<span class="token punctuation">)</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> forTime<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    outPutArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>array<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>i <span class="token operator">*</span> size<span class="token punctuation">,</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> size<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> outPutArr
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">chunk2</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div></li></ul><h3 id="_2-6-\u6570\u7EC4\u53D6\u5DEE\u5F02" tabindex="-1"><a class="header-anchor" href="#_2-6-\u6570\u7EC4\u53D6\u5DEE\u5F02" aria-hidden="true">#</a> 2.6 \u6570\u7EC4\u53D6\u5DEE\u5F02</h3><h4 id="_2-6-1-api-\u8BF4\u660E" tabindex="-1"><a class="header-anchor" href="#_2-6-1-api-\u8BF4\u660E" aria-hidden="true">#</a> 2.6.1 API \u8BF4\u660E</h4><ul><li><p>\u8BED\u6CD5\uFF1Adifference(arr1, arr2)</p></li><li><p>\u529F\u80FD\uFF1A\u5F97\u5230\u5F53\u524D\u6570\u7EC4\u4E2D\u6240\u6709\u4E0D\u5728 arr \u4E2D\u7684\u5143\u7D20\u7EC4\u6210\u7684\u6570\u7EC4(\u4E0D\u6539\u53D8\u539F\u6570\u7EC4)</p></li><li><p>\u4F8B\u5B50\uFF1Adifference([1,3,5,7,8], [5,8]) ===&gt; [1,3,7]</p></li><li><p>\u7F16\u7801\u5B9E\u73B0</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">difference</span><span class="token punctuation">(</span><span class="token parameter">arr1<span class="token punctuation">,</span> arr2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>arr1<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>arr2<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> arr1
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> arr1<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> arr2<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">difference</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// [4, 7]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></li></ul><h3 id="_2-7-\u5220\u9664\u6570\u7EC4\u4E2D\u90E8\u5206\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#_2-7-\u5220\u9664\u6570\u7EC4\u4E2D\u90E8\u5206\u5143\u7D20" aria-hidden="true">#</a> 2.7 \u5220\u9664\u6570\u7EC4\u4E2D\u90E8\u5206\u5143\u7D20</h3><h4 id="_2-7-1-pull-array-values" tabindex="-1"><a class="header-anchor" href="#_2-7-1-pull-array-values" aria-hidden="true">#</a> 2.7.1 pull (array, ...values)</h4><ul><li><p>\u5220\u9664\u539F\u6570\u7EC4\u4E2D\u4E0E value \u76F8\u540C\u7684\u5143\u7D20\uFF0C\u8FD4\u56DE\u6240\u6709\u5220\u9664\u5143\u7D20\u7684\u6570\u7EC4</p></li><li><p>\u8BF4\u660E\uFF1A\u539F\u6570\u7EC4\u53D1\u751F\u4E86\u6539\u53D8</p></li><li><p>\u5982 pull([1,3,5,3,7],2,7,3,7) ====&gt; \u539F\u6570\u7EC4\u53D8\u4E3A [1,5] \u8FD4\u56DE\u503C\u4E3A [3,3,7]</p></li><li><p>\u7F16\u7801\u5B9E\u73B0</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">pull</span><span class="token punctuation">(</span><span class="token parameter">arr1<span class="token punctuation">,</span> <span class="token operator">...</span>values</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>arr1<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">||</span> values<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> arr1<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> element <span class="token operator">=</span> arr1<span class="token punctuation">[</span>index<span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>values<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      arr1<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
      result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span>
      index<span class="token operator">--</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result
<span class="token punctuation">}</span>

<span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">pull</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// [3, 3, 7]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token comment">// [1, 5]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div></li></ul><h4 id="_2-7-2-pullarr-arry-values" tabindex="-1"><a class="header-anchor" href="#_2-7-2-pullarr-arry-values" aria-hidden="true">#</a> 2.7.2 pullArr(arry, values)</h4><ul><li><p>\u529F\u80FD\u4E0E pull \u4E00\u76F4\uFF0C\u53EA\u662F\u53C2\u6570\u53D8\u4E3A\u6570\u7EC4</p></li><li><p>\u5982\uFF1ApullAll([1,3,5,3,7], [2, 7, 3, 7]) ===&gt; \u6570\u7EC4 1 \u53D8\u4E3A[1, 5], \u8FD4\u56DE\u503C\u4E3A[3,3,7]</p></li><li><p>\u7F16\u7801\u5B9E\u73B0</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">pull</span><span class="token punctuation">(</span><span class="token parameter">arr1<span class="token punctuation">,</span> <span class="token operator">...</span>values</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>arr1<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">||</span> values<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> arr1<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> element <span class="token operator">=</span> arr1<span class="token punctuation">[</span>index<span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>values<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      arr1<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
      result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span>
      index<span class="token operator">--</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">pullAll</span><span class="token punctuation">(</span><span class="token parameter">arr1<span class="token punctuation">,</span> values</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>values <span class="token operator">||</span> <span class="token operator">!</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token function">pull</span><span class="token punctuation">(</span>arr1<span class="token punctuation">,</span> <span class="token operator">...</span>values<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">pullAll</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// [3, 3, 7]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token comment">// [1, 5]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div></li></ul><h3 id="_2-8-\u5F97\u5230\u6570\u7EC4\u7684\u90E8\u5206\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#_2-8-\u5F97\u5230\u6570\u7EC4\u7684\u90E8\u5206\u5143\u7D20" aria-hidden="true">#</a> 2.8 \u5F97\u5230\u6570\u7EC4\u7684\u90E8\u5206\u5143\u7D20</h3><h4 id="_2-8-1-drop-array-count" tabindex="-1"><a class="header-anchor" href="#_2-8-1-drop-array-count" aria-hidden="true">#</a> 2.8.1 drop(array, count)</h4><ul><li><p>\u5F97\u5230\u5F53\u524D\u6570\u7EC4\u8FC7\u6EE4\u5DE6\u8FB9 count \u4E2A \u540E\u5269\u4F59\u5143\u7D20\u7EC4\u6210\u7684\u6570\u7EC4</p></li><li><p>\u8BF4\u660E\uFF1A\u4E0D\u6539\u53D8\u5F53\u524D\u6570\u7EC4\uFF0Ccount \u9ED8\u8BA4\u662F 1</p></li><li><p>\u5982\uFF1Adrop([1,3,5,7], 2) =====&gt; [5, 7]</p></li><li><p>\u7F16\u7801\u5B9E\u73B0</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4E24\u79CD\u65B9\u5F0F\u5747\u53EF</span>
<span class="token keyword">function</span> <span class="token function">drop1</span><span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  number <span class="token operator">=</span> number <span class="token operator">||</span> <span class="token number">1</span>
  <span class="token keyword">const</span> newArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> number<span class="token punctuation">;</span> index <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> element <span class="token operator">=</span> arr<span class="token punctuation">[</span>index<span class="token punctuation">]</span>
    newArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> newArr
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">drop</span><span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> number <span class="token operator">=</span> <span class="token number">1</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">||</span> number <span class="token operator">&gt;=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> index <span class="token operator">&gt;=</span> number<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">drop</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// [5,7]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">drop</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// []</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">drop</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// [3,5,7]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div></li></ul><h4 id="_2-8-2-dropright-array-count" tabindex="-1"><a class="header-anchor" href="#_2-8-2-dropright-array-count" aria-hidden="true">#</a> 2.8.2 dropRight(array, count)</h4><ul><li><p>\u5F97\u5230\u5F53\u524D\u6570\u7EC4\u8FC7\u6EE4\u6389\u53F3\u8FB9 count \u4E2A\u540E\u5269\u4F59\u5143\u7D20\u7EC4\u6210\u7684\u6570\u7EC4</p></li><li><p>\u8BF4\u660E\uFF1A\u4E0D\u6539\u53D8\u5F53\u524D\u6570\u7EC4\uFF0Ccount \u9ED8\u8BA4\u662F 1</p></li><li><p>\u5982\uFF1AdropRight([1,3,5,7], 2) ====&gt; [1,3]</p></li><li><p>\u7F16\u7801\u5B9E\u73B0</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">dropRight</span><span class="token punctuation">(</span><span class="token parameter">array<span class="token punctuation">,</span> count <span class="token operator">=</span> <span class="token number">1</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">||</span> count <span class="token operator">&gt;=</span> array<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> array<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> index <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length <span class="token operator">-</span> count<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">dropRight</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// [1,3]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">dropRight</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// []</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">dropRight</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// [1,3,5]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></li></ul><h2 id="_3\u3001\u5BF9\u8C61\u76F8\u5173" tabindex="-1"><a class="header-anchor" href="#_3\u3001\u5BF9\u8C61\u76F8\u5173" aria-hidden="true">#</a> 3\u3001\u5BF9\u8C61\u76F8\u5173</h2><h3 id="_3-1-newinstance-\u81EA\u5B9A\u4E49-new" tabindex="-1"><a class="header-anchor" href="#_3-1-newinstance-\u81EA\u5B9A\u4E49-new" aria-hidden="true">#</a> 3.1 newInstance \uFF08\u81EA\u5B9A\u4E49 new\uFF09</h3><ul><li><p>\u8BED\u6CD5\uFF1AnewInstance(Fn, ...args)</p></li><li><p>\u529F\u80FD\uFF1A\u521B\u5EFA Fn \u6784\u9020\u51FD\u6570\u7684\u5B9E\u4F8B\u5BF9\u8C61</p></li><li><p>\u7F16\u7801\u5B9E\u73B0</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token parameter">Fn<span class="token punctuation">,</span> <span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u7A7A\u7684 object \u5B9E\u4F8B\u5BF9\u8C61 obj, \u4F5C\u4E3A Fn \u7684\u5B9E\u4F8B\u5BF9\u8C61</span>
  <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token comment">// \u5C06 Fn \u7684 prototype \u5C5E\u6027\u503C\u8D4B\u503C\u7ED9 obj \u7684 __proto__ \u5C5E\u6027\u503C</span>
  obj<span class="token punctuation">.</span>__proto__ <span class="token operator">=</span> <span class="token class-name">Fn</span><span class="token punctuation">.</span>prototype
  <span class="token comment">// \u8C03\u7528 Fn, \u6307\u5B9A this \u4E3A obj, \u53C2\u6570\u4E3A args \u5217\u8868</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">Fn</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token punctuation">)</span>
  <span class="token comment">// \u5982\u679C Fn \u8FD4\u56DE\u7684\u662F\u4E00\u4E2A\u5BF9\u8C61\u7C7B\u578B\uFF0C\u90A3\u8FD4\u56DE\u7684\u5C31\u4E0D\u518D\u662F obj, \u800C\u662F Fn\u8FD4\u56DE\u7684\u5BF9\u8C61</span>
  <span class="token comment">// \u5426\u5219\u8FD4\u56DE obj</span>
  <span class="token keyword">return</span> result <span class="token keyword">instanceof</span> <span class="token class-name">Object</span> <span class="token operator">?</span> result <span class="token operator">:</span> obj
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name
  <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age
  <span class="token comment">// return {}</span>
  <span class="token comment">// return []</span>
  <span class="token comment">// return function (){}</span>
  <span class="token comment">// return 1</span>
  <span class="token comment">// return undefined</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&#39;tom&#39;</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span>

<span class="token keyword">const</span> p2 <span class="token operator">=</span> <span class="token function">newInstance</span><span class="token punctuation">(</span>Person<span class="token punctuation">,</span> <span class="token string">&#39;Jack&#39;</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p2<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p2<span class="token punctuation">.</span>constructor<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div></li></ul><h3 id="_3-2-myinstanceof-\u81EA\u5B9A\u4E49-instanceof" tabindex="-1"><a class="header-anchor" href="#_3-2-myinstanceof-\u81EA\u5B9A\u4E49-instanceof" aria-hidden="true">#</a> 3.2 myInstanceOf (\u81EA\u5B9A\u4E49 instanceOf)</h3>`,81),k=s(`<li><p>\u8BED\u6CD5\uFF1AmyInstacenOf(obj, Type)</p></li><li><p>\u529F\u80FD\uFF1A\u5224\u65AD obj \u662F\u5426\u662F Type \u7C7B\u578B\u7684\u5B9E\u4F8B</p></li><li><p>\u5B9E\u73B0\uFF1AType \u7684\u539F\u578B\u5BF9\u8C61\u662F\u5426\u662F obj \u7684\u539F\u578B\u94FE\u4E0A\u7684\u67D0\u4E2A\u5BF9\u8C61\uFF0C\u5982\u679C\u8FD4\u56DE\u662F true, \u5426\u5219\u8FD4\u56DE false</p></li><li><p>\u7F16\u7801\u5B9E\u73B0</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">myInstanceOf</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> Type</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5F97\u5230\u539F\u578B\u5BF9\u8C61</span>
  <span class="token keyword">let</span> protoObj <span class="token operator">=</span> obj<span class="token punctuation">.</span>__proto__
  <span class="token comment">// \u53EA\u8981\u539F\u578B\u5BF9\u8C61\u5B58\u5728</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>protoObj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u539F\u578B\u5BF9\u8C61\u662F Type \u7684\u539F\u578B\u5BF9\u8C61\uFF0C\u8FD4\u56DE true</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>protoObj <span class="token operator">===</span> <span class="token class-name">Type</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u6307\u5B9A\u539F\u578B\u5BF9\u8C61\u7684\u539F\u578B\u5BF9\u8C61</span>
    protoObj <span class="token operator">=</span> protoObj<span class="token punctuation">.</span>__proto__
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name
  <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age
<span class="token punctuation">}</span>
<span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&#39;tom&#39;</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">myInstanceOf</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> Object<span class="token punctuation">)</span><span class="token punctuation">,</span> p <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">)</span> <span class="token comment">// true true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">myInstanceOf</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> Person<span class="token punctuation">)</span><span class="token punctuation">,</span> p <span class="token keyword">instanceof</span> <span class="token class-name">Person</span><span class="token punctuation">)</span> <span class="token comment">// true true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">myInstanceOf</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> Function<span class="token punctuation">)</span><span class="token punctuation">,</span> p <span class="token keyword">instanceof</span> <span class="token class-name">Function</span><span class="token punctuation">)</span> <span class="token comment">// false false</span>

<span class="token keyword">function</span> <span class="token function">Parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">const</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// \u6CE8\u610F\u4EE5\u4E0B\u5173\u7CFB</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p1<span class="token punctuation">.</span>__proto__ <span class="token operator">===</span> <span class="token class-name">Parent</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Parent</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>__proto__ <span class="token operator">===</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>__proto__ <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p1<span class="token punctuation">.</span>constructor <span class="token operator">===</span> Parent<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Parent</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>constructor <span class="token operator">===</span> Parent<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Parent</span><span class="token punctuation">.</span>constructor <span class="token operator">===</span> Function<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Function</span><span class="token punctuation">.</span>constructor <span class="token operator">===</span> Function<span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Parent<span class="token punctuation">.</span>__proto__ <span class="token operator">===</span> <span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>__proto__ <span class="token operator">===</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>__proto__ <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div></li><li><p>\u5173\u7CFB\u56FE\u5982\u4E0B</p><p><img src="https://segmentfault.com/img/remote/1460000021232137/view" alt="image"></p></li>`,5),b=a("\u53C2\u8003\u6587\u7AE0\uFF1A"),m={href:"https://segmentfault.com/a/1190000021232132",target:"_blank",rel:"noopener noreferrer"},d=a("\u4E00\u5F20\u56FE\u641E\u5B9A JS \u539F\u578B&\u539F\u578B\u94FE"),f=s(`<h3 id="_3-3-\u5408\u5E76\u591A\u4E2A\u5BF9\u8C61-mergeobject" tabindex="-1"><a class="header-anchor" href="#_3-3-\u5408\u5E76\u591A\u4E2A\u5BF9\u8C61-mergeobject" aria-hidden="true">#</a> 3.3 \u5408\u5E76\u591A\u4E2A\u5BF9\u8C61 mergeObject</h3><ul><li><p>\u8BED\u6CD5\uFF1AmergeObject(...objs)</p></li><li><p>\u529F\u80FD\uFF1A\u5408\u5E76\u591A\u4E2A\u5BF9\u8C61\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5408\u5E76\u540E\u7684\u5BF9\u8C61(\u4E0D\u6539\u53D8\u539F\u5BF9\u8C61)</p></li><li><p>\u4F8B\u5B50</p><ul><li>obj1: { a: [{ x: 2 }, { y: 4 }], b: 1}</li><li>obj2: { a: { z: 3}, b: [2, 3], c: &#39;foo&#39;}</li><li>\u5408\u5E76\u540E\uFF1A{ a: [ { x: 2 }, { y: 4 }, { z: 3 } ], b: [ 1, 2, 3 ], c: &#39;foo&#39; }</li></ul></li><li><p>\u6E90\u7801\u5B9E\u73B0\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">mergeObject</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>objs</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  objs<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5982\u679C result \u8FD8\u6CA1\u6709 key \u5C5E\u6027\u503C</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>result<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        result<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> item<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5426\u5219\u5408\u5E76\u5C5E\u6027</span>
        result<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>result<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span> item<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> result
<span class="token punctuation">}</span>

<span class="token keyword">const</span> object <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">4</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token literal-property property">d</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">22</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> other <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">z</span><span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">d</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">33</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">mergeObject</span><span class="token punctuation">(</span>object<span class="token punctuation">,</span> other<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div></li></ul><h3 id="_3-4-\u5BF9\u8C61-\u6570\u7EC4\u62F7\u8D1D" tabindex="-1"><a class="header-anchor" href="#_3-4-\u5BF9\u8C61-\u6570\u7EC4\u62F7\u8D1D" aria-hidden="true">#</a> 3.4 \u5BF9\u8C61/\u6570\u7EC4\u62F7\u8D1D</h3><h4 id="_3-4-1-\u533A\u5206\u6D45\u62F7\u8D1D\u4E0E\u6DF1\u62F7\u8D1D" tabindex="-1"><a class="header-anchor" href="#_3-4-1-\u533A\u5206\u6D45\u62F7\u8D1D\u4E0E\u6DF1\u62F7\u8D1D" aria-hidden="true">#</a> 3.4.1 \u533A\u5206\u6D45\u62F7\u8D1D\u4E0E\u6DF1\u62F7\u8D1D</h4><ul><li>\u7EAF\u8BED\u8A00\u8868\u8FBE <ul><li>\u6D45\u62F7\u8D1D\uFF1A\u53EA\u662F\u590D\u5236\u4E86 \u5BF9\u8C61\u5C5E\u6027\u6216\u8005\u6570\u7EC4\u5143\u7D20\u672C\u8EAB\uFF08\u53EA\u662F\u5F15\u7528\u5730\u5740\u503C\uFF09</li><li>\u6DF1\u62F7\u8D1D\uFF1A\u4E0D\u4EC5\u590D\u5236\u4E86\u5BF9\u8C61\u5C5E\u6027\u6216\u6570\u7EC4\u5143\u7D20\u672C\u8EAB\uFF0C\u8FD8\u590D\u5236\u4E86\u6307\u5411\u7684\u5BF9\u8C61\uFF08\u4F7F\u7528\u9012\u5F52\uFF09</li></ul></li><li>\u4E3E\u4F8B\u8BF4\u660E\uFF1A\u62F7\u8D1D persons \u6570\u7EC4\uFF08\u591A\u4E2A\u4EBA\u5BF9\u8C61\u7684\u6570\u7EC4\uFF09 <ul><li>\u6D45\u62F7\u8D1D\uFF1A\u53EA\u662F\u62F7\u8D1D\u4E86\u6BCF\u4E2A person \u5BF9\u8C61\u7684\u5F15\u7528\u5730\u5740\u503C\uFF0C\u6BCF\u4E2A person \u5BF9\u8C61\u53EA\u6709\u4E00\u4EFD</li><li>\u6DF1\u62F7\u8D1D\uFF1A\u6BCF\u4E2A person \u5BF9\u8C61\u4E5F\u88AB\u590D\u5236\u4E86\u4E00\u4EFD\u65B0\u7684</li></ul></li></ul><h4 id="_3-4-2-\u5B9E\u73B0\u6D45\u62F7\u8D1D-clone" tabindex="-1"><a class="header-anchor" href="#_3-4-2-\u5B9E\u73B0\u6D45\u62F7\u8D1D-clone" aria-hidden="true">#</a> 3.4.2 \u5B9E\u73B0\u6D45\u62F7\u8D1D clone</h4><ol><li><p>\u5B9E\u73B0\u65B9\u5F0F 1\uFF1A\u4F7F\u7528 ES6 \u8BED\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5B9E\u73B0\u6D45\u62F7\u8D1D\u65B9\u5F0F1</span>
<span class="token keyword">function</span> <span class="token function">clone1</span><span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5982\u679C\u662F\u5BF9\u8C61\uFF08\u4E0D\u662F\u51FD\u6570\uFF0C\u4E5F\u5C31\u662F\u53EF\u80FD\u662Fobject\u5BF9\u8C61\u6216\u8005\u6570\u7EC4\uFF09</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> target <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">//</span>
      <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token operator">...</span>target<span class="token punctuation">]</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token operator">...</span>target <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u57FA\u672C\u7C7B\u578B\u6216\u8005\u51FD\u6570\uFF0C\u76F4\u63A5\u8FD4\u56DE</span>
  <span class="token keyword">return</span> target
<span class="token punctuation">}</span>

<span class="token keyword">const</span> obj1 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token string">&#39;abc&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">m</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
<span class="token keyword">const</span> obj2 <span class="token operator">=</span> <span class="token function">clone1</span><span class="token punctuation">(</span>obj1<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2<span class="token punctuation">,</span> obj2 <span class="token operator">===</span> obj1<span class="token punctuation">,</span> obj2<span class="token punctuation">.</span>x <span class="token operator">===</span> obj1<span class="token punctuation">.</span>x<span class="token punctuation">,</span> obj2<span class="token punctuation">.</span>y <span class="token operator">===</span> obj1<span class="token punctuation">.</span>y<span class="token punctuation">)</span>

<span class="token keyword">const</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;abc&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">m</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> arr2 <span class="token operator">=</span> <span class="token function">clone1</span><span class="token punctuation">(</span>arr1<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr2<span class="token punctuation">,</span> arr2 <span class="token operator">===</span> arr1<span class="token punctuation">,</span> arr2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">===</span> arr1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> arr2<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">===</span> arr1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment">// \u5BF9\u514B\u9686\u540E\u7684\u6570\u636E\u8FDB\u884C\u6DF1\u5C42\u6B21\u5C5E\u6027\u7684\u6539\u53D8\uFF0C\u4F1A\u5F71\u54CD\u539F\u6765\u7684\u6570\u636E</span>
obj2<span class="token punctuation">.</span>y<span class="token punctuation">.</span>m <span class="token operator">=</span> <span class="token string">&#39;2222&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj1<span class="token punctuation">.</span>y<span class="token punctuation">.</span>m<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div></li><li><p>\u5B9E\u73B0\u65B9\u5F0F 2\uFF1A\u4F7F\u7528 ES5 \u8BED\u6CD5\uFF0C for...in</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5B9E\u73B0\u6DF1\u62F7\u8D1D\u65B9\u5F0F2</span>
<span class="token comment">// \u5229\u7528 ES5\u8BED\u6CD5\uFF0Cfor...in</span>
<span class="token keyword">function</span> <span class="token function">clone2</span><span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5982\u679C\u662F\u5BF9\u8C61\uFF08\u4E0D\u662F\u51FD\u6570\uFF0C\u4E5F\u5C31\u662F\u53EF\u80FD\u662Fobject\u5BF9\u8C61\u6216\u8005\u6570\u7EC4\uFF09</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> target <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> cloneTarget <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cloneTarget<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> target<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> cloneTarget
  <span class="token punctuation">}</span>
  <span class="token comment">// \u57FA\u672C\u7C7B\u578B\u6216\u8005\u51FD\u6570\uFF0C\u76F4\u63A5\u8FD4\u56DE</span>
  <span class="token keyword">return</span> target
<span class="token punctuation">}</span>

<span class="token keyword">const</span> obj1 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token string">&#39;abc&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">m</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
<span class="token keyword">const</span> obj2 <span class="token operator">=</span> <span class="token function">clone2</span><span class="token punctuation">(</span>obj1<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2<span class="token punctuation">,</span> obj2 <span class="token operator">===</span> obj1<span class="token punctuation">,</span> obj2<span class="token punctuation">.</span>x <span class="token operator">===</span> obj1<span class="token punctuation">.</span>x<span class="token punctuation">,</span> obj2<span class="token punctuation">.</span>y <span class="token operator">===</span> obj1<span class="token punctuation">.</span>y<span class="token punctuation">)</span>

<span class="token keyword">const</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;abc&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">m</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> arr2 <span class="token operator">=</span> <span class="token function">clone2</span><span class="token punctuation">(</span>arr1<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr2<span class="token punctuation">,</span> arr2 <span class="token operator">===</span> arr1<span class="token punctuation">,</span> arr2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">===</span> arr1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> arr2<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">===</span> arr1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment">// \u5BF9\u514B\u9686\u540E\u7684\u6570\u636E\u8FDB\u884C\u6DF1\u5C42\u6B21\u5C5E\u6027\u7684\u6539\u53D8\uFF0C\u4F1A\u5F71\u54CD\u539F\u6765\u7684\u6570\u636E</span>
obj2<span class="token punctuation">.</span>y<span class="token punctuation">.</span>m <span class="token operator">=</span> <span class="token string">&#39;2222&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj1<span class="token punctuation">.</span>y<span class="token punctuation">.</span>m<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div></li></ol><h4 id="_3-4-3-\u5B9E\u73B0\u6DF1\u62F7\u8D1D-deepclone" tabindex="-1"><a class="header-anchor" href="#_3-4-3-\u5B9E\u73B0\u6DF1\u62F7\u8D1D-deepclone" aria-hidden="true">#</a> 3.4.3 \u5B9E\u73B0\u6DF1\u62F7\u8D1D deepClone</h4><ol><li><p>\u65B9\u6CD5\u4E00\uFF1A\u5927\u4F17\u4E5E\u4E10\u7248</p><ul><li>\u95EE\u9898 1\uFF1A\u51FD\u6570\u5C5E\u6027\u4E22\u5931\uFF08JSON \u4E0D\u652F\u6301\u8F6C\u6362\u51FD\u6570\uFF09</li><li>\u95EE\u9898 2\uFF1A\u5FAA\u73AF\u5F15\u7528\u4F1A\u51FA\u9519</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">deepClone1</span><span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u901A\u8FC7\u6570\u636E\u521B\u5EFA JSON \u683C\u5F0F\u7684\u5B57\u7B26\u4E32</span>
  <span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> obj1 <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;e&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;f&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;g&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">h</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">i</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// JSON \u4E0D\u80FD\u8F6C\u6362\u65B9\u6CD5\uFF0C\u4F7F\u7528\u8FD9\u79CD\u65B9\u5F0F\u514B\u9686\u540E\u4F1A\u4E22\u5931</span>
  <span class="token function-variable function">d</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
obj1<span class="token punctuation">.</span>b<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>obj1<span class="token punctuation">.</span>c<span class="token punctuation">)</span>
<span class="token comment">// obj1.c.j = obj1.b // \u8FD9\u91CC\u5C5E\u6027\u8FDB\u884C\u4E86\u5FAA\u73AF\u5F15\u7528\uFF0C\u4F1A\u62A5\u9519</span>
<span class="token keyword">const</span> obj2 <span class="token operator">=</span> <span class="token function">deepClone1</span><span class="token punctuation">(</span>obj1<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2<span class="token punctuation">)</span>
<span class="token comment">// console.log(obj2, obj2.c === obj1.c, obj2.d === obj1.d)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div></li><li><p>\u65B9\u6CD5\u4E8C\uFF1A\u9762\u8BD5\u57FA\u7840\u7248</p><ul><li><p>\u89E3\u51B3\u95EE\u9898 1\uFF1A\u51FD\u6570\u5C5E\u6027\u8FD8\u6CA1\u4E22\u5931</p></li><li><p>\u7F16\u7801\u5B9E\u73B0</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">deepClone2</span><span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> target <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> cloneTarget <span class="token operator">=</span> target <span class="token keyword">instanceof</span> <span class="token class-name">Array</span> <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cloneTarget<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deepClone2</span><span class="token punctuation">(</span>target<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> cloneTarget
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> target
<span class="token punctuation">}</span>

<span class="token keyword">const</span> obj1 <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;e&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;f&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;g&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">h</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">i</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">d</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
obj1<span class="token punctuation">.</span>b<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>obj1<span class="token punctuation">.</span>c<span class="token punctuation">)</span>
<span class="token comment">// obj1.c.j = obj1.b // \u8FD9\u91CC\u5C5E\u6027\u8FDB\u884C\u4E86\u5FAA\u73AF\u5F15\u7528\uFF0C\u4F1A\u62A5\u9519</span>
<span class="token keyword">const</span> obj2 <span class="token operator">=</span> <span class="token function">deepClone2</span><span class="token punctuation">(</span>obj1<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2<span class="token punctuation">.</span>c <span class="token operator">===</span> obj1<span class="token punctuation">.</span>c<span class="token punctuation">,</span> obj2<span class="token punctuation">.</span>d <span class="token operator">===</span> obj1<span class="token punctuation">.</span>d<span class="token punctuation">)</span> <span class="token comment">// false true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div></li></ul></li><li><p>\u65B9\u6CD5\u4E09\uFF1A\u9762\u8BD5\u52A0\u5F3A\u7248</p><ul><li><p>\u89E3\u51B3\u95EE\u9898 2\uFF1A\u5FAA\u73AF\u5F15\u7528\u6B63\u5E38</p><p>\u6CE8\uFF1A\u65B9\u6CD5\u4E8C\u4E2D\u7684\u6DF1\u62F7\u8D1D\u4E4B\u6240\u4EE5\u5728\u5FAA\u73AF\u5F15\u7528\u95EE\u9898\u51FA\u73B0\u9519\u8BEF\uFF0C\u539F\u56E0\u5728\u4E8E\u904D\u5386 \u5C5E\u6027\u65F6\u5019\uFF0C\u51FA\u73B0\u4E86\u91CD\u590D\u8C03\u7528\uFF0C\u5BFC\u81F4\u4E00\u76F4 for \u5FAA\u73AF\u904D\u5386\u4E0B\u53BB\uFF0C\u73B0\u5728\u52A0\u4E00\u4E2A\u7F13\u5B58\u4E2D\u95F4\u503C\uFF0C\u5982\u679C\u4E4B\u524D\u904D\u5386\u8FC7\u5C31\u76F4\u63A5\u8FD4\u56DE\u3002</p></li><li><p>\u7F16\u7801\u5B9E\u73B0</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">deepClone3</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> target <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4ECE\u5BB9\u5668\u4E2D\u8BFB\u53D6\u514B\u9686\u5BF9\u8C61</span>
    <span class="token keyword">let</span> cloneTarget <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
    <span class="token comment">// \u5982\u679C\u5B58\u5728\uFF0C\u8FD4\u56DE\u524D\u9762\u7F13\u5B58\u7684\u514B\u9686\u5BF9\u8C61</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>cloneTarget<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> cloneTarget
    <span class="token punctuation">}</span>
    <span class="token comment">// \u521B\u5EFA\u514B\u9686\u5BF9\u8C61(\u53EF\u80FD\u662F{}\u6216\u8005\u662F[])</span>
    cloneTarget <span class="token operator">=</span> target <span class="token keyword">instanceof</span> <span class="token class-name">Array</span> <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token comment">// \u7F13\u5B58\u5230map\u4E2D</span>
    map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> cloneTarget<span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u9012\u5F52\u8C03\u7528\uFF0C\u6DF1\u5EA6\u514B\u9686\u5BF9\u8C61\uFF0C\u4E14\u4F20\u5165\u7F13\u5B58\u5BB9\u5668map</span>
        cloneTarget<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deepClone3</span><span class="token punctuation">(</span>target<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span> map<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> cloneTarget
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> target
<span class="token punctuation">}</span>

<span class="token keyword">const</span> obj1 <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;e&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;f&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;g&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">h</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">i</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">d</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
obj1<span class="token punctuation">.</span>b<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>obj1<span class="token punctuation">.</span>c<span class="token punctuation">)</span>
obj1<span class="token punctuation">.</span>c<span class="token punctuation">.</span>j <span class="token operator">=</span> obj1<span class="token punctuation">.</span>b <span class="token comment">// \u8FD9\u91CC\u5C5E\u6027\u8FDB\u884C\u4E86\u5FAA\u73AF\u5F15\u7528</span>
<span class="token keyword">const</span> obj2 <span class="token operator">=</span> <span class="token function">deepClone3</span><span class="token punctuation">(</span>obj1<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2<span class="token punctuation">.</span>c <span class="token operator">===</span> obj1<span class="token punctuation">.</span>c<span class="token punctuation">,</span> obj2<span class="token punctuation">.</span>d <span class="token operator">===</span> obj1<span class="token punctuation">.</span>d<span class="token punctuation">)</span> <span class="token comment">// false true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div></li></ul></li><li><p>\u65B9\u6CD5\u56DB\uFF1A\u6DF1\u62F7\u8D1D\u9762\u8BD5\u52A0\u5F3A\u7248\u672C 2\uFF08\u4F18\u5316\u904D\u5386\u6027\u80FD\uFF09</p><ul><li><p>\u6570\u7EC4\uFF1Awhile|for|forEach \u4F18\u4E8E for...in | keys &amp;&amp; froEach</p></li><li><p>\u5BF9\u8C61\uFF1Afor...in \u4E0E keys()&amp;forEach() \u5DEE\u4E0D\u591A</p></li><li><p>\u7F16\u7801\u5B9E\u73B0</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">deepClone4</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> target <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4ECE\u5BB9\u5668\u4E2D\u8BFB\u53D6\u514B\u9686\u5BF9\u8C61</span>
    <span class="token keyword">let</span> cloneTarget <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
    <span class="token comment">// \u5982\u679C\u5B58\u5728\uFF0C\u8FD4\u56DE\u524D\u9762\u7F13\u5B58\u7684\u514B\u9686\u5BF9\u8C61</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>cloneTarget<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> cloneTarget
    <span class="token punctuation">}</span>
    <span class="token comment">// \u521B\u5EFA\u514B\u9686\u5BF9\u8C61(\u53EF\u80FD\u662F[]\u6216\u8005{})</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      cloneTarget <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
      <span class="token comment">// \u7F13\u5B58\u5230map\u4E2D</span>
      map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> cloneTarget<span class="token punctuation">)</span>
      target<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        cloneTarget<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deepClone4</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> map<span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      cloneTarget <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
      <span class="token comment">// \u7F13\u5B58\u5230 map\u4E2D</span>
      map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> cloneTarget<span class="token punctuation">)</span>
      Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        cloneTarget<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deepClone4</span><span class="token punctuation">(</span>target<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span> map<span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> cloneTarget
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> target
<span class="token punctuation">}</span>

<span class="token keyword">const</span> obj1 <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;e&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;f&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;g&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">h</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">i</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">d</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
obj1<span class="token punctuation">.</span>b<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>obj1<span class="token punctuation">.</span>c<span class="token punctuation">)</span>
obj1<span class="token punctuation">.</span>c<span class="token punctuation">.</span>j <span class="token operator">=</span> obj1<span class="token punctuation">.</span>b <span class="token comment">// \u8FD9\u91CC\u5C5E\u6027\u8FDB\u884C\u4E86\u5FAA\u73AF\u5F15\u7528</span>
<span class="token keyword">const</span> obj2 <span class="token operator">=</span> <span class="token function">deepClone4</span><span class="token punctuation">(</span>obj1<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2<span class="token punctuation">.</span>c <span class="token operator">===</span> obj1<span class="token punctuation">.</span>c<span class="token punctuation">,</span> obj2<span class="token punctuation">.</span>d <span class="token operator">===</span> obj1<span class="token punctuation">.</span>d<span class="token punctuation">)</span> <span class="token comment">// false true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div></li></ul></li></ol><h2 id="_4\u3001\u5B57\u7B26\u4E32\u76F8\u5173" tabindex="-1"><a class="header-anchor" href="#_4\u3001\u5B57\u7B26\u4E32\u76F8\u5173" aria-hidden="true">#</a> 4\u3001\u5B57\u7B26\u4E32\u76F8\u5173</h2><h3 id="_4-1-\u5B57\u7B26\u4E32\u5012\u5E8F-reversestring-str" tabindex="-1"><a class="header-anchor" href="#_4-1-\u5B57\u7B26\u4E32\u5012\u5E8F-reversestring-str" aria-hidden="true">#</a> 4.1 \u5B57\u7B26\u4E32\u5012\u5E8F\uFF1AreverseString(str)</h3><ul><li><p>\u8BED\u6CD5\uFF1AreverseString(str)</p></li><li><p>\u529F\u80FD\uFF1A\u751F\u6210\u4E00\u4E2A\u5012\u5E8F\u7684\u5B57\u7B26\u4E32</p></li><li><p>\u7F16\u7801\u5B9E\u73B0</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">reverseString</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// return str.split(&#39;&#39;).reverse().join(&#39;&#39;)</span>
  <span class="token comment">// return [...str].reverse().join(&#39;&#39;)</span>
  <span class="token keyword">return</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> string <span class="token operator">=</span> <span class="token string">&#39;abcdefghijklmnopqrstuvwxyz&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">reverseString</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></li></ul><h3 id="_4-2-\u5B57\u7B26\u4E32\u662F\u5426\u56DE\u6587-palindrome-str" tabindex="-1"><a class="header-anchor" href="#_4-2-\u5B57\u7B26\u4E32\u662F\u5426\u56DE\u6587-palindrome-str" aria-hidden="true">#</a> 4.2 \u5B57\u7B26\u4E32\u662F\u5426\u56DE\u6587\uFF1Apalindrome(str)</h3><ul><li><p>\u8BED\u6CD5: palindrome(str)</p></li><li><p>\u529F\u80FD\uFF1A\u5982\u679C\u7ED9\u5B9A\u7684\u5B57\u7B26\u4E32\u662F\u56DE\u6587\uFF0C\u5219\u8FD4\u56DE true\uFF0C\u5426\u5219\u8FD4\u56DE false</p><ul><li>\u6CE8\u610F\uFF1A\u56DE\u6587\uFF0C\u82F1\u6587 palindrome\uFF0C\u6307\u4E00\u4E2A\u987A\u7740\u8BFB\u548C\u53CD\u8FC7\u6765\u8BFB\u90FD\u4E00\u6837\u7684\u5B57\u7B26\u4E32\uFF0C\u6BD4\u5982 madam\u3001\u6211\u7231\u6211</li></ul></li><li><p>\u7F16\u7801\u5B9E\u73B0\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">reverseString</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// return str.split(&#39;&#39;).reverse().join(&#39;&#39;)</span>
  <span class="token comment">// return [...str].reverse().join(&#39;&#39;)</span>
  <span class="token keyword">return</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">palindrome</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> str <span class="token operator">===</span> <span class="token function">reverseString</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">palindrome</span><span class="token punctuation">(</span><span class="token string">&#39;abcb&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">palindrome</span><span class="token punctuation">(</span><span class="token string">&#39;abcba&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></li></ul><h3 id="_4-3-\u622A\u53D6\u5B57\u7B26\u4E32-truncate-str-num" tabindex="-1"><a class="header-anchor" href="#_4-3-\u622A\u53D6\u5B57\u7B26\u4E32-truncate-str-num" aria-hidden="true">#</a> 4.3 \u622A\u53D6\u5B57\u7B26\u4E32 truncate(str, num)</h3><ul><li><p>\u8BED\u6CD5\uFF1Atruncate(str, num)</p></li><li><p>\u529F\u80FD\uFF1A\u5982\u679C\u5B57\u7B26\u4E32\u7684\u957F\u5EA6\u8D85\u8FC7\u4E86 num, \u622A\u53D6\u524D\u9762 num \u957F\u5EA6\u90E8\u5206\uFF0C\u5E76\u4EE5 ... \u7ED3\u675F</p></li><li><p>\u7F16\u7801\u5B9E\u73B0</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">truncate</span><span class="token punctuation">(</span><span class="token parameter">str<span class="token punctuation">,</span> num</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> str<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> num <span class="token operator">?</span> str<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> num<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;...&#39;</span> <span class="token operator">:</span> str
<span class="token punctuation">}</span>
<span class="token keyword">const</span> string <span class="token operator">=</span> <span class="token string">&#39;abcdefg&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">truncate</span><span class="token punctuation">(</span>string<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// abcde...</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">truncate</span><span class="token punctuation">(</span>string<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// abcdefg</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li></ul><h2 id="_5\u3001\u624B\u5199-dom-\u4E8B\u4EF6\u76D1\u542C-\u5E26\u59D4\u6258" tabindex="-1"><a class="header-anchor" href="#_5\u3001\u624B\u5199-dom-\u4E8B\u4EF6\u76D1\u542C-\u5E26\u59D4\u6258" aria-hidden="true">#</a> 5\u3001\u624B\u5199 DOM \u4E8B\u4EF6\u76D1\u542C(\u5E26\u59D4\u6258)</h2><h3 id="_5-1-\u7406\u89E3\u4E8B\u4EF6\u5192\u6CE1\u4E0E\u4E8B\u4EF6\u59D4\u6258" tabindex="-1"><a class="header-anchor" href="#_5-1-\u7406\u89E3\u4E8B\u4EF6\u5192\u6CE1\u4E0E\u4E8B\u4EF6\u59D4\u6258" aria-hidden="true">#</a> 5.1 \u7406\u89E3\u4E8B\u4EF6\u5192\u6CE1\u4E0E\u4E8B\u4EF6\u59D4\u6258</h3><h4 id="_5-1-1-\u4E8B\u4EF6\u5192\u6CE1" tabindex="-1"><a class="header-anchor" href="#_5-1-1-\u4E8B\u4EF6\u5192\u6CE1" aria-hidden="true">#</a> 5.1.1 \u4E8B\u4EF6\u5192\u6CE1</h4><ul><li><p>\u57FA\u4E8E DOM \u6811\u5F62\u7ED3\u6784</p></li><li><p>\u4E8B\u4EF6\u5728\u76EE\u6807\u5143\u7D20\u4E0A\u5904\u7406\u540E\uFF0C\u4F1A\u7531\u5185\u5411\u5916\u9010\u5C42\u4F20\u9012</p></li><li><p>\u5E94\u7528\u573A\u666F\uFF1A\u4E8B\u4EF6\u4EE3\u7406\u3001\u59D4\u6258\u3001\u59D4\u6D3E</p></li><li><p>\u56FE\u89E3?</p><img src="https://zxfjd3g.github.io/atguigu_utils-docs/assets/img/image-20201215141059095.a3dce0aa.png" align="left"></li></ul><h4 id="_5-1-2-\u4E8B\u4EF6\u59D4\u6258" tabindex="-1"><a class="header-anchor" href="#_5-1-2-\u4E8B\u4EF6\u59D4\u6258" aria-hidden="true">#</a> 5.1.2 \u4E8B\u4EF6\u59D4\u6258</h4><ul><li>\u5C06\u591A\u4E2A\u5B50\u5143\u7D20\u7684\u540C\u7C7B\u4E8B\u4EF6\u76D1\u542C\u59D4\u6258\u7ED9\uFF08\u7ED1\u5B9A\u5728\uFF09\u5171\u540C\u7684\u4E00\u4E2A\u7236\u7EC4\u4EF6\u4E0A</li><li>\u597D\u5904 <ul><li>\u51CF\u5C11\u5185\u5B58\u5360\u7528\uFF08\u4E8B\u4EF6\u76D1\u542C\u56DE\u8C03\u4ECE n \u53D8\u4E3A 1\uFF09</li><li>\u52A8\u6001\u6DFB\u52A0\u7684\u5185\u90E8\u5143\u7D20\u4E5F\u80FD\u54CD\u5E94</li></ul></li></ul><h3 id="_5-2-api-\u76F8\u5173" tabindex="-1"><a class="header-anchor" href="#_5-2-api-\u76F8\u5173" aria-hidden="true">#</a> 5.2 API \u76F8\u5173</h3><ul><li>\u8BED\u6CD5\uFF1AaddEventListener(element, type, fn ,selector)</li><li>\u8BF4\u660E\uFF1A\u5982\u679C selector \u6CA1\u6709\uFF0C\u76F4\u63A5\u7ED9 element \u7ED1\u5B9A\u4E8B\u4EF6\uFF0C\u5982\u679C selector \u6709\uFF0C\u5C06 selector \u5BF9\u5E94\u7684\u591A\u4E2A\u5143\u7D20\u7684\u4E8B\u4EF6\u59D4\u6258\u7ED9\u7236\u5143\u7D20 element</li></ul><h3 id="_5-3-\u7F16\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_5-3-\u7F16\u7801\u5B9E\u73B0" aria-hidden="true">#</a> 5.3 \u7F16\u7801\u5B9E\u73B0</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> type<span class="token punctuation">,</span> fn<span class="token punctuation">,</span> selector</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> el <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5982\u679C\u6CA1\u6709\u6307\u5B9A selector \u666E\u901A\u7684\u4E8B\u4EF6\u7ED1\u5B9A</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>selector<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    element<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> fn<span class="token punctuation">)</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  el<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5F97\u5230\u771F\u6B63\u53D1\u751F\u4E8B\u4EF6\u7684\u76EE\u6807\u5143\u7D20</span>
    <span class="token keyword">const</span> target <span class="token operator">=</span> event<span class="token punctuation">.</span>target
    <span class="token comment">// \u5982\u679C\u4E0E\u9009\u62E9\u5668\u5339\u914D</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span>selector<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u8C03\u7528\u5904\u7406\u4E8B\u4EF6\u7684\u56DE\u8C03fn, \u5E76\u6307\u5B9Athis\u4E3A\u76EE\u6807\u5143\u7D20, \u53C2\u6570\u4E3Aevent</span>
      <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> event<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">addEventListener</span><span class="token punctuation">(</span>
  <span class="token string">&#39;#ul&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span>
  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>innerHTML<span class="token punctuation">,</span> event<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token string">&#39;li&#39;</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h2 id="_6\u3001\u624B\u5199\u4E8B\u4EF6\u603B\u7EBF" tabindex="-1"><a class="header-anchor" href="#_6\u3001\u624B\u5199\u4E8B\u4EF6\u603B\u7EBF" aria-hidden="true">#</a> 6\u3001\u624B\u5199\u4E8B\u4EF6\u603B\u7EBF</h2><h3 id="_6-1-api-\u8BF4\u660E" tabindex="-1"><a class="header-anchor" href="#_6-1-api-\u8BF4\u660E" aria-hidden="true">#</a> 6.1 API \u8BF4\u660E</h3><ol><li>eventBus\uFF1A\u5305\u542B\u6240\u6709\u529F\u80FD\u7684\u4E8B\u4EF6\u603B\u7EBF\u5BF9\u8C61</li><li>eventBus.on(eventName, listener)\uFF1A\u76D1\u542C\u4E8B\u4EF6\u76D1\u542C</li><li>eventBus.emit(eventName, data): \u5206\u53D1\u4E8B\u4EF6</li><li>eventBus.off(eventName)\uFF1A\u89E3\u7ED1\u6307\u5B9A\u4E8B\u4EF6\u540D\u7684\u4E8B\u4EF6\u76D1\u542C\uFF0C\u5982\u679C\u6CA1\u6709\u6307\u5B9A\u89E3\u7ED1\u6240\u6709</li></ol><h3 id="_6-2-\u7F16\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_6-2-\u7F16\u7801\u5B9E\u73B0" aria-hidden="true">#</a> 6.2 \u7F16\u7801\u5B9E\u73B0</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> eventBus <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">callbacks</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

eventBus<span class="token punctuation">.</span><span class="token function-variable function">on</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">type<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>callbacks<span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>callbacks<span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>callbacks<span class="token punctuation">[</span>type<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>callback<span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5206\u53D1\u4E8B\u4EF6</span>
eventBus<span class="token punctuation">.</span><span class="token function-variable function">emit</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">type<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> callbacks <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>callbacks<span class="token punctuation">[</span>type<span class="token punctuation">]</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>callbacks <span class="token operator">&amp;&amp;</span> callbacks<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    callbacks<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">callback</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u79FB\u9664\u4E8B\u4EF6\u76D1\u542C</span>
eventBus<span class="token punctuation">.</span><span class="token function-variable function">off</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">eventName</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>eventName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//  \u5982\u679C\u79FB\u9664\u4E8B\u4EF6\u7C7B\u578B\u6709\u503C\uFF0C\u8868\u793A\u79FB\u9664\u67D0\u79CD\u7C7B\u578B</span>
    <span class="token keyword">delete</span> <span class="token keyword">this</span><span class="token punctuation">.</span>callbacks<span class="token punctuation">[</span>eventName<span class="token punctuation">]</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u6CA1\u6709\u503C\uFF0C\u8868\u793A\u79FB\u9664\u6240\u6709</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>callbacks <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

eventBus<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;login&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;add&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
eventBus<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;login&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;login2&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
eventBus<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;logout&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;logout&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  eventBus<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;login&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u6211\u662F\u7528\u6237\u540D\u8FD8\u6709\u5BC6\u7801&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span>

<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  eventBus<span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span><span class="token string">&#39;login&#39;</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u5DF2\u7ECF\u53D6\u6D88\u76D1\u542Clogin\u4E8B\u4EF6\u4E86\uFF0C\u518D\u89E6\u53D1login\uFF0C\u5C31\u65E0\u6548\u4E86&#39;</span><span class="token punctuation">)</span>
  eventBus<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;login&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">4000</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br></div></div><h2 id="_7\u3001\u624B\u5199\u6D88\u606F\u8BA2\u9605\u4E0E\u53D1\u5E03" tabindex="-1"><a class="header-anchor" href="#_7\u3001\u624B\u5199\u6D88\u606F\u8BA2\u9605\u4E0E\u53D1\u5E03" aria-hidden="true">#</a> 7\u3001\u624B\u5199\u6D88\u606F\u8BA2\u9605\u4E0E\u53D1\u5E03</h2><h3 id="_7-1-api-\u8BF4\u660E" tabindex="-1"><a class="header-anchor" href="#_7-1-api-\u8BF4\u660E" aria-hidden="true">#</a> 7.1 API \u8BF4\u660E</h3><ol><li>PubSub\uFF1A\u5305\u542B\u6240\u6709\u529F\u80FD\u7684\u8BA2\u9605/\u53D1\u5E03\u6D88\u606F\u7684\u7BA1\u7406\u8005</li><li>PubSub.subscribe(msg, subscriber)\uFF1A\u8BA2\u9605\u6D88\u606F\uFF1A\u6307\u5B9A\u6D88\u606F\u540D\u548C\u8BA2\u9605\u8005\u56DE\u8C03\u51FD\u6570</li><li>PubSub.publish(msg, data)\uFF1A\u5F02\u6B65\u53D1\u5E03\u6D88\u606F\uFF1A\u6307\u5B9A\u6D88\u606F\u540D\u548C\u6570\u636E</li><li>PubSub.publishSync(msg, data)\uFF1A\u540C\u6B65\u53D1\u5E03\u6D88\u606F\uFF1A\u6307\u5B9A\u6D88\u606F\u540D\u548C\u6570\u636E</li><li>PubSub.unsubscribe(flag)\uFF1A\u53D6\u6D88\u8BA2\u9605\uFF1A\u6839\u636E\u6807\u8BC6\u53D6\u6D88\u67D0\u4E2A\u6216\u8005\u67D0\u4E9B\u6D88\u606F\u7684\u8BA2\u9605</li></ol><h3 id="_7-2-\u7F16\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_7-2-\u7F16\u7801\u5B9E\u73B0" aria-hidden="true">#</a> 7.2 \u7F16\u7801\u5B9E\u73B0</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> PubSub <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token comment">// \u4FDD\u5B58\u6240\u6709\u56DE\u8C03\u7684\u5BB9\u5668</span>
<span class="token keyword">let</span> callbacksObj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token comment">// \u7528\u4E8E\u751F\u6210token\u7684\u6807\u8BB0</span>
<span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token number">0</span>

<span class="token comment">// \u8BA2\u9605\u6D88\u606F</span>
PubSub<span class="token punctuation">.</span><span class="token function-variable function">subscribe</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">msgName<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> token <span class="token operator">=</span> <span class="token string">&#39;token_&#39;</span> <span class="token operator">+</span> <span class="token operator">++</span>id
  <span class="token comment">// \u53D6\u51FA\u5F53\u524D\u6D88\u606F\u5BF9\u5E94\u7684callbacks</span>
  <span class="token keyword">const</span> callbacks <span class="token operator">=</span> callbacksObj<span class="token punctuation">[</span>msgName<span class="token punctuation">]</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>callbacks<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    callbacksObj<span class="token punctuation">[</span>msgName<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token punctuation">[</span>token<span class="token punctuation">]</span><span class="token operator">:</span> callback<span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    callbacks<span class="token punctuation">[</span>token<span class="token punctuation">]</span> <span class="token operator">=</span> callback
  <span class="token punctuation">}</span>
  <span class="token comment">// \u8FD4\u56DE token</span>
  <span class="token keyword">return</span> token
<span class="token punctuation">}</span>
<span class="token comment">// \u53D1\u5E03\u5F02\u6B65\u6D88\u606F</span>
PubSub<span class="token punctuation">.</span><span class="token function-variable function">publish</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">msgName<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u53D6\u51FA\u5F53\u524D\u6D88\u606F\u5BF9\u5E94\u7684callbacks</span>
  <span class="token keyword">let</span> callbacks <span class="token operator">=</span> callbacksObj<span class="token punctuation">[</span>msgName<span class="token punctuation">]</span>
  <span class="token comment">// \u5982\u679C\u6709\u503C</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>callbacks<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u542F\u52A8\u5B9A\u65F6\u5668\uFF0C\u5F02\u6B65\u6267\u884C\u6240\u6709\u7684\u56DE\u8C03\u51FD\u6570</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>callbacks<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">callback</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u53D1\u5E03\u540C\u6B65\u6D88\u606F</span>
PubSub<span class="token punctuation">.</span><span class="token function-variable function">publishSync</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">msgName<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u53D6\u51FA\u5F53\u524D\u6D88\u606F\u5BF9\u5E94\u7684callbacks</span>
  <span class="token keyword">const</span> callbacks <span class="token operator">=</span> callbacksObj<span class="token punctuation">[</span>msgName<span class="token punctuation">]</span>
  <span class="token comment">// \u5982\u679C\u6709\u503C</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>callbacks<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u7ACB\u5373\u540C\u6B65\u6267\u884C\u6240\u6709\u7684\u56DE\u8C03\u51FD\u6570</span>
    Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>callbacks<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">callback</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u53D6\u6D88\u8BA2\u9605\u6D88\u606F</span>
<span class="token comment">// 1. \u6CA1\u6709\u4F20\u503C\uFF0Cflag\u4E3A undefined</span>
<span class="token comment">// 2. \u4F20\u5165 token \u5B57\u7B26\u4E32</span>
<span class="token comment">// 3. msgName \u5B57\u7B26\u4E32</span>
PubSub<span class="token punctuation">.</span><span class="token function-variable function">unsubscribe</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">flag</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5982\u679C flag \u6CA1\u6709\u6307\u5B9A\u6216\u8005\u4E3A null, \u53D6\u6D88\u6240\u6709</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>flag <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    callbacksObj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> flag <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;token_&#39;</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5982\u679C flag \u662F token</span>
      <span class="token comment">// \u627E\u5230 flag \u5BF9\u5E94\u7684 callbacks</span>
      <span class="token keyword">const</span> callbacks <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>callbacksObj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">callbacks</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
        callbacks<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>
      <span class="token punctuation">)</span>
      <span class="token comment">// \u5982\u679C\u5B58\u5728\uFF0C\u5220\u9664\u5BF9\u5E94\u7684\u5C5E\u6027</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>callbacks<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">delete</span> callbacks<span class="token punctuation">[</span>flag<span class="token punctuation">]</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5426\u5219\u5C31\u662F msgName</span>
      <span class="token keyword">delete</span> callbacksObj<span class="token punctuation">[</span>flag<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6D4B\u8BD5\u4EE3\u7801</span>
<span class="token keyword">const</span> payToken1 <span class="token operator">=</span> PubSub<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token string">&#39;pay&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u5546\u5BB6\u63A5\u5230\u4E86\u8BA2\u5355\uFF0C\u51C6\u5907\u5F00\u59CB\u5236\u4F5C&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> payToken2 <span class="token operator">=</span> PubSub<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token string">&#39;pay&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u9A91\u624B\u63A5\u5230\u4E86\u8BA2\u5355\uFF0C\u51C6\u5907\u5F00\u59CB\u53BB\u53D6\u9910&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> cancelToken1 <span class="token operator">=</span> PubSub<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token string">&#39;cancel&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u5546\u5BB6\u63A5\u5230\u4E86\u53D6\u6D88\u7684\u901A\u77E5&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u53D1\u5E03\u6D88\u606F</span>
  PubSub<span class="token punctuation">.</span><span class="token function">publish</span><span class="token punctuation">(</span><span class="token string">&#39;pay&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;\u9C7C\u9999\u8089\u4E1D&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">price</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
    <span class="token literal-property property">pos</span><span class="token operator">:</span> <span class="token string">&#39;\u4E09\u5E74\u4E8C\u73ED&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span>

<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  PubSub<span class="token punctuation">.</span><span class="token function">unsubscribe</span><span class="token punctuation">(</span>payToken1<span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>callbacksObj<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span>

<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  PubSub<span class="token punctuation">.</span><span class="token function">unsubscribe</span><span class="token punctuation">(</span><span class="token string">&#39;pay&#39;</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>callbacksObj<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">4000</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br></div></div><h2 id="_8\u3001\u624B\u5199-ajax-\u6A21\u62DF-axios" tabindex="-1"><a class="header-anchor" href="#_8\u3001\u624B\u5199-ajax-\u6A21\u62DF-axios" aria-hidden="true">#</a> 8\u3001\u624B\u5199 Ajax (\u6A21\u62DF axios)</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u624B\u5199 ajax \u51FD\u6570\uFF0C\u6A21\u62DF axios</span>
<span class="token keyword">function</span> <span class="token function">myAxios</span><span class="token punctuation">(</span><span class="token punctuation">{</span> url<span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token string">&#39;GEY&#39;</span><span class="token punctuation">,</span> params <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u8FD4\u56DE\u4E00\u4E2A promise</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5904\u7406method(\u8F6C\u4E3A\u5927\u5199)</span>
    method <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// \u5904\u7406 queryString</span>
    <span class="token keyword">let</span> queryString <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
    Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      queryString <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>params<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;</span><span class="token template-punctuation string">\`</span></span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>queryString<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u53BB\u9664\u6700\u540E\u4E00\u4F4D\u7684 &amp;</span>
      queryString <span class="token operator">=</span> queryString<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
      url <span class="token operator">+=</span> <span class="token string">&#39;?&#39;</span> <span class="token operator">+</span> queryString
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// \u6253\u5F00\u94FE\u63A5\uFF08\u521D\u59CB\u5316\u8BF7\u6C42\uFF09</span>
    request<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> url<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>method <span class="token operator">===</span> <span class="token string">&#39;GET&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      request<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>method <span class="token operator">===</span> <span class="token string">&#39;POST&#39;</span> <span class="token operator">||</span> method <span class="token operator">===</span> <span class="token string">&#39;PUT&#39;</span> <span class="token operator">||</span> method <span class="token operator">===</span> <span class="token string">&#39;DELETE&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u544A\u8BC9\u670D\u52A1\u5668\u8BF7\u6C42\u4F53\u7684\u683C\u5F0F\u662F json</span>
      request<span class="token punctuation">.</span><span class="token function">setRequestHeader</span><span class="token punctuation">(</span><span class="token string">&#39;Content-type&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;application/json;charset=utf-8&#39;</span><span class="token punctuation">)</span>
      <span class="token comment">// \u53D1\u9001json \u683C\u5F0F\u8BF7\u6C42\u4F53\u53C2\u6570</span>
      request<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    request<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5982\u679C\u8BF7\u6C42\u6CA1\u6709\u7ED3\u675F</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>request<span class="token punctuation">.</span>readyState <span class="token operator">!==</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span> status<span class="token punctuation">,</span> statusText <span class="token punctuation">}</span> <span class="token operator">=</span> request
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>status <span class="token operator">&gt;=</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token punctuation">(</span>status <span class="token operator">&lt;</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>response<span class="token punctuation">)</span><span class="token punctuation">,</span>
          status<span class="token punctuation">,</span>
          statusText<span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;request error status is &#39;</span> <span class="token operator">+</span> status<span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">/* \u53D1\u9001\u7279\u5B9A\u8BF7\u6C42\u7684\u9759\u6001\u65B9\u6CD5 */</span>
myAxios<span class="token punctuation">.</span><span class="token function-variable function">get</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">myAxios</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>options<span class="token punctuation">,</span> <span class="token punctuation">{</span> url<span class="token punctuation">,</span> <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;GET&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
myAxios<span class="token punctuation">.</span><span class="token function-variable function">delete</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">myAxios</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>options<span class="token punctuation">,</span> <span class="token punctuation">{</span> url<span class="token punctuation">,</span> <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;DELETE&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
myAxios<span class="token punctuation">.</span><span class="token function-variable function">post</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> data<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">myAxios</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>options<span class="token punctuation">,</span> <span class="token punctuation">{</span> url<span class="token punctuation">,</span> data<span class="token punctuation">,</span> <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
myAxios<span class="token punctuation">.</span><span class="token function-variable function">put</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> data<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">myAxios</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>options<span class="token punctuation">,</span> <span class="token punctuation">{</span> url<span class="token punctuation">,</span> data<span class="token punctuation">,</span> <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;PUT&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br></div></div>`,38);function y(g,h){const p=t("ExternalLinkIcon");return e(),o(l,null,[i,n("ul",null,[k,n("li",null,[n("p",null,[b,n("a",m,[d,c(p)])])])]),f],64)}var j=u(r,[["render",y]]);export{j as default};
